public class org.gjt.sp.jedit.bsh.Parser extends java.lang.Object implements org.gjt.sp.jedit.bsh.ParserTreeConstants, org.gjt.sp.jedit.bsh.ParserConstants
{
    protected org.gjt.sp.jedit.bsh.JJTParserState jjtree;
    boolean retainComments;
    public org.gjt.sp.jedit.bsh.ParserTokenManager token_source;
    org.gjt.sp.jedit.bsh.JavaCharStream jj_input_stream;
    public org.gjt.sp.jedit.bsh.Token token;
    public org.gjt.sp.jedit.bsh.Token jj_nt;
    private int jj_ntk;
    private org.gjt.sp.jedit.bsh.Token jj_scanpos;
    private org.gjt.sp.jedit.bsh.Token jj_lastpos;
    private int jj_la;
    public boolean lookingAhead;
    private boolean jj_semLA;
    private final org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess jj_ls;

    public void setRetainComments(boolean)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean z0;

        r0 := @this;

        z0 := @parameter0;

        r0.retainComments = z0;

        return;
    }

    void jjtreeOpenNodeScope(org.gjt.sp.jedit.bsh.Node)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Node r1;
        org.gjt.sp.jedit.bsh.SimpleNode $r2;
        org.gjt.sp.jedit.bsh.Token $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 = (org.gjt.sp.jedit.bsh.SimpleNode) r1;

        $r3 = r0.getToken(1);

        $r2.firstToken = $r3;

        return;
    }

    void jjtreeCloseNodeScope(org.gjt.sp.jedit.bsh.Node)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Node r1;
        org.gjt.sp.jedit.bsh.SimpleNode $r2;
        org.gjt.sp.jedit.bsh.Token $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 = (org.gjt.sp.jedit.bsh.SimpleNode) r1;

        $r3 = r0.getToken(0);

        $r2.lastToken = $r3;

        return;
    }

    void reInitInput(java.io.Reader)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.Reader r1;

        r0 := @this;

        r1 := @parameter0;

        r0.ReInit(r1);

        return;
    }

    public org.gjt.sp.jedit.bsh.SimpleNode popNode()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.JJTParserState $r1, $r2;
        int $i0;
        org.gjt.sp.jedit.bsh.Node $r3;
        org.gjt.sp.jedit.bsh.SimpleNode $r4;

        r0 := @this;

        $r1 = r0.jjtree;

        $i0 = $r1.nodeArity();

        if $i0 <= 0 goto label1;

        $r2 = r0.jjtree;

        $r3 = $r2.popNode();

        $r4 = (org.gjt.sp.jedit.bsh.SimpleNode) $r3;

        return $r4;

     label1:
        return null;
    }

    void reInitTokenInput(java.io.Reader)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.Reader r1;
        org.gjt.sp.jedit.bsh.JavaCharStream $r2, $r3, $r4;
        int $i0, $i1;

        r0 := @this;

        r1 := @parameter0;

        $r3 = r0.jj_input_stream;

        $r2 = r0.jj_input_stream;

        $i0 = $r2.getEndLine();

        $r4 = r0.jj_input_stream;

        $i1 = $r4.getEndColumn();

        $r3.ReInit(r1, $i0, $i1);

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.gjt.sp.jedit.bsh.ParseException
    {
        java.lang.String[] r0;
        java.io.FileReader r1, $r4;
        org.gjt.sp.jedit.bsh.Parser r2, $r6;
        java.lang.String $r3, $r5;
        boolean $z0, $z1, z2, z2_1;
        int $i0, i1, i1_1;
        java.io.PrintStream $r7;
        org.gjt.sp.jedit.bsh.SimpleNode $r8;

        r0 := @parameter0;

        z2 = 0;

        i1 = 0;

        $r3 = r0[0];

        $z0 = $r3.equals("-p");

(0)     if $z0 == 0 goto label1;

        i1_1 = i1 + 1;

(1)     z2_1 = 1;

     label1:
        z2 = Phi(z2 #0, z2_1 #1, z2 #5);

        i1 = Phi(i1 #0, i1_1 #1, i1 #5);

        $i0 = lengthof r0;

        if i1 >= $i0 goto label4;

        $r4 = new java.io.FileReader;

        $r5 = r0[i1];

        specialinvoke $r4.<init>($r5);

        r1 = $r4;

        $r6 = new org.gjt.sp.jedit.bsh.Parser;

        specialinvoke $r6.<init>(r1);

        r2 = $r6;

(2)     r2.setRetainComments(1);

     label2:
        z2 = Phi(z2 #2, z2 #3, z2 #4);

        i1 = Phi(i1 #2, i1 #3, i1 #4);

        $z1 = r2.Line();

        if $z1 != 0 goto label3;

(3)     if z2 == 0 goto label2;

        $r7 = java.lang.System.out;

        $r8 = r2.popNode();

        $r7.println($r8);

(4)     goto label2;

     label3:
        i1 = i1 + 1;

(5)     goto label1;

     label4:
        return;
    }

    boolean isRegularForStatement()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1, $i2, $i3, i5, i6;
        byte b4;
        org.gjt.sp.jedit.bsh.Token r1, r2, r3;

        r0 := @this;

        b4 = 1;

        i5 = b4 + 1;

        r1 = r0.getToken(b4);

        $i0 = r1.kind;

        if $i0 == 30 goto label1;

        return 0;

     label1:
        i6 = i5 + 1;

        r2 = r0.getToken(i5);

        $i1 = r2.kind;

(0)     if $i1 == 72 goto label2;

        return 0;

     label2:
        i6 = Phi(i6 #0, i6 #1);

        $i2 = i6;

        i6 = i6 + 1;

        r3 = r0.getToken($i2);

        $i3 = r3.kind;

        lookupswitch($i3)
        {
            case 0: goto label5;
            case 78: goto label4;
            case 89: goto label3;
            default: goto label6;
        };

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;

     label6:
(1)     goto label2;
    }

    org.gjt.sp.jedit.bsh.ParseException createParseException(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.lang.String r1, r3, $r12, $r14, $r14_1, $r14_2;
        org.gjt.sp.jedit.bsh.Token r2;
        int i0, i1, $i2;
        org.gjt.sp.jedit.bsh.ParseException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String[] $r13;

        r0 := @this;

        r1 := @parameter0;

        r2 = r0.token;

        i0 = r2.beginLine;

        i1 = r2.beginColumn;

        $i2 = r2.kind;

        if $i2 != 0 goto label1;

        $r13 = org.gjt.sp.jedit.bsh.Parser.tokenImage;

        $r14 = $r13[0];

(0)     goto label2;

     label1:
(1)     $r14_1 = r2.image;

     label2:
        $r14_2 = Phi($r14 #0, $r14_1 #1);

        r3 = $r14_2;

        $r4 = new org.gjt.sp.jedit.bsh.ParseException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r6 = $r5.append("Parse error at line ");

        $r7 = $r6.append(i0);

        $r8 = $r7.append(", column ");

        $r9 = $r8.append(i1);

        $r10 = $r9.append(" : ");

        $r11 = $r10.append(r1);

        $r12 = $r11.toString();

        specialinvoke $r4.<init>($r12);

        return $r4;
    }

    public final boolean Line() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1, $i1_1, $i1_2;
        boolean $z0;
        org.gjt.sp.jedit.bsh.ParseException $r3;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label1;

        $i1 = specialinvoke r0.jj_ntk();

(0)     goto label2;

     label1:
(1)     $i1_1 = r0.jj_ntk;

     label2:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        lookupswitch($i1_2)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        specialinvoke r0.jj_consume_token(0);

        org.gjt.sp.jedit.bsh.Interpreter.debug("End of File!");

        return 1;

     label4:
        $z0 = specialinvoke r0.jj_2_1(1);

        if $z0 == 0 goto label5;

        r0.BlockStatement();

        return 0;

     label5:
        specialinvoke r0.jj_consume_token(-1);

        $r3 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r3.<init>();

        throw $r3;
    }

    public final org.gjt.sp.jedit.bsh.Modifiers Modifiers(int, boolean) throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0;
        java.lang.IllegalStateException r1, $r18;
        org.gjt.sp.jedit.bsh.Token $r3;
        java.lang.String $r4, $r19;
        org.gjt.sp.jedit.bsh.Modifiers $r5, r21;
        org.gjt.sp.jedit.bsh.ParseException $r17, $r20;

        r0 := @this;

        i0 := @parameter0;

        z0 := @parameter1;

(0)     r21 = null;

     label01:
        $i3 = Phi($i3 #0, $i3 #5, $i3 #8);

        r21 = Phi(r21 #0, r21 #5, r21 #8);

        $i4 = Phi($i4 #0, $i4 #5, $i4 #8);

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 10: goto label04;
            case 27: goto label04;
            case 39: goto label04;
            case 43: goto label04;
            case 44: goto label04;
            case 45: goto label04;
            case 48: goto label04;
            case 49: goto label04;
            case 51: goto label04;
            case 52: goto label04;
            case 58: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label26;

     label06:
        $i2 = r0.jj_ntk;

        if $i2 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 10: goto label17;
            case 27: goto label13;
            case 39: goto label14;
            case 43: goto label09;
            case 44: goto label10;
            case 45: goto label11;
            case 48: goto label18;
            case 49: goto label19;
            case 51: goto label12;
            case 52: goto label15;
            case 58: goto label16;
            default: goto label20;
        };

     label09:
        specialinvoke r0.jj_consume_token(43);

        goto label21;

     label10:
        specialinvoke r0.jj_consume_token(44);

        goto label21;

     label11:
        specialinvoke r0.jj_consume_token(45);

        goto label21;

     label12:
        specialinvoke r0.jj_consume_token(51);

        goto label21;

     label13:
        specialinvoke r0.jj_consume_token(27);

        goto label21;

     label14:
        specialinvoke r0.jj_consume_token(39);

        goto label21;

     label15:
        specialinvoke r0.jj_consume_token(52);

        goto label21;

     label16:
        specialinvoke r0.jj_consume_token(58);

        goto label21;

     label17:
        specialinvoke r0.jj_consume_token(10);

        goto label21;

     label18:
        specialinvoke r0.jj_consume_token(48);

        goto label21;

     label19:
        specialinvoke r0.jj_consume_token(49);

        goto label21;

     label20:
        specialinvoke r0.jj_consume_token(-1);

        $r17 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r17.<init>();

        throw $r17;

     label21:
(5)     if z0 != 0 goto label01;

     label22:
(6)     if r21 != null goto label23;

        $r5 = new org.gjt.sp.jedit.bsh.Modifiers;

        specialinvoke $r5.<init>();

(7)     r21 = $r5;

     label23:
        r21 = Phi(r21 #6, r21 #7);

        $r3 = r0.getToken(0);

        $r4 = $r3.image;

        r21.addModifier(i0, $r4);

     label24:
(8)     goto label01;

     label25:
        $r18 := @caughtexception;

        r21 = Phi(r21 #6);

        r1 = $r18;

        $r19 = r1.getMessage();

        $r20 = r0.createParseException($r19);

        throw $r20;

     label26:
        return r21;

        catch java.lang.IllegalStateException from label22 to label24 with label25;
    }

    public final void ClassDeclaration() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHClassDeclaration r1, $r6;
        org.gjt.sp.jedit.bsh.Modifiers r2;
        org.gjt.sp.jedit.bsh.Token r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i4_1, $i4_2, $i5_1, $i5_2, $i6_1, $i6_2, $i4_3, $i6_3, $i5_3;
        java.lang.Throwable r4, r5, $r17, $r19;
        org.gjt.sp.jedit.bsh.JJTParserState $r7, $r11, $r13, $r18, $r20, $r25;
        java.lang.String $r12;
        org.gjt.sp.jedit.bsh.ParseException $r16, $r23;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4;
        java.lang.Error $r22;
        java.lang.RuntimeException $r24;

        r0 := @this;

        $r6 = new org.gjt.sp.jedit.bsh.BSHClassDeclaration;

        specialinvoke $r6.<init>(1);

        r1 = $r6;

        z2 = 1;

        $r7 = r0.jjtree;

        $r7.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r2 = r0.Modifiers(0, 0);

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label02;

        $i4 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i4_1 = r0.jj_ntk;

     label03:
        $i4_2 = Phi($i4 #1, $i4_1 #2);

(3)     lookupswitch($i4_2)
        {
            case 13: goto label04;
            case 37: goto label05;
            default: goto label06;
        };

     label04:
        specialinvoke r0.jj_consume_token(13);

        goto label07;

     label05:
        specialinvoke r0.jj_consume_token(37);

        r1.isInterface = 1;

        goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r16 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r16.<init>();

        throw $r16;

     label07:
        r3 = specialinvoke r0.jj_consume_token(69);

        $i2 = r0.jj_ntk;

        if $i2 != -1 goto label08;

        $i5 = specialinvoke r0.jj_ntk();

(4)     goto label09;

     label08:
(5)     $i5_1 = r0.jj_ntk;

     label09:
        $i5_2 = Phi($i5 #4, $i5_1 #5);

(6)     lookupswitch($i5_2)
        {
            case 25: goto label10;
            default: goto label11;
        };

     label10:
        specialinvoke r0.jj_consume_token(25);

        r0.AmbiguousName();

        r1.extend = 1;

        goto label11;

     label11:
        $i3 = r0.jj_ntk;

        if $i3 != -1 goto label12;

        $i6 = specialinvoke r0.jj_ntk();

(7)     goto label13;

     label12:
(8)     $i6_1 = r0.jj_ntk;

     label13:
        $i6_2 = Phi($i6 #7, $i6_1 #8);

(9)     lookupswitch($i6_2)
        {
            case 33: goto label14;
            default: goto label15;
        };

     label14:
        specialinvoke r0.jj_consume_token(33);

        i0 = r0.NameList();

        r1.numInterfaces = i0;

        goto label15;

     label15:
        r0.Block();

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

(10)    z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.modifiers = r2;

        $r12 = r3.image;

        r1.name = $r12;

     label16:
        if z2_1 == 0 goto label25;

        $r13 = r0.jjtree;

        $r13.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label25;

     label17:
        $r19 := @caughtexception;

        $i4_3 = Phi($i4 #0, $i4_1 #2, $i4_2 #3);

        z2_2 = Phi(z2 #0, z2_1 #10);

        $i6_3 = Phi($i6 #0, $i6_1 #8, $i6_2 #9);

(11)    $i5_3 = Phi($i5 #0, $i5_1 #5, $i5_2 #6);

        r4 = $r19;

        if z2_2 == 0 goto label18;

        $r25 = r0.jjtree;

        $r25.clearNodeScope(r1);

(12)    z2_3 = 0;

(13)    goto label19;

     label18:
        $r20 = r0.jjtree;

(14)    $r20.popNode();

     label19:
        z2_4 = Phi(z2_3 #13, z2_2 #14);

(15)    $z0 = r4 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label20;

        $r24 = (java.lang.RuntimeException) r4;

        throw $r24;

     label20:
        $z1 = r4 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label21;

        $r23 = (org.gjt.sp.jedit.bsh.ParseException) r4;

        throw $r23;

     label21:
        $r22 = (java.lang.Error) r4;

        throw $r22;

     label22:
        $r17 := @caughtexception;

        $i4 = Phi($i4_3 #11, $i4 #16, $i4 #0, $i4_1 #2, $i4_2 #3);

        z2 = Phi(z2_2 #11, z2_3 #12, z2_4 #15, z2 #16, z2 #0, z2_1 #10);

        $i6 = Phi($i6_3 #11, $i6 #16, $i6 #0, $i6_1 #8, $i6_2 #9);

(16)    $i5 = Phi($i5_3 #11, $i5 #16, $i5 #0, $i5_1 #5, $i5_2 #6);

        r5 = $r17;

     label23:
        if z2 == 0 goto label24;

        $r18 = r0.jjtree;

        $r18.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label24:
        throw r5;

     label25:
        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label01 to label16 with label22;
        catch java.lang.Throwable from label17 to label23 with label22;
    }

    public final void MethodDeclaration() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHMethodDeclaration r1, $r5;
        org.gjt.sp.jedit.bsh.Modifiers r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i4_1, $i4_2, $i4_3, $i5_1, $i5_2, $i6_1, $i6_2, $i5_3, $i4_4, $i6_3;
        java.lang.Throwable r3, r4, $r12, $r18;
        org.gjt.sp.jedit.bsh.JJTParserState $r6, $r8, $r13, $r17, $r19;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2;
        java.lang.String $r7, $r11;
        org.gjt.sp.jedit.bsh.ParseException $r9, $r10, $r15;
        java.lang.Error $r14;
        java.lang.RuntimeException $r16;
        org.gjt.sp.jedit.bsh.Token r20, r21;

        r0 := @this;

        $r5 = new org.gjt.sp.jedit.bsh.BSHMethodDeclaration;

        specialinvoke $r5.<init>(2);

        r1 = $r5;

        z3 = 1;

        $r6 = r0.jjtree;

        $r6.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r2 = r0.Modifiers(1, 0);

        r1.modifiers = r2;

        $z0 = specialinvoke r0.jj_2_2(2147483647);

        if $z0 == 0 goto label02;

        r20 = specialinvoke r0.jj_consume_token(69);

        $r11 = r20.image;

        r1.name = $r11;

(1)     goto label07;

     label02:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label03;

        $i4 = specialinvoke r0.jj_ntk();

(2)     goto label04;

     label03:
(3)     $i4_1 = r0.jj_ntk;

     label04:
        $i4_2 = Phi($i4 #2, $i4_1 #3);

(4)     lookupswitch($i4_2)
        {
            case 11: goto label05;
            case 14: goto label05;
            case 17: goto label05;
            case 22: goto label05;
            case 29: goto label05;
            case 36: goto label05;
            case 38: goto label05;
            case 47: goto label05;
            case 57: goto label05;
            case 69: goto label05;
            default: goto label06;
        };

     label05:
        r0.ReturnType();

        r21 = specialinvoke r0.jj_consume_token(69);

        $r7 = r21.image;

        r1.name = $r7;

(5)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label07:
        $i4_3 = Phi($i4 #1, $i4_2 #5);

(6)     r0.FormalParameters();

        $i2 = r0.jj_ntk;

        if $i2 != -1 goto label08;

        $i5 = specialinvoke r0.jj_ntk();

(7)     goto label09;

     label08:
(8)     $i5_1 = r0.jj_ntk;

     label09:
        $i5_2 = Phi($i5 #7, $i5_1 #8);

(9)     lookupswitch($i5_2)
        {
            case 54: goto label10;
            default: goto label11;
        };

     label10:
        specialinvoke r0.jj_consume_token(54);

        i0 = r0.NameList();

        r1.numThrows = i0;

        goto label11;

     label11:
        $i3 = r0.jj_ntk;

        if $i3 != -1 goto label12;

        $i6 = specialinvoke r0.jj_ntk();

(10)    goto label13;

     label12:
(11)    $i6_1 = r0.jj_ntk;

     label13:
        $i6_2 = Phi($i6 #10, $i6_1 #11);

(12)    lookupswitch($i6_2)
        {
            case 74: goto label14;
            case 78: goto label15;
            default: goto label16;
        };

     label14:
        r0.Block();

        goto label17;

     label15:
        specialinvoke r0.jj_consume_token(78);

        goto label17;

     label16:
        specialinvoke r0.jj_consume_token(-1);

        $r9 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r9.<init>();

        throw $r9;

     label17:
        if 1 == 0 goto label26;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label26;

     label18:
        $r12 := @caughtexception;

        $i5_3 = Phi($i5 #0, $i5_1 #8, $i5_2 #9);

        $i4_4 = Phi($i4 #0, $i4_1 #3, $i4_2 #4, $i4_3 #6);

(13)    $i6_3 = Phi($i6 #0, $i6_1 #11, $i6_2 #12);

        r3 = $r12;

        if 1 == 0 goto label19;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

(14)    z3_1 = 0;

(15)    goto label20;

     label19:
        $r13 = r0.jjtree;

(16)    $r13.popNode();

     label20:
        z3_2 = Phi(z3_1 #15, z3 #16);

(17)    $z1 = r3 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label21;

        $r16 = (java.lang.RuntimeException) r3;

        throw $r16;

     label21:
        $z2 = r3 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label22;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r3;

        throw $r15;

     label22:
        $r14 = (java.lang.Error) r3;

        throw $r14;

     label23:
        $r18 := @caughtexception;

        z3 = Phi(z3_1 #14, z3_2 #17, z3 #18, z3 #0);

        $i5 = Phi($i5_3 #13, $i5 #18, $i5 #0, $i5_1 #8, $i5_2 #9);

        $i4 = Phi($i4_4 #13, $i4 #18, $i4 #0, $i4_1 #3, $i4_2 #4, $i4_3 #6);

(18)    $i6 = Phi($i6_3 #13, $i6 #18, $i6 #0, $i6_1 #11, $i6_2 #12);

        r4 = $r18;

     label24:
        if z3 == 0 goto label25;

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label25:
        throw r4;

     label26:
        return;

        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label01 to label17 with label23;
        catch java.lang.Throwable from label18 to label24 with label23;
    }

    public final void PackageDeclaration() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHPackageDeclaration r1, $r4;
        java.lang.Throwable r2, r3, $r8, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r7, $r9, $r14, $r16;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r11;
        org.gjt.sp.jedit.bsh.ParseException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHPackageDeclaration;

        specialinvoke $r4.<init>(3);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(42);

        r0.AmbiguousName();

     label02:
        if z2 == 0 goto label11;

        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
        $r8 := @caughtexception;

        r2 = $r8;

        if z2 == 0 goto label04;

        $r14 = r0.jjtree;

        $r14.clearNodeScope(r1);

(1)     z2_1 = 0;

(2)     goto label05;

     label04:
        $r9 = r0.jjtree;

(3)     $r9.popNode();

     label05:
        z2_2 = Phi(z2_1 #2, z2 #3);

(4)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r13 = (java.lang.RuntimeException) r2;

        throw $r13;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r12 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r12;

     label07:
        $r11 = (java.lang.Error) r2;

        throw $r11;

     label08:
        $r15 := @caughtexception;

(5)     z2 = Phi(z2_1 #1, z2_2 #4, z2 #5, z2 #0);

        r3 = $r15;

     label09:
        if z2 == 0 goto label10;

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void ImportDeclaration() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHImportDeclaration r1, $r4;
        java.lang.Throwable r2, r3, $r17, $r19;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r9, $r10, $r16, $r18, $r20, $r25;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2, z3_3, z3_4, z3_5, z3_6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i3_1, $i3_2, $i4_1, $i4_2, $i5_1, $i5_2, $i5_3, $i4_3, $i3_3, $i5_4, $i4_4, $i3_4;
        org.gjt.sp.jedit.bsh.ParseException $r12, $r23;
        java.lang.Error $r22;
        java.lang.RuntimeException $r24;
        org.gjt.sp.jedit.bsh.Token r26, r27, r26_1, r26_2, r27_1, r27_2, r27_3, r26_3, r27_4, r26_4;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHImportDeclaration;

        specialinvoke $r4.<init>(4);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

        r0.jjtreeOpenNodeScope(r1);

        r26 = null;

(0)     r27 = null;

     label01:
        $z0 = specialinvoke r0.jj_2_3(3);

        if $z0 == 0 goto label11;

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3_1 = r0.jj_ntk;

     label03:
        $i3_2 = Phi($i3 #1, $i3_1 #2);

(3)     lookupswitch($i3_2)
        {
            case 48: goto label04;
            default: goto label05;
        };

     label04:
(4)     r26_1 = specialinvoke r0.jj_consume_token(48);

(5)     goto label05;

     label05:
        r26_2 = Phi(r26 #3, r26_1 #5);

(6)     specialinvoke r0.jj_consume_token(34);

        r0.AmbiguousName();

        $i2 = r0.jj_ntk;

        if $i2 != -1 goto label06;

        $i4 = specialinvoke r0.jj_ntk();

(7)     goto label07;

     label06:
(8)     $i4_1 = r0.jj_ntk;

     label07:
        $i4_2 = Phi($i4 #7, $i4_1 #8);

(9)     lookupswitch($i4_2)
        {
            case 80: goto label08;
            default: goto label09;
        };

     label08:
(10)    r27_1 = specialinvoke r0.jj_consume_token(80);

        specialinvoke r0.jj_consume_token(104);

(11)    goto label09;

     label09:
        r27_2 = Phi(r27 #9, r27_1 #11);

(12)    specialinvoke r0.jj_consume_token(78);

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

(13)    z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        if r26_2 == null goto label10;

        r1.staticImport = 1;

     label10:
(14)    if r27_2 == null goto label16;

        r1.importPackage = 1;

(15)    goto label16;

     label11:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label12;

        $i5 = specialinvoke r0.jj_ntk();

(16)    goto label13;

     label12:
(17)    $i5_1 = r0.jj_ntk;

     label13:
        $i5_2 = Phi($i5 #16, $i5_1 #17);

(18)    lookupswitch($i5_2)
        {
            case 34: goto label14;
            default: goto label15;
        };

     label14:
        specialinvoke r0.jj_consume_token(34);

        specialinvoke r0.jj_consume_token(104);

        specialinvoke r0.jj_consume_token(78);

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

(19)    z3_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.superImport = 1;

(20)    goto label16;

     label15:
        specialinvoke r0.jj_consume_token(-1);

        $r12 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r12.<init>();

        throw $r12;

     label16:
        r27_3 = Phi(r27_2 #14, r27_2 #15, r27 #20);

        z3_3 = Phi(z3_1 #14, z3_1 #15, z3_2 #20);

        $i5_3 = Phi($i5 #14, $i5 #15, $i5_2 #20);

        $i4_3 = Phi($i4_2 #14, $i4_2 #15, $i4 #20);

        $i3_3 = Phi($i3_2 #14, $i3_2 #15, $i3 #20);

        r26_3 = Phi(r26_2 #14, r26_2 #15, r26 #20);

        if z3_3 == 0 goto label25;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label25;

     label17:
        $r19 := @caughtexception;

        r27_4 = Phi(r27 #0, r27_1 #10, r27_2 #12);

        z3_4 = Phi(z3 #0, z3_1 #13, z3_2 #19);

        $i5_4 = Phi($i5 #0, $i5_1 #17, $i5_2 #18);

        $i4_4 = Phi($i4 #0, $i4_1 #8, $i4_2 #9);

        $i3_4 = Phi($i3 #0, $i3_1 #2, $i3_2 #3);

(21)    r26_4 = Phi(r26 #0, r26_1 #4, r26_2 #6);

        r2 = $r19;

        if z3_4 == 0 goto label18;

        $r25 = r0.jjtree;

        $r25.clearNodeScope(r1);

(22)    z3_5 = 0;

(23)    goto label19;

     label18:
        $r20 = r0.jjtree;

(24)    $r20.popNode();

     label19:
        z3_6 = Phi(z3_5 #23, z3_4 #24);

(25)    $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label20;

        $r24 = (java.lang.RuntimeException) r2;

        throw $r24;

     label20:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label21;

        $r23 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r23;

     label21:
        $r22 = (java.lang.Error) r2;

        throw $r22;

     label22:
        $r17 := @caughtexception;

        r27 = Phi(r27_4 #21, r27 #26, r27 #0, r27_1 #10, r27_2 #12);

        z3 = Phi(z3_4 #21, z3_5 #22, z3_6 #25, z3 #26, z3 #0, z3_1 #13, z3_2 #19);

        $i5 = Phi($i5_4 #21, $i5 #26, $i5 #0, $i5_1 #17, $i5_2 #18);

        $i4 = Phi($i4_4 #21, $i4 #26, $i4 #0, $i4_1 #8, $i4_2 #9);

        $i3 = Phi($i3_4 #21, $i3 #26, $i3 #0, $i3_1 #2, $i3_2 #3);

(26)    r26 = Phi(r26_4 #21, r26 #26, r26 #0, r26_1 #4, r26_2 #6);

        r3 = $r17;

     label23:
        if z3 == 0 goto label24;

        $r18 = r0.jjtree;

        $r18.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label24:
        throw r3;

     label25:
        return;

        catch java.lang.Throwable from label01 to label16 with label17;
        catch java.lang.Throwable from label01 to label16 with label22;
        catch java.lang.Throwable from label17 to label23 with label22;
    }

    public final void VariableDeclarator() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHVariableDeclarator r1, $r5;
        org.gjt.sp.jedit.bsh.Token r2;
        java.lang.Throwable r3, r4, $r11, $r18;
        org.gjt.sp.jedit.bsh.JJTParserState $r6, $r8, $r10, $r12, $r17, $r19;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        java.lang.String $r9;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4;
        java.lang.Error $r14;
        org.gjt.sp.jedit.bsh.ParseException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r5 = new org.gjt.sp.jedit.bsh.BSHVariableDeclarator;

        specialinvoke $r5.<init>(5);

        r1 = $r5;

        z2 = 1;

        $r6 = r0.jjtree;

        $r6.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r2 = specialinvoke r0.jj_consume_token(69);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 81: goto label04;
            default: goto label05;
        };

     label04:
        specialinvoke r0.jj_consume_token(81);

        r0.VariableInitializer();

        goto label05;

     label05:
        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

(4)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r9 = r2.image;

        r1.name = $r9;

     label06:
        if z2_1 == 0 goto label15;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label15;

     label07:
(5)     $r11 := @caughtexception;

        $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

(6)     z2_2 = Phi(z2 #0, z2_1 #4);

        r3 = $r11;

        if z2_2 == 0 goto label08;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

(7)     z2_3 = 0;

(8)     goto label09;

     label08:
        $r12 = r0.jjtree;

(9)     $r12.popNode();

     label09:
        z2_4 = Phi(z2_3 #8, z2_2 #9);

(10)    $z0 = r3 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label10;

        $r16 = (java.lang.RuntimeException) r3;

        throw $r16;

     label10:
        $z1 = r3 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label11;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r3;

        throw $r15;

     label11:
        $r14 = (java.lang.Error) r3;

        throw $r14;

     label12:
        $r18 := @caughtexception;

        $i1 = Phi($i1_3 #6, $i1 #11, $i1 #0, $i1_1 #2, $i1_2 #3);

(11)    z2 = Phi(z2_2 #5, z2_3 #7, z2_4 #10, z2 #11, z2 #0, z2_1 #4);

        r4 = $r18;

     label13:
        if z2 == 0 goto label14;

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label14:
        throw r4;

     label15:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label13 with label12;
    }

    public final void VariableInitializer() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1, $i1_1, $i1_2;
        org.gjt.sp.jedit.bsh.ParseException $r2;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label1;

        $i1 = specialinvoke r0.jj_ntk();

(0)     goto label2;

     label1:
(1)     $i1_1 = r0.jj_ntk;

     label2:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        tableswitch($i1_2)
        {
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label4;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label4;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label4;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label4;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label4;
            case 37: goto label5;
            case 38: goto label4;
            case 39: goto label5;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label5;
            case 46: goto label5;
            case 47: goto label4;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label4;
            case 56: goto label5;
            case 57: goto label4;
            case 58: goto label5;
            case 59: goto label5;
            case 60: goto label4;
            case 61: goto label5;
            case 62: goto label5;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label5;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label5;
            case 69: goto label4;
            case 70: goto label5;
            case 71: goto label5;
            case 72: goto label4;
            case 73: goto label5;
            case 74: goto label3;
            case 75: goto label5;
            case 76: goto label5;
            case 77: goto label5;
            case 78: goto label5;
            case 79: goto label5;
            case 80: goto label5;
            case 81: goto label5;
            case 82: goto label5;
            case 83: goto label5;
            case 84: goto label5;
            case 85: goto label5;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label5;
            case 89: goto label5;
            case 90: goto label5;
            case 91: goto label5;
            case 92: goto label5;
            case 93: goto label5;
            case 94: goto label5;
            case 95: goto label5;
            case 96: goto label5;
            case 97: goto label5;
            case 98: goto label5;
            case 99: goto label5;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            default: goto label5;
        };

     label3:
        r0.ArrayInitializer();

        goto label6;

     label4:
        r0.Expression();

        goto label6;

     label5:
        specialinvoke r0.jj_consume_token(-1);

        $r2 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r2.<init>();

        throw $r2;

     label6:
        return;
    }

    public final void ArrayInitializer() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHArrayInitializer r1, $r4;
        java.lang.Throwable r2, r3, $r11, $r13;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r9, $r12, $r14, $r19;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2;
        boolean $z0, $z1, $z2, z3;
        java.lang.Error $r16;
        org.gjt.sp.jedit.bsh.ParseException $r17;
        java.lang.RuntimeException $r18;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHArrayInitializer;

        specialinvoke $r4.<init>(6);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(74);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i2 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i2_1 = r0.jj_ntk;

     label03:
        $i2_2 = Phi($i2 #1, $i2_1 #2);

(3)     tableswitch($i2_2)
        {
            case 11: goto label04;
            case 12: goto label06;
            case 13: goto label06;
            case 14: goto label04;
            case 15: goto label06;
            case 16: goto label06;
            case 17: goto label04;
            case 18: goto label06;
            case 19: goto label06;
            case 20: goto label06;
            case 21: goto label06;
            case 22: goto label04;
            case 23: goto label06;
            case 24: goto label06;
            case 25: goto label06;
            case 26: goto label04;
            case 27: goto label06;
            case 28: goto label06;
            case 29: goto label04;
            case 30: goto label06;
            case 31: goto label06;
            case 32: goto label06;
            case 33: goto label06;
            case 34: goto label06;
            case 35: goto label06;
            case 36: goto label04;
            case 37: goto label06;
            case 38: goto label04;
            case 39: goto label06;
            case 40: goto label04;
            case 41: goto label04;
            case 42: goto label06;
            case 43: goto label06;
            case 44: goto label06;
            case 45: goto label06;
            case 46: goto label06;
            case 47: goto label04;
            case 48: goto label06;
            case 49: goto label06;
            case 50: goto label06;
            case 51: goto label06;
            case 52: goto label06;
            case 53: goto label06;
            case 54: goto label06;
            case 55: goto label04;
            case 56: goto label06;
            case 57: goto label04;
            case 58: goto label06;
            case 59: goto label06;
            case 60: goto label04;
            case 61: goto label06;
            case 62: goto label06;
            case 63: goto label06;
            case 64: goto label04;
            case 65: goto label06;
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label06;
            case 69: goto label04;
            case 70: goto label06;
            case 71: goto label06;
            case 72: goto label04;
            case 73: goto label06;
            case 74: goto label04;
            case 75: goto label06;
            case 76: goto label06;
            case 77: goto label06;
            case 78: goto label06;
            case 79: goto label06;
            case 80: goto label06;
            case 81: goto label06;
            case 82: goto label06;
            case 83: goto label06;
            case 84: goto label06;
            case 85: goto label06;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label06;
            case 89: goto label06;
            case 90: goto label06;
            case 91: goto label06;
            case 92: goto label06;
            case 93: goto label06;
            case 94: goto label06;
            case 95: goto label06;
            case 96: goto label06;
            case 97: goto label06;
            case 98: goto label06;
            case 99: goto label06;
            case 100: goto label04;
            case 101: goto label04;
            case 102: goto label04;
            case 103: goto label04;
            default: goto label06;
        };

     label04:
(4)     r0.VariableInitializer();

     label05:
        z3 = Phi(z3 #4, z3 #7);

        $i2 = Phi($i2_2 #4, $i2 #7);

(5)     $z0 = specialinvoke r0.jj_2_4(2);

(6)     if $z0 == 0 goto label06;

        specialinvoke r0.jj_consume_token(79);

        r0.VariableInitializer();

(7)     goto label05;

     label06:
        z3 = Phi(z3 #3, z3 #6);

        $i2 = Phi($i2_2 #3, $i2 #6);

(8)     $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i3 = specialinvoke r0.jj_ntk();

(9)     goto label08;

     label07:
(10)    $i3 = r0.jj_ntk;

     label08:
        $i3 = Phi($i3 #9, $i3 #10);

        lookupswitch($i3)
        {
            case 79: goto label09;
            default: goto label10;
        };

     label09:
        specialinvoke r0.jj_consume_token(79);

        goto label10;

     label10:
        specialinvoke r0.jj_consume_token(75);

     label11:
        if z3 == 0 goto label20;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label20;

     label12:
        $r13 := @caughtexception;

        z3 = Phi(z3 #0, z3 #5, z3 #8);

        $i2 = Phi($i2 #0, $i2_1 #2, $i2_2 #3, $i2 #5, $i2 #8);

(11)    $i3 = Phi($i3 #0, $i3 #5, $i3 #8);

        r2 = $r13;

        if z3 == 0 goto label13;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

        z3 = 0;

(12)    goto label14;

     label13:
        $r14 = r0.jjtree;

(13)    $r14.popNode();

     label14:
        z3 = Phi(z3 #12, z3 #13);

        $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label15;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label15:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label16;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label16:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label17:
        $r11 := @caughtexception;

        z3 = Phi(z3 #11, z3 #14, z3 #0, z3 #5, z3 #8);

        $i2 = Phi($i2 #11, $i2 #14, $i2 #0, $i2_1 #2, $i2_2 #3, $i2 #5, $i2 #8);

(14)    $i3 = Phi($i3 #11, $i3 #14, $i3 #0, $i3 #5, $i3 #8);

        r3 = $r11;

     label18:
        if z3 == 0 goto label19;

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label19:
        throw r3;

     label20:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label01 to label11 with label17;
        catch java.lang.Throwable from label12 to label18 with label17;
    }

    public final void FormalParameters() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHFormalParameters r1, $r4;
        java.lang.Throwable r2, r3, $r10, $r12;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r9, $r11, $r13, $r18;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2;
        boolean $z0, $z1, z2;
        java.lang.Error $r15;
        org.gjt.sp.jedit.bsh.ParseException $r16;
        java.lang.RuntimeException $r17;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHFormalParameters;

        specialinvoke $r4.<init>(7);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(72);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i2 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i2_1 = r0.jj_ntk;

     label03:
        $i2_2 = Phi($i2 #1, $i2_1 #2);

(3)     lookupswitch($i2_2)
        {
            case 11: goto label04;
            case 14: goto label04;
            case 17: goto label04;
            case 22: goto label04;
            case 29: goto label04;
            case 36: goto label04;
            case 38: goto label04;
            case 47: goto label04;
            case 69: goto label04;
            default: goto label11;
        };

     label04:
(4)     r0.FormalParameter();

     label05:
        z2 = Phi(z2 #4, z2 #9);

        $i2 = Phi($i2_2 #4, $i2 #9);

        $i3 = Phi($i3 #4, $i3 #9);

(5)     $i1 = r0.jj_ntk;

        if $i1 != -1 goto label06;

        $i3 = specialinvoke r0.jj_ntk();

(6)     goto label07;

     label06:
(7)     $i3 = r0.jj_ntk;

     label07:
        $i3 = Phi($i3 #6, $i3 #7);

        lookupswitch($i3)
        {
            case 79: goto label08;
            default: goto label09;
        };

     label08:
        goto label10;

     label09:
(8)     goto label11;

     label10:
        specialinvoke r0.jj_consume_token(79);

        r0.FormalParameter();

(9)     goto label05;

     label11:
        z2 = Phi(z2 #3, z2 #8);

        $i2 = Phi($i2_2 #3, $i2 #8);

        $i3 = Phi($i3 #3, $i3 #8);

(10)    specialinvoke r0.jj_consume_token(73);

     label12:
        if z2 == 0 goto label21;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label21;

     label13:
        $r12 := @caughtexception;

        z2 = Phi(z2 #0, z2 #5, z2 #10);

        $i2 = Phi($i2 #0, $i2_1 #2, $i2_2 #3, $i2 #5, $i2 #10);

(11)    $i3 = Phi($i3 #0, $i3 #5, $i3 #10);

        r2 = $r12;

        if z2 == 0 goto label14;

        $r18 = r0.jjtree;

        $r18.clearNodeScope(r1);

        z2 = 0;

(12)    goto label15;

     label14:
        $r13 = r0.jjtree;

(13)    $r13.popNode();

     label15:
        z2 = Phi(z2 #12, z2 #13);

        $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label16;

        $r17 = (java.lang.RuntimeException) r2;

        throw $r17;

     label16:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label17;

        $r16 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r16;

     label17:
        $r15 = (java.lang.Error) r2;

        throw $r15;

     label18:
        $r10 := @caughtexception;

        z2 = Phi(z2 #11, z2 #14, z2 #0, z2 #5, z2 #10);

        $i2 = Phi($i2 #11, $i2 #14, $i2 #0, $i2_1 #2, $i2_2 #3, $i2 #5, $i2 #10);

(14)    $i3 = Phi($i3 #11, $i3 #14, $i3 #0, $i3 #5, $i3 #10);

        r3 = $r10;

     label19:
        if z2 == 0 goto label20;

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label20:
        throw r3;

     label21:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label01 to label12 with label18;
        catch java.lang.Throwable from label13 to label19 with label18;
    }

    public final void FormalParameter() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHFormalParameter r1, $r4;
        java.lang.Throwable r2, r3, $r13, $r20;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r11, $r14, $r19, $r21;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2, z3_3, z3_4, z3_5, z3_6;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        java.lang.String $r7, $r12;
        org.gjt.sp.jedit.bsh.ParseException $r10, $r17;
        java.lang.Error $r16;
        java.lang.RuntimeException $r18;
        org.gjt.sp.jedit.bsh.Token r22, r23;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHFormalParameter;

        specialinvoke $r4.<init>(8);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_5(2);

        if $z0 == 0 goto label02;

        r0.Type();

        r22 = specialinvoke r0.jj_consume_token(69);

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

(1)     z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r12 = r22.image;

        r1.name = $r12;

(2)     goto label07;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1_1 = r0.jj_ntk;

     label04:
        $i1_2 = Phi($i1 #3, $i1_1 #4);

(5)     lookupswitch($i1_2)
        {
            case 69: goto label05;
            default: goto label06;
        };

     label05:
        r23 = specialinvoke r0.jj_consume_token(69);

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

(6)     z3_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r7 = r23.image;

        r1.name = $r7;

(7)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label07:
        $i1_3 = Phi($i1 #2, $i1_2 #7);

        z3_3 = Phi(z3_1 #2, z3_2 #7);

        if z3_3 == 0 goto label16;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label16;

     label08:
(8)     $r13 := @caughtexception;

        $i1_4 = Phi($i1 #0, $i1_1 #4, $i1_2 #5);

(9)     z3_4 = Phi(z3 #0, z3_1 #1, z3_2 #6);

        r2 = $r13;

        if z3_4 == 0 goto label09;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

(10)    z3_5 = 0;

(11)    goto label10;

     label09:
        $r14 = r0.jjtree;

(12)    $r14.popNode();

     label10:
        z3_6 = Phi(z3_5 #11, z3_4 #12);

(13)    $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label11;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label11:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label12;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label12:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label13:
        $r20 := @caughtexception;

        $i1 = Phi($i1_4 #9, $i1 #14, $i1 #0, $i1_1 #4, $i1_2 #5);

(14)    z3 = Phi(z3_4 #8, z3_5 #10, z3_6 #13, z3 #14, z3 #0, z3_1 #1, z3_2 #6);

        r3 = $r20;

     label14:
        if z3 == 0 goto label15;

        $r21 = r0.jjtree;

        $r21.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label14 with label13;
    }

    public final void Type() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHType r1, $r4;
        java.lang.Throwable r2, r3, $r11, $r18;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r12, $r17, $r19;
        int $i0, $i1, $i1_1, $i1_2;
        boolean $z0, $z1, $z2, z3;
        org.gjt.sp.jedit.bsh.ParseException $r10, $r15;
        java.lang.Error $r14;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHType;

        specialinvoke $r4.<init>(9);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 11: goto label04;
            case 14: goto label04;
            case 17: goto label04;
            case 22: goto label04;
            case 29: goto label04;
            case 36: goto label04;
            case 38: goto label04;
            case 47: goto label04;
            case 69: goto label05;
            default: goto label06;
        };

     label04:
        r0.PrimitiveType();

(4)     goto label07;

     label05:
        r0.AmbiguousName();

(5)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label07:
        $i1 = Phi($i1_2 #4, $i1_2 #5, $i1 #7);

        z3 = Phi(z3 #4, z3 #5, z3 #7);

(6)     $z0 = specialinvoke r0.jj_2_6(2);

        if $z0 == 0 goto label08;

        specialinvoke r0.jj_consume_token(76);

        specialinvoke r0.jj_consume_token(77);

        r1.addArrayDimension();

(7)     goto label07;

     label08:
        if z3 == 0 goto label17;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label17;

     label09:
(8)     $r11 := @caughtexception;

        $i1 = Phi($i1 #0, $i1_1 #2, $i1_2 #3, $i1 #6);

(9)     z3 = Phi(z3 #0, z3 #6);

        r2 = $r11;

        if z3 == 0 goto label10;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

        z3 = 0;

(10)    goto label11;

     label10:
        $r12 = r0.jjtree;

(11)    $r12.popNode();

     label11:
        z3 = Phi(z3 #10, z3 #11);

        $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label12;

        $r16 = (java.lang.RuntimeException) r2;

        throw $r16;

     label12:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label13;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r15;

     label13:
        $r14 = (java.lang.Error) r2;

        throw $r14;

     label14:
        $r18 := @caughtexception;

        $i1 = Phi($i1 #9, $i1 #12, $i1 #0, $i1_1 #2, $i1_2 #3, $i1 #6);

(12)    z3 = Phi(z3 #8, z3 #12, z3 #0, z3 #6);

        r3 = $r18;

     label15:
        if z3 == 0 goto label16;

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label16:
        throw r3;

     label17:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Throwable from label09 to label15 with label14;
    }

    public final void ReturnType() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHReturnType r1, $r4;
        java.lang.Throwable r2, r3, $r11, $r13;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r7, $r8, $r12, $r14, $r19;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        org.gjt.sp.jedit.bsh.ParseException $r10, $r17;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4, z2_5;
        java.lang.Error $r16;
        java.lang.RuntimeException $r18;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHReturnType;

        specialinvoke $r4.<init>(10);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 11: goto label05;
            case 14: goto label05;
            case 17: goto label05;
            case 22: goto label05;
            case 29: goto label05;
            case 36: goto label05;
            case 38: goto label05;
            case 47: goto label05;
            case 57: goto label04;
            case 69: goto label05;
            default: goto label06;
        };

     label04:
        specialinvoke r0.jj_consume_token(57);

        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

(4)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.isVoid = 1;

(5)     goto label07;

     label05:
        r0.Type();

(6)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label07:
        z2_2 = Phi(z2_1 #5, z2 #6);

        if z2_2 == 0 goto label16;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label16;

     label08:
        $r13 := @caughtexception;

        z2_3 = Phi(z2 #0, z2_1 #4);

(7)     $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

        r2 = $r13;

        if z2_3 == 0 goto label09;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

(8)     z2_4 = 0;

(9)     goto label10;

     label09:
        $r14 = r0.jjtree;

(10)    $r14.popNode();

     label10:
        z2_5 = Phi(z2_4 #9, z2_3 #10);

(11)    $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label11;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label11:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label12;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label12:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label13:
        $r11 := @caughtexception;

        z2 = Phi(z2_3 #7, z2_4 #8, z2_5 #11, z2 #12, z2 #0, z2_1 #4);

(12)    $i1 = Phi($i1_3 #7, $i1 #12, $i1 #0, $i1_1 #2, $i1_2 #3);

        r3 = $r11;

     label14:
        if z2 == 0 goto label15;

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label14 with label13;
    }

    public final void PrimitiveType() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHPrimitiveType r1, $r3;
        java.lang.Throwable r2, $r32;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r6, $r8, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r33;
        int $i0, $i1, $i1_1, $i1_2;
        java.lang.Class $r7, $r11, $r14, $r17, $r20, $r23, $r26, $r29;
        org.gjt.sp.jedit.bsh.ParseException $r31;
        boolean z0, z0_1, z0_2, z0_3, z0_4, z0_5, z0_6, z0_7, z0_8, z0_9;

        r0 := @this;

        $r3 = new org.gjt.sp.jedit.bsh.BSHPrimitiveType;

        specialinvoke $r3.<init>(11);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 11: goto label04;
            case 14: goto label06;
            case 17: goto label05;
            case 22: goto label11;
            case 29: goto label10;
            case 36: goto label08;
            case 38: goto label09;
            case 47: goto label07;
            default: goto label12;
        };

     label04:
        specialinvoke r0.jj_consume_token(11);

        $r28 = r0.jjtree;

        $r28.closeNodeScope(r1, 1);

(4)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r29 = java.lang.Boolean.TYPE;

        r1.type = $r29;

(5)     goto label13;

     label05:
        specialinvoke r0.jj_consume_token(17);

        $r22 = r0.jjtree;

        $r22.closeNodeScope(r1, 1);

(6)     z0_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r23 = java.lang.Character.TYPE;

        r1.type = $r23;

(7)     goto label13;

     label06:
        specialinvoke r0.jj_consume_token(14);

        $r25 = r0.jjtree;

        $r25.closeNodeScope(r1, 1);

(8)     z0_3 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r26 = java.lang.Byte.TYPE;

        r1.type = $r26;

(9)     goto label13;

     label07:
        specialinvoke r0.jj_consume_token(47);

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

(10)    z0_4 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r7 = java.lang.Short.TYPE;

        r1.type = $r7;

(11)    goto label13;

     label08:
        specialinvoke r0.jj_consume_token(36);

        $r13 = r0.jjtree;

        $r13.closeNodeScope(r1, 1);

(12)    z0_5 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r14 = java.lang.Integer.TYPE;

        r1.type = $r14;

(13)    goto label13;

     label09:
        specialinvoke r0.jj_consume_token(38);

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

(14)    z0_6 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r11 = java.lang.Long.TYPE;

        r1.type = $r11;

(15)    goto label13;

     label10:
        specialinvoke r0.jj_consume_token(29);

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

(16)    z0_7 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r17 = java.lang.Float.TYPE;

        r1.type = $r17;

(17)    goto label13;

     label11:
        specialinvoke r0.jj_consume_token(22);

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

(18)    z0_8 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r20 = java.lang.Double.TYPE;

        r1.type = $r20;

(19)    goto label13;

     label12:
        specialinvoke r0.jj_consume_token(-1);

        $r31 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r31.<init>();

        throw $r31;

     label13:
        z0_9 = Phi(z0_1 #5, z0_2 #7, z0_3 #9, z0_4 #11, z0_5 #13, z0_6 #15, z0_7 #17, z0_8 #19);

        if z0_9 == 0 goto label17;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label17;

     label14:
        $r32 := @caughtexception;

        $i1 = Phi($i1 #0, $i1_1 #2, $i1_2 #3, $i1 #20);

(20)    z0 = Phi(z0 #0, z0_1 #4, z0_2 #6, z0_3 #8, z0_4 #10, z0_5 #12, z0_6 #14, z0_7 #16, z0_8 #18, z0 #20);

        r2 = $r32;

     label15:
        if z0 == 0 goto label16;

        $r33 = r0.jjtree;

        $r33.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label16:
        throw r2;

     label17:
        return;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public final void AmbiguousName() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHAmbiguousName r1, $r4;
        java.lang.StringBuilder r2, $r6, $r12, $r13, $r15;
        java.lang.Throwable r3, $r18;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r10, $r19;
        java.lang.String $r7, $r9, $r14, $r16;
        boolean $z0, z1;
        org.gjt.sp.jedit.bsh.Token r20, r21;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHAmbiguousName;

        specialinvoke $r4.<init>(12);

        r1 = $r4;

        z1 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label1:
        r20 = specialinvoke r0.jj_consume_token(69);

        $r6 = new java.lang.StringBuilder;

        $r7 = r20.image;

        specialinvoke $r6.<init>($r7);

(1)     r2 = $r6;

     label2:
        z1 = Phi(z1 #1, z1 #3);

(2)     $z0 = specialinvoke r0.jj_2_7(2);

        if $z0 == 0 goto label3;

        specialinvoke r0.jj_consume_token(80);

        r21 = specialinvoke r0.jj_consume_token(69);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r13 = $r12.append(".");

        $r14 = r21.image;

        $r15 = $r13.append($r14);

        $r16 = $r15.toString();

        r2.append($r16);

(3)     goto label2;

     label3:
        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        z1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r9 = r2.toString();

        Packer.Unpack(r1);

        r1.text = $r9;

     label4:
        Packer.Pack(r1);

        if z1 == 0 goto label8;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label8;

     label5:
        $r18 := @caughtexception;

(4)     z1 = Phi(z1 #0, z1 #2, z1 #4);

        r3 = $r18;

     label6:
        if z1 == 0 goto label7;

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label7:
        throw r3;

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final int NameList() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, i2, $i3;
        byte b1;

        r0 := @this;

        b1 = 0;

        r0.AmbiguousName();

(0)     i2 = b1 + 1;

     label1:
        $i3 = Phi($i3 #0, $i3 #3);

        i2 = Phi(i2 #0, i2 #3);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label2;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label3;

     label2:
(2)     $i3 = r0.jj_ntk;

     label3:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 79: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        goto label7;

     label6:
        specialinvoke r0.jj_consume_token(79);

        r0.AmbiguousName();

        i2 = i2 + 1;

(3)     goto label1;

     label7:
        return i2;
    }

    public final void Expression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        org.gjt.sp.jedit.bsh.ParseException $r2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_8(2147483647);

        if $z0 == 0 goto label1;

        r0.Assignment();

(0)     goto label6;

     label1:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label2;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label3;

     label2:
(2)     $i1_1 = r0.jj_ntk;

     label3:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

        tableswitch($i1_2)
        {
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label4;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label4;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label4;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label4;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label4;
            case 37: goto label5;
            case 38: goto label4;
            case 39: goto label5;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label5;
            case 46: goto label5;
            case 47: goto label4;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label4;
            case 56: goto label5;
            case 57: goto label4;
            case 58: goto label5;
            case 59: goto label5;
            case 60: goto label4;
            case 61: goto label5;
            case 62: goto label5;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label5;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label5;
            case 69: goto label4;
            case 70: goto label5;
            case 71: goto label5;
            case 72: goto label4;
            case 73: goto label5;
            case 74: goto label5;
            case 75: goto label5;
            case 76: goto label5;
            case 77: goto label5;
            case 78: goto label5;
            case 79: goto label5;
            case 80: goto label5;
            case 81: goto label5;
            case 82: goto label5;
            case 83: goto label5;
            case 84: goto label5;
            case 85: goto label5;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label5;
            case 89: goto label5;
            case 90: goto label5;
            case 91: goto label5;
            case 92: goto label5;
            case 93: goto label5;
            case 94: goto label5;
            case 95: goto label5;
            case 96: goto label5;
            case 97: goto label5;
            case 98: goto label5;
            case 99: goto label5;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            default: goto label5;
        };

     label4:
        r0.ConditionalExpression();

(3)     goto label6;

     label5:
        specialinvoke r0.jj_consume_token(-1);

        $r2 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r2.<init>();

        throw $r2;

     label6:
        $i1_3 = Phi($i1 #0, $i1_2 #3);

        return;
    }

    public final void Assignment() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHAssignment r1, $r4;
        int i0;
        java.lang.Throwable r2, r3, $r7, $r9;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r10, $r15;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r12;
        org.gjt.sp.jedit.bsh.ParseException $r13;
        java.lang.RuntimeException $r14;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHAssignment;

        specialinvoke $r4.<init>(13);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r0.PrimaryExpression();

        i0 = r0.AssignmentOperator();

        Packer.Unpack(r1);

        r1.operator = i0;

        Packer.Pack(r1);

        r0.Expression();

     label02:
        if z2 == 0 goto label11;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
        $r9 := @caughtexception;

        r2 = $r9;

        if z2 == 0 goto label04;

        $r15 = r0.jjtree;

        $r15.clearNodeScope(r1);

(1)     z2_1 = 0;

(2)     goto label05;

     label04:
        $r10 = r0.jjtree;

(3)     $r10.popNode();

     label05:
        z2_2 = Phi(z2_1 #2, z2 #3);

(4)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r14 = (java.lang.RuntimeException) r2;

        throw $r14;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r13 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r13;

     label07:
        $r12 = (java.lang.Error) r2;

        throw $r12;

     label08:
        $r7 := @caughtexception;

(5)     z2 = Phi(z2_1 #1, z2_2 #4, z2 #5, z2 #0);

        r3 = $r7;

     label09:
        if z2 == 0 goto label10;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final int AssignmentOperator() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        org.gjt.sp.jedit.bsh.ParseException $r18;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i2 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i2_1 = r0.jj_ntk;

     label02:
        $i2_2 = Phi($i2 #0, $i2_1 #1);

        tableswitch($i2_2)
        {
            case 81: goto label03;
            case 82: goto label18;
            case 83: goto label18;
            case 84: goto label18;
            case 85: goto label18;
            case 86: goto label18;
            case 87: goto label18;
            case 88: goto label18;
            case 89: goto label18;
            case 90: goto label18;
            case 91: goto label18;
            case 92: goto label18;
            case 93: goto label18;
            case 94: goto label18;
            case 95: goto label18;
            case 96: goto label18;
            case 97: goto label18;
            case 98: goto label18;
            case 99: goto label18;
            case 100: goto label18;
            case 101: goto label18;
            case 102: goto label18;
            case 103: goto label18;
            case 104: goto label18;
            case 105: goto label18;
            case 106: goto label18;
            case 107: goto label18;
            case 108: goto label18;
            case 109: goto label18;
            case 110: goto label18;
            case 111: goto label18;
            case 112: goto label18;
            case 113: goto label18;
            case 114: goto label18;
            case 115: goto label18;
            case 116: goto label18;
            case 117: goto label18;
            case 118: goto label07;
            case 119: goto label08;
            case 120: goto label04;
            case 121: goto label05;
            case 122: goto label09;
            case 123: goto label18;
            case 124: goto label11;
            case 125: goto label18;
            case 126: goto label10;
            case 127: goto label06;
            case 128: goto label12;
            case 129: goto label13;
            case 130: goto label14;
            case 131: goto label15;
            case 132: goto label16;
            case 133: goto label17;
            default: goto label18;
        };

     label03:
        specialinvoke r0.jj_consume_token(81);

        goto label19;

     label04:
        specialinvoke r0.jj_consume_token(120);

        goto label19;

     label05:
        specialinvoke r0.jj_consume_token(121);

        goto label19;

     label06:
        specialinvoke r0.jj_consume_token(127);

        goto label19;

     label07:
        specialinvoke r0.jj_consume_token(118);

        goto label19;

     label08:
        specialinvoke r0.jj_consume_token(119);

        goto label19;

     label09:
        specialinvoke r0.jj_consume_token(122);

        goto label19;

     label10:
        specialinvoke r0.jj_consume_token(126);

        goto label19;

     label11:
        specialinvoke r0.jj_consume_token(124);

        goto label19;

     label12:
        specialinvoke r0.jj_consume_token(128);

        goto label19;

     label13:
        specialinvoke r0.jj_consume_token(129);

        goto label19;

     label14:
        specialinvoke r0.jj_consume_token(130);

        goto label19;

     label15:
        specialinvoke r0.jj_consume_token(131);

        goto label19;

     label16:
        specialinvoke r0.jj_consume_token(132);

        goto label19;

     label17:
        specialinvoke r0.jj_consume_token(133);

        goto label19;

     label18:
        specialinvoke r0.jj_consume_token(-1);

        $r18 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r18.<init>();

        throw $r18;

     label19:
        r1 = r0.getToken(0);

        $i1 = r1.kind;

        return $i1;
    }

    public final void ConditionalExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHTernaryExpression r1, $r6;
        java.lang.Throwable r2, r3, $r9, $r16;
        int $i0, $i1, $i1_1, $i1_2;
        org.gjt.sp.jedit.bsh.JJTParserState $r7, $r8, $r10, $r15, $r17;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3;
        java.lang.Error $r12;
        org.gjt.sp.jedit.bsh.ParseException $r13;
        java.lang.RuntimeException $r14;

        r0 := @this;

        r0.ConditionalOrExpression();

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i1 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i1_1 = r0.jj_ntk;

     label02:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

(2)     lookupswitch($i1_2)
        {
            case 88: goto label03;
            default: goto label15;
        };

     label03:
        specialinvoke r0.jj_consume_token(88);

        r0.Expression();

        specialinvoke r0.jj_consume_token(89);

        $r6 = new org.gjt.sp.jedit.bsh.BSHTernaryExpression;

        specialinvoke $r6.<init>(14);

        r1 = $r6;

        z2 = 1;

        $r7 = r0.jjtree;

        $r7.openNodeScope(r1);

(3)     r0.jjtreeOpenNodeScope(r1);

     label04:
        r0.ConditionalExpression();

     label05:
        if z2 == 0 goto label14;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 3);

        r0.jjtreeCloseNodeScope(r1);

        goto label14;

     label06:
        $r9 := @caughtexception;

        r2 = $r9;

        if z2 == 0 goto label07;

        $r15 = r0.jjtree;

        $r15.clearNodeScope(r1);

(4)     z2_1 = 0;

(5)     goto label08;

     label07:
        $r10 = r0.jjtree;

(6)     $r10.popNode();

     label08:
        z2_2 = Phi(z2_1 #5, z2 #6);

(7)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label09;

        $r14 = (java.lang.RuntimeException) r2;

        throw $r14;

     label09:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label10;

        $r13 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r13;

     label10:
        $r12 = (java.lang.Error) r2;

        throw $r12;

     label11:
        $r16 := @caughtexception;

        z2 = Phi(z2_1 #4, z2_2 #7, z2 #8, z2 #3);

(8)     $i1 = Phi($i1 #8, $i1_2 #3);

        r3 = $r16;

     label12:
        if z2 == 0 goto label13;

        $r17 = r0.jjtree;

        $r17.closeNodeScope(r1, 3);

        r0.jjtreeCloseNodeScope(r1);

     label13:
        throw r3;

     label14:
(9)     goto label15;

     label15:
        z2_3 = Phi(z2 #2, z2 #9);

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label12 with label11;
    }

    public final void ConditionalOrExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.ConditionalAndExpression();

     label01:
        z0 = Phi(z0 #0, z0 #9);

        $i3 = Phi($i3 #0, $i3 #9);

        r10 = Phi(r10 #0, r10 #9);

        $i4 = Phi($i4 #0, $i4 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 96: goto label04;
            case 97: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 96: goto label09;
            case 97: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(96);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(97);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.ConditionalAndExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        z0 = Phi(z0 #7, z0 #8);

        $i3 = Phi($i3 #7, $i3 #8);

        r10 = Phi(r10 #7, r10 #8);

(8)     $i4 = Phi($i4 #7, $i4 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void ConditionalAndExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.InclusiveOrExpression();

     label01:
        $i4 = Phi($i4 #0, $i4 #9);

        z0 = Phi(z0 #0, z0 #9);

        r10 = Phi(r10 #0, r10 #9);

        $i3 = Phi($i3 #0, $i3 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 98: goto label04;
            case 99: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 98: goto label09;
            case 99: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(98);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(99);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.InclusiveOrExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        $i4 = Phi($i4 #7, $i4 #8);

        z0 = Phi(z0 #7, z0 #8);

        r10 = Phi(r10 #7, r10 #8);

(8)     $i3 = Phi($i3 #7, $i3 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void InclusiveOrExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.ExclusiveOrExpression();

     label01:
        $i3 = Phi($i3 #0, $i3 #9);

        z0 = Phi(z0 #0, z0 #9);

        r10 = Phi(r10 #0, r10 #9);

        $i4 = Phi($i4 #0, $i4 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 108: goto label04;
            case 109: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 108: goto label09;
            case 109: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(108);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(109);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.ExclusiveOrExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        $i3 = Phi($i3 #7, $i3 #8);

        z0 = Phi(z0 #7, z0 #8);

        r10 = Phi(r10 #7, r10 #8);

(8)     $i4 = Phi($i4 #7, $i4 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void ExclusiveOrExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r7;
        int $i0, $i1, $i2;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r8;
        org.gjt.sp.jedit.bsh.Token r9;
        boolean z0;

        r0 := @this;

(0)     r0.AndExpression();

     label01:
        z0 = Phi(z0 #0, z0 #5);

        $i2 = Phi($i2 #0, $i2 #5);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i2 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i2 = r0.jj_ntk;

     label03:
        $i2 = Phi($i2 #1, $i2 #2);

        lookupswitch($i2)
        {
            case 110: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label13;

     label06:
        r9 = specialinvoke r0.jj_consume_token(110);

        r0.AndExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(3)     r0.jjtreeOpenNodeScope(r1);

     label07:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i1 = r9.kind;

        Packer.Unpack(r1);

        r1.kind = $i1;

     label08:
        Packer.Pack(r1);

        if 0 == 0 goto label12;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label12;

     label09:
        $r7 := @caughtexception;

        z0 = Phi(z0 #3, z0 #4);

(4)     $i2 = Phi($i2 #3, $i2 #4);

        r2 = $r7;

     label10:
        if z0 == 0 goto label11;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label11:
        throw r2;

     label12:
(5)     goto label01;

     label13:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final void AndExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.EqualityExpression();

     label01:
        $i3 = Phi($i3 #0, $i3 #9);

        r10 = Phi(r10 #0, r10 #9);

        z0 = Phi(z0 #0, z0 #9);

        $i4 = Phi($i4 #0, $i4 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 106: goto label04;
            case 107: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 106: goto label09;
            case 107: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(106);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(107);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.EqualityExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        $i3 = Phi($i3 #7, $i3 #8);

        r10 = Phi(r10 #7, r10 #8);

        z0 = Phi(z0 #7, z0 #8);

(8)     $i4 = Phi($i4 #7, $i4 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void EqualityExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.InstanceOfExpression();

     label01:
        z0 = Phi(z0 #0, z0 #9);

        r10 = Phi(r10 #0, r10 #9);

        $i4 = Phi($i4 #0, $i4 #9);

        $i3 = Phi($i3 #0, $i3 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 90: goto label04;
            case 95: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 90: goto label09;
            case 95: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(90);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(95);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.InstanceOfExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        z0 = Phi(z0 #7, z0 #8);

        r10 = Phi(r10 #7, r10 #8);

        $i4 = Phi($i4 #7, $i4 #8);

(8)     $i3 = Phi($i3 #7, $i3 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void InstanceOfExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r7;
        int $i0, $i1, $i2, $i2_1, $i2_2;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r8;
        org.gjt.sp.jedit.bsh.Token r9;
        boolean z0, z0_1, z0_2;

        r0 := @this;

        r0.RelationalExpression();

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i2 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i2_1 = r0.jj_ntk;

     label02:
        $i2_2 = Phi($i2 #0, $i2_1 #1);

(2)     lookupswitch($i2_2)
        {
            case 35: goto label03;
            default: goto label10;
        };

     label03:
        r9 = specialinvoke r0.jj_consume_token(35);

        r0.Type();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(3)     r0.jjtreeOpenNodeScope(r1);

     label04:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

(4)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i1 = r9.kind;

        Packer.Unpack(r1);

        r1.kind = $i1;

     label05:
        Packer.Pack(r1);

        if 0 == 0 goto label09;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label09;

     label06:
        $r7 := @caughtexception;

        $i2 = Phi($i2_2 #3, $i2 #5);

(5)     z0 = Phi(z0 #3, z0_1 #4, z0 #5);

        r2 = $r7;

     label07:
        if z0 == 0 goto label08;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label08:
        throw r2;

     label09:
(6)     goto label10;

     label10:
        z0_2 = Phi(z0 #2, z0_1 #6);

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public final void RelationalExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.ShiftExpression();

     label01:
        r10 = Phi(r10 #0, r10 #15);

        $i3 = Phi($i3 #0, $i3 #15);

        z0 = Phi(z0 #0, z0 #15);

        $i4 = Phi($i4 #0, $i4 #15);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        tableswitch($i3)
        {
            case 82: goto label04;
            case 83: goto label04;
            case 84: goto label04;
            case 85: goto label04;
            case 86: goto label05;
            case 87: goto label05;
            case 88: goto label05;
            case 89: goto label05;
            case 90: goto label05;
            case 91: goto label04;
            case 92: goto label04;
            case 93: goto label04;
            case 94: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label25;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        tableswitch($i4)
        {
            case 82: goto label11;
            case 83: goto label12;
            case 84: goto label09;
            case 85: goto label10;
            case 86: goto label17;
            case 87: goto label17;
            case 88: goto label17;
            case 89: goto label17;
            case 90: goto label17;
            case 91: goto label13;
            case 92: goto label14;
            case 93: goto label15;
            case 94: goto label16;
            default: goto label17;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(84);

(5)     goto label18;

     label10:
        r10 = specialinvoke r0.jj_consume_token(85);

(6)     goto label18;

     label11:
        r10 = specialinvoke r0.jj_consume_token(82);

(7)     goto label18;

     label12:
        r10 = specialinvoke r0.jj_consume_token(83);

(8)     goto label18;

     label13:
        r10 = specialinvoke r0.jj_consume_token(91);

(9)     goto label18;

     label14:
        r10 = specialinvoke r0.jj_consume_token(92);

(10)    goto label18;

     label15:
        r10 = specialinvoke r0.jj_consume_token(93);

(11)    goto label18;

     label16:
        r10 = specialinvoke r0.jj_consume_token(94);

(12)    goto label18;

     label17:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label18:
        r10 = Phi(r10 #5, r10 #6, r10 #7, r10 #8, r10 #9, r10 #10, r10 #11, r10 #12);

        r0.ShiftExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(13)    r0.jjtreeOpenNodeScope(r1);

     label19:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label20:
        Packer.Pack(r1);

        if 0 == 0 goto label24;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label24;

     label21:
        $r8 := @caughtexception;

        r10 = Phi(r10 #13, r10 #14);

        $i3 = Phi($i3 #13, $i3 #14);

        z0 = Phi(z0 #13, z0 #14);

(14)    $i4 = Phi($i4 #13, $i4 #14);

        r2 = $r8;

     label22:
        if z0 == 0 goto label23;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label23:
        throw r2;

     label24:
(15)    goto label01;

     label25:
        return;

        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public final void ShiftExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.AdditiveExpression();

     label01:
        $i3 = Phi($i3 #0, $i3 #13);

        $i4 = Phi($i4 #0, $i4 #13);

        z0 = Phi(z0 #0, z0 #13);

        r10 = Phi(r10 #0, r10 #13);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        tableswitch($i3)
        {
            case 112: goto label04;
            case 113: goto label04;
            case 114: goto label04;
            case 115: goto label04;
            case 116: goto label04;
            case 117: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label23;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        tableswitch($i4)
        {
            case 112: goto label09;
            case 113: goto label10;
            case 114: goto label11;
            case 115: goto label12;
            case 116: goto label13;
            case 117: goto label14;
            default: goto label15;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(112);

(5)     goto label16;

     label10:
        r10 = specialinvoke r0.jj_consume_token(113);

(6)     goto label16;

     label11:
        r10 = specialinvoke r0.jj_consume_token(114);

(7)     goto label16;

     label12:
        r10 = specialinvoke r0.jj_consume_token(115);

(8)     goto label16;

     label13:
        r10 = specialinvoke r0.jj_consume_token(116);

(9)     goto label16;

     label14:
        r10 = specialinvoke r0.jj_consume_token(117);

(10)    goto label16;

     label15:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label16:
        r10 = Phi(r10 #5, r10 #6, r10 #7, r10 #8, r10 #9, r10 #10);

        r0.AdditiveExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(11)    r0.jjtreeOpenNodeScope(r1);

     label17:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label18:
        Packer.Pack(r1);

        if 0 == 0 goto label22;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label22;

     label19:
        $r8 := @caughtexception;

        $i3 = Phi($i3 #11, $i3 #12);

        $i4 = Phi($i4 #11, $i4 #12);

        z0 = Phi(z0 #11, z0 #12);

(12)    r10 = Phi(r10 #11, r10 #12);

        r2 = $r8;

     label20:
        if z0 == 0 goto label21;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label21:
        throw r2;

     label22:
(13)    goto label01;

     label23:
        return;

        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public final void AdditiveExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.MultiplicativeExpression();

     label01:
        z0 = Phi(z0 #0, z0 #9);

        r10 = Phi(r10 #0, r10 #9);

        $i3 = Phi($i3 #0, $i3 #9);

        $i4 = Phi($i4 #0, $i4 #9);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 102: goto label04;
            case 103: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label19;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 102: goto label09;
            case 103: goto label10;
            default: goto label11;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(102);

(5)     goto label12;

     label10:
        r10 = specialinvoke r0.jj_consume_token(103);

(6)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label12:
        r10 = Phi(r10 #5, r10 #6);

        r0.MultiplicativeExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(7)     r0.jjtreeOpenNodeScope(r1);

     label13:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label14:
        Packer.Pack(r1);

        if 0 == 0 goto label18;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label15:
        $r8 := @caughtexception;

        z0 = Phi(z0 #7, z0 #8);

        r10 = Phi(r10 #7, r10 #8);

        $i3 = Phi($i3 #7, $i3 #8);

(8)     $i4 = Phi($i4 #7, $i4 #8);

        r2 = $r8;

     label16:
        if z0 == 0 goto label17;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r2;

     label18:
(9)     goto label01;

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public final void MultiplicativeExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBinaryExpression r1, $r3;
        java.lang.Throwable r2, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r9;
        org.gjt.sp.jedit.bsh.ParseException $r7;
        org.gjt.sp.jedit.bsh.Token r10;
        boolean z0;

        r0 := @this;

(0)     r0.UnaryExpression();

     label01:
        $i3 = Phi($i3 #0, $i3 #10);

        $i4 = Phi($i4 #0, $i4 #10);

        r10 = Phi(r10 #0, r10 #10);

        z0 = Phi(z0 #0, z0 #10);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3 = r0.jj_ntk;

     label03:
        $i3 = Phi($i3 #1, $i3 #2);

        lookupswitch($i3)
        {
            case 104: goto label04;
            case 105: goto label04;
            case 111: goto label04;
            default: goto label05;
        };

     label04:
        goto label06;

     label05:
        goto label20;

     label06:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i4 = specialinvoke r0.jj_ntk();

(3)     goto label08;

     label07:
(4)     $i4 = r0.jj_ntk;

     label08:
        $i4 = Phi($i4 #3, $i4 #4);

        lookupswitch($i4)
        {
            case 104: goto label09;
            case 105: goto label10;
            case 111: goto label11;
            default: goto label12;
        };

     label09:
        r10 = specialinvoke r0.jj_consume_token(104);

(5)     goto label13;

     label10:
        r10 = specialinvoke r0.jj_consume_token(105);

(6)     goto label13;

     label11:
        r10 = specialinvoke r0.jj_consume_token(111);

(7)     goto label13;

     label12:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label13:
        r10 = Phi(r10 #5, r10 #6, r10 #7);

        r0.UnaryExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHBinaryExpression;

        specialinvoke $r3.<init>(15);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(8)     r0.jjtreeOpenNodeScope(r1);

     label14:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 2);

        z0 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r10.kind;

        Packer.Unpack(r1);

        r1.kind = $i2;

     label15:
        Packer.Pack(r1);

        if 0 == 0 goto label19;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

        goto label19;

     label16:
        $r8 := @caughtexception;

        $i3 = Phi($i3 #8, $i3 #9);

        $i4 = Phi($i4 #8, $i4 #9);

        r10 = Phi(r10 #8, r10 #9);

(9)     z0 = Phi(z0 #8, z0 #9);

        r2 = $r8;

     label17:
        if z0 == 0 goto label18;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 2);

        r0.jjtreeCloseNodeScope(r1);

     label18:
        throw r2;

     label19:
(10)    goto label01;

     label20:
        return;

        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public final void UnaryExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHUnaryExpression r1, $r3;
        java.lang.Throwable r2, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i3_1, $i3_2, $i4_1, $i4_2, $i4_3;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r10;
        org.gjt.sp.jedit.bsh.ParseException $r7, $r8;
        org.gjt.sp.jedit.bsh.Token r11, r11_1, r11_2, r11_3;
        boolean z0, z0_1, z0_2;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i3 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i3_1 = r0.jj_ntk;

     label02:
        $i3_2 = Phi($i3 #0, $i3_1 #1);

        tableswitch($i3_2)
        {
            case 11: goto label18;
            case 12: goto label19;
            case 13: goto label19;
            case 14: goto label18;
            case 15: goto label19;
            case 16: goto label19;
            case 17: goto label18;
            case 18: goto label19;
            case 19: goto label19;
            case 20: goto label19;
            case 21: goto label19;
            case 22: goto label18;
            case 23: goto label19;
            case 24: goto label19;
            case 25: goto label19;
            case 26: goto label18;
            case 27: goto label19;
            case 28: goto label19;
            case 29: goto label18;
            case 30: goto label19;
            case 31: goto label19;
            case 32: goto label19;
            case 33: goto label19;
            case 34: goto label19;
            case 35: goto label19;
            case 36: goto label18;
            case 37: goto label19;
            case 38: goto label18;
            case 39: goto label19;
            case 40: goto label18;
            case 41: goto label18;
            case 42: goto label19;
            case 43: goto label19;
            case 44: goto label19;
            case 45: goto label19;
            case 46: goto label19;
            case 47: goto label18;
            case 48: goto label19;
            case 49: goto label19;
            case 50: goto label19;
            case 51: goto label19;
            case 52: goto label19;
            case 53: goto label19;
            case 54: goto label19;
            case 55: goto label18;
            case 56: goto label19;
            case 57: goto label18;
            case 58: goto label19;
            case 59: goto label19;
            case 60: goto label18;
            case 61: goto label19;
            case 62: goto label19;
            case 63: goto label19;
            case 64: goto label18;
            case 65: goto label19;
            case 66: goto label18;
            case 67: goto label18;
            case 68: goto label19;
            case 69: goto label18;
            case 70: goto label19;
            case 71: goto label19;
            case 72: goto label18;
            case 73: goto label19;
            case 74: goto label19;
            case 75: goto label19;
            case 76: goto label19;
            case 77: goto label19;
            case 78: goto label19;
            case 79: goto label19;
            case 80: goto label19;
            case 81: goto label19;
            case 82: goto label19;
            case 83: goto label19;
            case 84: goto label19;
            case 85: goto label19;
            case 86: goto label18;
            case 87: goto label18;
            case 88: goto label19;
            case 89: goto label19;
            case 90: goto label19;
            case 91: goto label19;
            case 92: goto label19;
            case 93: goto label19;
            case 94: goto label19;
            case 95: goto label19;
            case 96: goto label19;
            case 97: goto label19;
            case 98: goto label19;
            case 99: goto label19;
            case 100: goto label16;
            case 101: goto label17;
            case 102: goto label03;
            case 103: goto label03;
            default: goto label19;
        };

     label03:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label04;

        $i4 = specialinvoke r0.jj_ntk();

(2)     goto label05;

     label04:
(3)     $i4_1 = r0.jj_ntk;

     label05:
        $i4_2 = Phi($i4 #2, $i4_1 #3);

        lookupswitch($i4_2)
        {
            case 102: goto label06;
            case 103: goto label07;
            default: goto label08;
        };

     label06:
        r11 = specialinvoke r0.jj_consume_token(102);

(4)     goto label09;

     label07:
        r11_1 = specialinvoke r0.jj_consume_token(103);

(5)     goto label09;

     label08:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label09:
        r11_2 = Phi(r11 #4, r11_1 #5);

        r0.UnaryExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHUnaryExpression;

        specialinvoke $r3.<init>(16);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(6)     r0.jjtreeOpenNodeScope(r1);

     label10:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 1);

(7)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r11_2.kind;

        r1.kind = $i2;

     label11:
        if 0 == 0 goto label15;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label15;

     label12:
        $r9 := @caughtexception;

        z0 = Phi(z0 #6, z0_1 #7, z0 #8);

        $i3 = Phi($i3_2 #6, $i3 #8);

        r11 = Phi(r11_2 #6, r11 #8);

(8)     $i4 = Phi($i4_2 #6, $i4 #8);

        r2 = $r9;

     label13:
        if z0 == 0 goto label14;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label14:
        throw r2;

     label15:
(9)     goto label20;

     label16:
        r0.PreIncrementExpression();

(10)    goto label20;

     label17:
        r0.PreDecrementExpression();

(11)    goto label20;

     label18:
        r0.UnaryExpressionNotPlusMinus();

(12)    goto label20;

     label19:
        specialinvoke r0.jj_consume_token(-1);

        $r8 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r8.<init>();

        throw $r8;

     label20:
        z0_2 = Phi(z0_1 #9, z0 #10, z0 #11, z0 #12);

        r11_3 = Phi(r11_2 #9, r11 #10, r11 #11, r11 #12);

        $i4_3 = Phi($i4_2 #9, $i4 #10, $i4 #11, $i4 #12);

        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public final void PreIncrementExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHUnaryExpression r1, $r3;
        java.lang.Throwable r2, $r7;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r8;
        int $i0;
        org.gjt.sp.jedit.bsh.Token r9;
        boolean z0, z0_1;

        r0 := @this;

        r9 = specialinvoke r0.jj_consume_token(100);

        r0.PrimaryExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHUnaryExpression;

        specialinvoke $r3.<init>(16);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label1:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 1);

(1)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i0 = r9.kind;

        r1.kind = $i0;

     label2:
        if 0 == 0 goto label6;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label6;

     label3:
        $r7 := @caughtexception;

(2)     z0 = Phi(z0 #0, z0_1 #1, z0 #2);

        r2 = $r7;

     label4:
        if z0 == 0 goto label5;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void PreDecrementExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHUnaryExpression r1, $r3;
        java.lang.Throwable r2, $r7;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r8;
        int $i0;
        org.gjt.sp.jedit.bsh.Token r9;
        boolean z0, z0_1;

        r0 := @this;

        r9 = specialinvoke r0.jj_consume_token(101);

        r0.PrimaryExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHUnaryExpression;

        specialinvoke $r3.<init>(16);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label1:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 1);

(1)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i0 = r9.kind;

        r1.kind = $i0;

     label2:
        if 0 == 0 goto label6;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label6;

     label3:
        $r7 := @caughtexception;

(2)     z0 = Phi(z0 #0, z0_1 #1, z0 #2);

        r2 = $r7;

     label4:
        if z0 == 0 goto label5;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void UnaryExpressionNotPlusMinus() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHUnaryExpression r1, $r3;
        java.lang.Throwable r2, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i4_1, $i4_2, $i5_1, $i5_2, $i6_1, $i6_2, $i6_3, $i5_3;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r6, $r10;
        org.gjt.sp.jedit.bsh.ParseException $r7, $r8;
        boolean $z0, z1, z1_1, z1_2;
        org.gjt.sp.jedit.bsh.Token r11, r11_1, r11_2, r11_3;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i4 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i4_1 = r0.jj_ntk;

     label02:
        $i4_2 = Phi($i4 #0, $i4_1 #1);

        lookupswitch($i4_2)
        {
            case 86: goto label03;
            case 87: goto label03;
            default: goto label16;
        };

     label03:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label04;

        $i5 = specialinvoke r0.jj_ntk();

(2)     goto label05;

     label04:
(3)     $i5_1 = r0.jj_ntk;

     label05:
        $i5_2 = Phi($i5 #2, $i5_1 #3);

        lookupswitch($i5_2)
        {
            case 86: goto label07;
            case 87: goto label06;
            default: goto label08;
        };

     label06:
        r11 = specialinvoke r0.jj_consume_token(87);

(4)     goto label09;

     label07:
        r11_1 = specialinvoke r0.jj_consume_token(86);

(5)     goto label09;

     label08:
        specialinvoke r0.jj_consume_token(-1);

        $r7 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r7.<init>();

        throw $r7;

     label09:
        r11_2 = Phi(r11 #4, r11_1 #5);

        r0.UnaryExpression();

        $r3 = new org.gjt.sp.jedit.bsh.BSHUnaryExpression;

        specialinvoke $r3.<init>(16);

        r1 = $r3;

        z1 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(6)     r0.jjtreeOpenNodeScope(r1);

     label10:
        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 1);

(7)     z1_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r11_2.kind;

        r1.kind = $i2;

     label11:
        if 0 == 0 goto label15;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label15;

     label12:
        $r9 := @caughtexception;

        r11 = Phi(r11_2 #6, r11 #8);

        $i5 = Phi($i5_2 #6, $i5 #8);

        z1 = Phi(z1 #6, z1_1 #7, z1 #8);

(8)     $i4 = Phi($i4_2 #6, $i4 #8);

        r2 = $r9;

     label13:
        if z1 == 0 goto label14;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label14:
        throw r2;

     label15:
(9)     goto label22;

     label16:
        $z0 = specialinvoke r0.jj_2_9(2147483647);

        if $z0 == 0 goto label17;

        r0.CastExpression();

(10)    goto label22;

     label17:
        $i3 = r0.jj_ntk;

        if $i3 != -1 goto label18;

        $i6 = specialinvoke r0.jj_ntk();

(11)    goto label19;

     label18:
(12)    $i6_1 = r0.jj_ntk;

     label19:
        $i6_2 = Phi($i6 #11, $i6_1 #12);

        tableswitch($i6_2)
        {
            case 11: goto label20;
            case 12: goto label21;
            case 13: goto label21;
            case 14: goto label20;
            case 15: goto label21;
            case 16: goto label21;
            case 17: goto label20;
            case 18: goto label21;
            case 19: goto label21;
            case 20: goto label21;
            case 21: goto label21;
            case 22: goto label20;
            case 23: goto label21;
            case 24: goto label21;
            case 25: goto label21;
            case 26: goto label20;
            case 27: goto label21;
            case 28: goto label21;
            case 29: goto label20;
            case 30: goto label21;
            case 31: goto label21;
            case 32: goto label21;
            case 33: goto label21;
            case 34: goto label21;
            case 35: goto label21;
            case 36: goto label20;
            case 37: goto label21;
            case 38: goto label20;
            case 39: goto label21;
            case 40: goto label20;
            case 41: goto label20;
            case 42: goto label21;
            case 43: goto label21;
            case 44: goto label21;
            case 45: goto label21;
            case 46: goto label21;
            case 47: goto label20;
            case 48: goto label21;
            case 49: goto label21;
            case 50: goto label21;
            case 51: goto label21;
            case 52: goto label21;
            case 53: goto label21;
            case 54: goto label21;
            case 55: goto label20;
            case 56: goto label21;
            case 57: goto label20;
            case 58: goto label21;
            case 59: goto label21;
            case 60: goto label20;
            case 61: goto label21;
            case 62: goto label21;
            case 63: goto label21;
            case 64: goto label20;
            case 65: goto label21;
            case 66: goto label20;
            case 67: goto label20;
            case 68: goto label21;
            case 69: goto label20;
            case 70: goto label21;
            case 71: goto label21;
            case 72: goto label20;
            default: goto label21;
        };

     label20:
        r0.PostfixExpression();

(13)    goto label22;

     label21:
        specialinvoke r0.jj_consume_token(-1);

        $r8 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r8.<init>();

        throw $r8;

     label22:
        r11_3 = Phi(r11_2 #9, r11 #10, r11 #13);

        $i6_3 = Phi($i6 #9, $i6 #10, $i6_2 #13);

        $i5_3 = Phi($i5_2 #9, $i5 #10, $i5 #13);

        z1_2 = Phi(z1_1 #9, z1 #10, z1 #13);

        return;

        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public final void CastLookahead() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i2_3, $i3_3;
        org.gjt.sp.jedit.bsh.ParseException $r9, $r11;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_10(2);

        if $z0 == 0 goto label01;

        specialinvoke r0.jj_consume_token(72);

        r0.PrimitiveType();

(0)     goto label16;

     label01:
        $z1 = specialinvoke r0.jj_2_11(2147483647);

        if $z1 == 0 goto label02;

        specialinvoke r0.jj_consume_token(72);

        r0.AmbiguousName();

        specialinvoke r0.jj_consume_token(76);

        specialinvoke r0.jj_consume_token(77);

(1)     goto label16;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i2 = specialinvoke r0.jj_ntk();

(2)     goto label04;

     label03:
(3)     $i2_1 = r0.jj_ntk;

     label04:
        $i2_2 = Phi($i2 #2, $i2_1 #3);

        lookupswitch($i2_2)
        {
            case 72: goto label05;
            default: goto label15;
        };

     label05:
        specialinvoke r0.jj_consume_token(72);

        r0.AmbiguousName();

        specialinvoke r0.jj_consume_token(73);

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label06;

        $i3 = specialinvoke r0.jj_ntk();

(4)     goto label07;

     label06:
(5)     $i3_1 = r0.jj_ntk;

     label07:
        $i3_2 = Phi($i3 #4, $i3_1 #5);

        lookupswitch($i3_2)
        {
            case 26: goto label13;
            case 40: goto label12;
            case 41: goto label13;
            case 55: goto label13;
            case 57: goto label13;
            case 60: goto label13;
            case 64: goto label13;
            case 66: goto label13;
            case 67: goto label13;
            case 69: goto label11;
            case 72: goto label10;
            case 86: goto label09;
            case 87: goto label08;
            default: goto label14;
        };

     label08:
        specialinvoke r0.jj_consume_token(87);

(6)     goto label16;

     label09:
        specialinvoke r0.jj_consume_token(86);

(7)     goto label16;

     label10:
        specialinvoke r0.jj_consume_token(72);

(8)     goto label16;

     label11:
        specialinvoke r0.jj_consume_token(69);

(9)     goto label16;

     label12:
        specialinvoke r0.jj_consume_token(40);

(10)    goto label16;

     label13:
        r0.Literal();

(11)    goto label16;

     label14:
        specialinvoke r0.jj_consume_token(-1);

        $r9 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r9.<init>();

        throw $r9;

     label15:
        specialinvoke r0.jj_consume_token(-1);

        $r11 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r11.<init>();

        throw $r11;

     label16:
        $i2_3 = Phi($i2 #0, $i2 #1, $i2_2 #6, $i2_2 #7, $i2_2 #8, $i2_2 #9, $i2_2 #10, $i2_2 #11);

        $i3_3 = Phi($i3 #0, $i3 #1, $i3_2 #6, $i3_2 #7, $i3_2 #8, $i3_2 #9, $i3_2 #10, $i3_2 #11);

        return;
    }

    public final void PostfixExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHUnaryExpression r1, $r4;
        java.lang.Throwable r2, $r9;
        boolean $z0, z1, z1_1, z1_2;
        int $i0, $i1, $i2, $i3, $i4, $i3_1, $i3_2, $i4_1, $i4_2, $i4_3, $i3_3;
        org.gjt.sp.jedit.bsh.ParseException $r3, $r8;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r7, $r10;
        org.gjt.sp.jedit.bsh.Token r11, r11_1, r11_2, r11_3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_12(2147483647);

        if $z0 == 0 goto label13;

        r0.PrimaryExpression();

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label01;

        $i3 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i3_1 = r0.jj_ntk;

     label02:
        $i3_2 = Phi($i3 #0, $i3_1 #1);

        lookupswitch($i3_2)
        {
            case 100: goto label03;
            case 101: goto label04;
            default: goto label05;
        };

     label03:
        r11 = specialinvoke r0.jj_consume_token(100);

(2)     goto label06;

     label04:
        r11_1 = specialinvoke r0.jj_consume_token(101);

(3)     goto label06;

     label05:
        specialinvoke r0.jj_consume_token(-1);

        $r8 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r8.<init>();

        throw $r8;

     label06:
        r11_2 = Phi(r11 #2, r11_1 #3);

        $r4 = new org.gjt.sp.jedit.bsh.BSHUnaryExpression;

        specialinvoke $r4.<init>(16);

        r1 = $r4;

        z1 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(4)     r0.jjtreeOpenNodeScope(r1);

     label07:
        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

(5)     z1_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $i2 = r11_2.kind;

        r1.kind = $i2;

        r1.postfix = 1;

     label08:
        if 0 == 0 goto label12;

        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label12;

     label09:
        $r9 := @caughtexception;

        z1 = Phi(z1 #4, z1_1 #5, z1 #6);

        r11 = Phi(r11_2 #4, r11 #6);

(6)     $i3 = Phi($i3_2 #4, $i3 #6);

        r2 = $r9;

     label10:
        if z1 == 0 goto label11;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label11:
        throw r2;

     label12:
(7)     goto label18;

     label13:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label14;

        $i4 = specialinvoke r0.jj_ntk();

(8)     goto label15;

     label14:
(9)     $i4_1 = r0.jj_ntk;

     label15:
        $i4_2 = Phi($i4 #8, $i4_1 #9);

        tableswitch($i4_2)
        {
            case 11: goto label16;
            case 12: goto label17;
            case 13: goto label17;
            case 14: goto label16;
            case 15: goto label17;
            case 16: goto label17;
            case 17: goto label16;
            case 18: goto label17;
            case 19: goto label17;
            case 20: goto label17;
            case 21: goto label17;
            case 22: goto label16;
            case 23: goto label17;
            case 24: goto label17;
            case 25: goto label17;
            case 26: goto label16;
            case 27: goto label17;
            case 28: goto label17;
            case 29: goto label16;
            case 30: goto label17;
            case 31: goto label17;
            case 32: goto label17;
            case 33: goto label17;
            case 34: goto label17;
            case 35: goto label17;
            case 36: goto label16;
            case 37: goto label17;
            case 38: goto label16;
            case 39: goto label17;
            case 40: goto label16;
            case 41: goto label16;
            case 42: goto label17;
            case 43: goto label17;
            case 44: goto label17;
            case 45: goto label17;
            case 46: goto label17;
            case 47: goto label16;
            case 48: goto label17;
            case 49: goto label17;
            case 50: goto label17;
            case 51: goto label17;
            case 52: goto label17;
            case 53: goto label17;
            case 54: goto label17;
            case 55: goto label16;
            case 56: goto label17;
            case 57: goto label16;
            case 58: goto label17;
            case 59: goto label17;
            case 60: goto label16;
            case 61: goto label17;
            case 62: goto label17;
            case 63: goto label17;
            case 64: goto label16;
            case 65: goto label17;
            case 66: goto label16;
            case 67: goto label16;
            case 68: goto label17;
            case 69: goto label16;
            case 70: goto label17;
            case 71: goto label17;
            case 72: goto label16;
            default: goto label17;
        };

     label16:
        r0.PrimaryExpression();

(10)    goto label18;

     label17:
        specialinvoke r0.jj_consume_token(-1);

        $r3 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r3.<init>();

        throw $r3;

     label18:
        z1_2 = Phi(z1_1 #7, z1 #10);

        r11_3 = Phi(r11_2 #7, r11 #10);

        $i4_3 = Phi($i4 #7, $i4_2 #10);

        $i3_3 = Phi($i3_2 #7, $i3 #10);

        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public final void CastExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHCastExpression r1, $r4;
        java.lang.Throwable r2, r3, $r13, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r14, $r16, $r21;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        org.gjt.sp.jedit.bsh.ParseException $r10, $r19;
        java.lang.Error $r18;
        java.lang.RuntimeException $r20;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHCastExpression;

        specialinvoke $r4.<init>(17);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_13(2147483647);

        if $z0 == 0 goto label02;

        specialinvoke r0.jj_consume_token(72);

        r0.Type();

        specialinvoke r0.jj_consume_token(73);

        r0.UnaryExpression();

(1)     goto label07;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(2)     goto label04;

     label03:
(3)     $i1_1 = r0.jj_ntk;

     label04:
        $i1_2 = Phi($i1 #2, $i1_1 #3);

(4)     lookupswitch($i1_2)
        {
            case 72: goto label05;
            default: goto label06;
        };

     label05:
        specialinvoke r0.jj_consume_token(72);

        r0.Type();

        specialinvoke r0.jj_consume_token(73);

        r0.UnaryExpressionNotPlusMinus();

(5)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label07:
        $i1_3 = Phi($i1 #1, $i1_2 #5);

        if z3 == 0 goto label16;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label16;

     label08:
        $r15 := @caughtexception;

(6)     $i1_4 = Phi($i1 #0, $i1_1 #3, $i1_2 #4);

        r2 = $r15;

        if z3 == 0 goto label09;

        $r21 = r0.jjtree;

        $r21.clearNodeScope(r1);

(7)     z3_1 = 0;

(8)     goto label10;

     label09:
        $r16 = r0.jjtree;

(9)     $r16.popNode();

     label10:
        z3_2 = Phi(z3_1 #8, z3 #9);

(10)    $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label11;

        $r20 = (java.lang.RuntimeException) r2;

        throw $r20;

     label11:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label12;

        $r19 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r19;

     label12:
        $r18 = (java.lang.Error) r2;

        throw $r18;

     label13:
        $r13 := @caughtexception;

        $i1 = Phi($i1_4 #6, $i1 #11, $i1 #0, $i1_1 #3, $i1_2 #4);

(11)    z3 = Phi(z3_1 #7, z3_2 #10, z3 #11, z3 #0);

        r3 = $r13;

     label14:
        if z3 == 0 goto label15;

        $r14 = r0.jjtree;

        $r14.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label14 with label13;
    }

    public final void PrimaryExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHPrimaryExpression r1, $r4;
        java.lang.Throwable r2, r3, $r7, $r9;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r10, $r15;
        int $i0, $i1;
        boolean $z0, $z1, z2;
        java.lang.Error $r12;
        org.gjt.sp.jedit.bsh.ParseException $r13;
        java.lang.RuntimeException $r14;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHPrimaryExpression;

        specialinvoke $r4.<init>(18);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
(1)     r0.PrimaryPrefix();

     label02:
        z2 = Phi(z2 #1, z2 #5);

        $i1 = Phi($i1 #1, $i1 #5);

(2)     $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1 = r0.jj_ntk;

     label04:
        $i1 = Phi($i1 #3, $i1 #4);

        lookupswitch($i1)
        {
            case 74: goto label05;
            case 76: goto label05;
            case 80: goto label05;
            default: goto label06;
        };

     label05:
        goto label07;

     label06:
        goto label08;

     label07:
        r0.PrimarySuffix();

(5)     goto label02;

     label08:
        if z2 == 0 goto label17;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label17;

     label09:
        $r9 := @caughtexception;

        z2 = Phi(z2 #0, z2 #2);

(6)     $i1 = Phi($i1 #0, $i1 #2);

        r2 = $r9;

        if z2 == 0 goto label10;

        $r15 = r0.jjtree;

        $r15.clearNodeScope(r1);

        z2 = 0;

(7)     goto label11;

     label10:
        $r10 = r0.jjtree;

(8)     $r10.popNode();

     label11:
        z2 = Phi(z2 #7, z2 #8);

        $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label12;

        $r14 = (java.lang.RuntimeException) r2;

        throw $r14;

     label12:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label13;

        $r13 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r13;

     label13:
        $r12 = (java.lang.Error) r2;

        throw $r12;

     label14:
        $r7 := @caughtexception;

        z2 = Phi(z2 #6, z2 #9, z2 #0, z2 #2);

(9)     $i1 = Phi($i1 #6, $i1 #9, $i1 #0, $i1 #2);

        r3 = $r7;

     label15:
        if z2 == 0 goto label16;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label16:
        throw r3;

     label17:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Throwable from label09 to label15 with label14;
    }

    public final void MethodInvocation() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHMethodInvocation r1, $r4;
        java.lang.Throwable r2, r3, $r7, $r9;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r10, $r15;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r12;
        org.gjt.sp.jedit.bsh.ParseException $r13;
        java.lang.RuntimeException $r14;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHMethodInvocation;

        specialinvoke $r4.<init>(19);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r0.AmbiguousName();

        r0.Arguments();

     label02:
        if z2 == 0 goto label11;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
        $r9 := @caughtexception;

        r2 = $r9;

        if z2 == 0 goto label04;

        $r15 = r0.jjtree;

        $r15.clearNodeScope(r1);

(1)     z2_1 = 0;

(2)     goto label05;

     label04:
        $r10 = r0.jjtree;

(3)     $r10.popNode();

     label05:
        z2_2 = Phi(z2_1 #2, z2 #3);

(4)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r14 = (java.lang.RuntimeException) r2;

        throw $r14;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r13 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r13;

     label07:
        $r12 = (java.lang.Error) r2;

        throw $r12;

     label08:
        $r7 := @caughtexception;

(5)     z2 = Phi(z2_1 #1, z2_2 #4, z2 #5, z2 #0);

        r3 = $r7;

     label09:
        if z2 == 0 goto label10;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void PrimaryPrefix() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i3_3;
        boolean $z0, $z1;
        org.gjt.sp.jedit.bsh.ParseException $r4;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label01;

        $i2 = specialinvoke r0.jj_ntk();

(0)     goto label02;

     label01:
(1)     $i2_1 = r0.jj_ntk;

     label02:
        $i2_2 = Phi($i2 #0, $i2_1 #1);

        lookupswitch($i2_2)
        {
            case 26: goto label03;
            case 40: goto label05;
            case 41: goto label03;
            case 55: goto label03;
            case 57: goto label03;
            case 60: goto label03;
            case 64: goto label03;
            case 66: goto label03;
            case 67: goto label03;
            case 72: goto label04;
            default: goto label06;
        };

     label03:
        r0.Literal();

(2)     goto label13;

     label04:
        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

(3)     goto label13;

     label05:
        r0.AllocationExpression();

(4)     goto label13;

     label06:
        $z0 = specialinvoke r0.jj_2_14(2147483647);

        if $z0 == 0 goto label07;

        r0.MethodInvocation();

(5)     goto label13;

     label07:
        $z1 = specialinvoke r0.jj_2_15(2147483647);

        if $z1 == 0 goto label08;

        r0.Type();

(6)     goto label13;

     label08:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label09;

        $i3 = specialinvoke r0.jj_ntk();

(7)     goto label10;

     label09:
(8)     $i3_1 = r0.jj_ntk;

     label10:
        $i3_2 = Phi($i3 #7, $i3_1 #8);

        lookupswitch($i3_2)
        {
            case 69: goto label11;
            default: goto label12;
        };

     label11:
        r0.AmbiguousName();

(9)     goto label13;

     label12:
        specialinvoke r0.jj_consume_token(-1);

        $r4 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r4.<init>();

        throw $r4;

     label13:
        $i3_3 = Phi($i3 #2, $i3 #3, $i3 #4, $i3 #5, $i3 #6, $i3_2 #9);

        return;
    }

    public final void PrimarySuffix() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHPrimarySuffix r1, $r4;
        java.lang.Throwable r2, r3, $r13, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r9, $r10, $r12, $r14, $r16, $r20;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2, z3_3, z3_4, z3_5, z3_6, z3_7, z3_8;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i3_3, $i2_3, $i3_4, $i2_4;
        java.lang.String $r7;
        org.gjt.sp.jedit.bsh.ParseException $r11, $r18;
        java.lang.Error $r17;
        java.lang.RuntimeException $r19;
        org.gjt.sp.jedit.bsh.Token r21;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHPrimarySuffix;

        specialinvoke $r4.<init>(20);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_16(2);

        if $z0 == 0 goto label02;

        specialinvoke r0.jj_consume_token(80);

        specialinvoke r0.jj_consume_token(13);

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

(1)     z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.operation = 0;

(2)     goto label13;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i2 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i2_1 = r0.jj_ntk;

     label04:
        $i2_2 = Phi($i2 #3, $i2_1 #4);

(5)     lookupswitch($i2_2)
        {
            case 74: goto label11;
            case 76: goto label05;
            case 80: goto label06;
            default: goto label12;
        };

     label05:
        specialinvoke r0.jj_consume_token(76);

        r0.Expression();

        specialinvoke r0.jj_consume_token(77);

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

(6)     z3_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.operation = 1;

(7)     goto label13;

     label06:
        specialinvoke r0.jj_consume_token(80);

        r21 = specialinvoke r0.jj_consume_token(69);

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label07;

        $i3 = specialinvoke r0.jj_ntk();

(8)     goto label08;

     label07:
(9)     $i3_1 = r0.jj_ntk;

     label08:
        $i3_2 = Phi($i3 #8, $i3_1 #9);

(10)    lookupswitch($i3_2)
        {
            case 72: goto label09;
            default: goto label10;
        };

     label09:
        r0.Arguments();

        goto label10;

     label10:
        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

(11)    z3_3 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.operation = 2;

        $r7 = r21.image;

        r1.field = $r7;

(12)    goto label13;

     label11:
        specialinvoke r0.jj_consume_token(74);

        r0.Expression();

        specialinvoke r0.jj_consume_token(75);

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

(13)    z3_4 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.operation = 3;

(14)    goto label13;

     label12:
        specialinvoke r0.jj_consume_token(-1);

        $r11 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r11.<init>();

        throw $r11;

     label13:
        z3_5 = Phi(z3_1 #2, z3_2 #7, z3_3 #12, z3_4 #14);

        $i3_3 = Phi($i3 #2, $i3 #7, $i3_2 #12, $i3 #14);

        $i2_3 = Phi($i2 #2, $i2_2 #7, $i2_2 #12, $i2_2 #14);

        if z3_5 == 0 goto label22;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label22;

     label14:
        $r15 := @caughtexception;

        z3_6 = Phi(z3 #0, z3_1 #1, z3_2 #6, z3_3 #11, z3_4 #13);

        $i3_4 = Phi($i3 #0, $i3_1 #9, $i3_2 #10);

(15)    $i2_4 = Phi($i2 #0, $i2_1 #4, $i2_2 #5);

        r2 = $r15;

        if z3_6 == 0 goto label15;

        $r20 = r0.jjtree;

        $r20.clearNodeScope(r1);

(16)    z3_7 = 0;

(17)    goto label16;

     label15:
        $r16 = r0.jjtree;

(18)    $r16.popNode();

     label16:
        z3_8 = Phi(z3_7 #17, z3_6 #18);

(19)    $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label17;

        $r19 = (java.lang.RuntimeException) r2;

        throw $r19;

     label17:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label18;

        $r18 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r18;

     label18:
        $r17 = (java.lang.Error) r2;

        throw $r17;

     label19:
        $r13 := @caughtexception;

        z3 = Phi(z3_6 #15, z3_7 #16, z3_8 #19, z3 #20, z3 #0, z3_1 #1, z3_2 #6, z3_3 #11, z3_4 #13);

        $i3 = Phi($i3_4 #15, $i3 #20, $i3 #0, $i3_1 #9, $i3_2 #10);

(20)    $i2 = Phi($i2_4 #15, $i2 #20, $i2 #0, $i2_1 #4, $i2_2 #5);

        r3 = $r13;

     label20:
        if z3 == 0 goto label21;

        $r14 = r0.jjtree;

        $r14.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label21:
        throw r3;

     label22:
        return;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label01 to label13 with label19;
        catch java.lang.Throwable from label14 to label20 with label19;
    }

    public final void Literal() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHLiteral r1, $r3;
        boolean z0, $z1, $z2, z3, z3_1, z3_2, z3_3, z3_4, z3_5, z3_6, z3_7, z3_8, z3_9, z3_10, z3_11;
        java.lang.Throwable r2, $r32, $r34, r72;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r5, $r9, $r10, $r14, $r19, $r24, $r26, $r28, $r33, $r35, $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i17_1, $i17_2, $i17_3;
        java.lang.String $r6, $r7, $r8, $r11, $r12, $r13, $r44, $r46, $r52, $r57, $r59, r62, r63, r66, r67, r66_1, r66_2, r66_3, r66_4;
        org.gjt.sp.jedit.bsh.Primitive $r15, $r17, $r20, $r22, $r25, $r27, $r29;
        java.lang.Float $r16;
        float $f0;
        java.lang.Double $r18;
        double $d0;
        java.lang.Long $r21;
        long $l15;
        java.lang.Integer $r23;
        org.gjt.sp.jedit.bsh.ParseException $r31, $r38, $r47, $r53, $r60;
        java.lang.Error $r37;
        java.lang.RuntimeException $r39;
        java.lang.Exception $r41, $r54, r69, r71;
        java.lang.StringBuilder $r42, $r43, $r45, $r49, $r50, $r51, $r55, $r56, $r58;
        java.lang.NumberFormatException $r48, r64;
        org.gjt.sp.jedit.bsh.Token r61, r65, r68, r70;
        char c18, c19;

        r0 := @this;

        $r3 = new org.gjt.sp.jedit.bsh.BSHLiteral;

        specialinvoke $r3.<init>(21);

        r1 = $r3;

        z3 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i17 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i17_1 = r0.jj_ntk;

     label03:
        $i17_2 = Phi($i17 #1, $i17_1 #2);

(3)     lookupswitch($i17_2)
        {
            case 26: goto label22;
            case 41: goto label23;
            case 55: goto label22;
            case 57: goto label24;
            case 60: goto label04;
            case 64: goto label09;
            case 66: goto label14;
            case 67: goto label18;
            default: goto label25;
        };

     label04:
        r61 = specialinvoke r0.jj_consume_token(60);

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

(4)     z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r62 = r61.image;

        $i11 = r62.length();

        $i12 = $i11 - 1;

        c18 = r62.charAt($i12);

        if c18 == 108 goto label05;

        if c18 != 76 goto label06;

     label05:
        $i13 = r62.length();

        $i14 = $i13 - 1;

        r63 = r62.substring(0, $i14);

        $r20 = new org.gjt.sp.jedit.bsh.Primitive;

        $r21 = new java.lang.Long;

        specialinvoke $r21.<init>(r63);

        $l15 = $r21.longValue();

        specialinvoke $r20.<init>($l15);

        r1.value = $r20;

(5)     goto label26;

     label06:
        $r22 = new org.gjt.sp.jedit.bsh.Primitive;

        $r23 = java.lang.Integer.decode(r62);

        $i16 = $r23.intValue();

        specialinvoke $r22.<init>($i16);

        r1.value = $r22;

     label07:
(6)     goto label26;

     label08:
        $r48 := @caughtexception;

        r64 = $r48;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<init>();

        $r50 = $r49.append("Error or number too big for integer type: ");

        $r51 = $r50.append(r62);

        $r52 = $r51.toString();

        $r53 = r0.createParseException($r52);

        throw $r53;

     label09:
        r65 = specialinvoke r0.jj_consume_token(64);

        $r14 = r0.jjtree;

        $r14.closeNodeScope(r1, 1);

(7)     z3_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r66 = r65.image;

        $i5 = r66.length();

        $i6 = $i5 - 1;

        c19 = r66.charAt($i6);

        if c19 == 102 goto label10;

        if c19 != 70 goto label11;

     label10:
        $i7 = r66.length();

        $i8 = $i7 - 1;

        r67 = r66.substring(0, $i8);

        $r15 = new org.gjt.sp.jedit.bsh.Primitive;

        $r16 = new java.lang.Float;

        specialinvoke $r16.<init>(r67);

        $f0 = $r16.floatValue();

        specialinvoke $r15.<init>($f0);

        r1.value = $r15;

(8)     goto label26;

     label11:
        if c19 == 100 goto label12;

(9)     if c19 != 68 goto label13;

     label12:
        $i9 = r66.length();

        $i10 = $i9 - 1;

(10)    r66_1 = r66.substring(0, $i10);

     label13:
        r66_2 = Phi(r66 #9, r66_1 #10);

(11)    $r17 = new org.gjt.sp.jedit.bsh.Primitive;

        $r18 = new java.lang.Double;

        specialinvoke $r18.<init>(r66_2);

        $d0 = $r18.doubleValue();

        specialinvoke $r17.<init>($d0);

        r1.value = $r17;

(12)    goto label26;

     label14:
        r68 = specialinvoke r0.jj_consume_token(66);

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

(13)    z3_3 = 0;

        r0.jjtreeCloseNodeScope(r1);

     label15:
        $r12 = r68.image;

        $r11 = r68.image;

        $i3 = $r11.length();

        $i4 = $i3 - 1;

        $r13 = $r12.substring(1, $i4);

        r1.charSetup($r13);

     label16:
(14)    goto label26;

     label17:
        $r54 := @caughtexception;

        r69 = $r54;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<init>();

        $r56 = $r55.append("Error parsing character: ");

        $r57 = r68.image;

        $r58 = $r56.append($r57);

        $r59 = $r58.toString();

        $r60 = r0.createParseException($r59);

        throw $r60;

     label18:
        r70 = specialinvoke r0.jj_consume_token(67);

        $r5 = r0.jjtree;

        $r5.closeNodeScope(r1, 1);

(15)    z3_4 = 0;

        r0.jjtreeCloseNodeScope(r1);

     label19:
        $r7 = r70.image;

        $r6 = r70.image;

        $i1 = $r6.length();

        $i2 = $i1 - 1;

        $r8 = $r7.substring(1, $i2);

        r1.stringSetup($r8);

     label20:
(16)    goto label26;

     label21:
        $r41 := @caughtexception;

        r71 = $r41;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<init>();

        $r43 = $r42.append("Error parsing string: ");

        $r44 = r70.image;

        $r45 = $r43.append($r44);

        $r46 = $r45.toString();

        $r47 = r0.createParseException($r46);

        throw $r47;

     label22:
        z0 = r0.BooleanLiteral();

        $r28 = r0.jjtree;

        $r28.closeNodeScope(r1, 1);

(17)    z3_5 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r29 = new org.gjt.sp.jedit.bsh.Primitive;

        specialinvoke $r29.<init>(z0);

        r1.value = $r29;

(18)    goto label26;

     label23:
        r0.NullLiteral();

        $r26 = r0.jjtree;

        $r26.closeNodeScope(r1, 1);

(19)    z3_6 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r27 = org.gjt.sp.jedit.bsh.Primitive.NULL;

        r1.value = $r27;

(20)    goto label26;

     label24:
        r0.VoidLiteral();

        $r24 = r0.jjtree;

        $r24.closeNodeScope(r1, 1);

(21)    z3_7 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r25 = org.gjt.sp.jedit.bsh.Primitive.VOID;

        r1.value = $r25;

(22)    goto label26;

     label25:
        specialinvoke r0.jj_consume_token(-1);

        $r31 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r31.<init>();

        throw $r31;

     label26:
        z3_8 = Phi(z3_1 #5, z3_1 #6, z3_2 #8, z3_2 #12, z3_3 #14, z3_4 #16, z3_5 #18, z3_6 #20, z3_7 #22);

        r66_3 = Phi(r66 #5, r66 #6, r66 #8, r66_2 #12, r66 #14, r66 #16, r66 #18, r66 #20, r66 #22);

        if z3_8 == 0 goto label35;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label35;

     label27:
        $r34 := @caughtexception;

        $i17_3 = Phi($i17 #0, $i17_1 #2, $i17_2 #3);

        z3_9 = Phi(z3 #0, z3_1 #4, z3_2 #7, z3_3 #13, z3_4 #15, z3_5 #17, z3_6 #19, z3_7 #21);

(23)    r66_4 = Phi(r66 #0, r66_1 #10, r66_2 #11);

        r72 = $r34;

        if z3_9 == 0 goto label28;

        $r40 = r0.jjtree;

        $r40.clearNodeScope(r1);

(24)    z3_10 = 0;

(25)    goto label29;

     label28:
        $r35 = r0.jjtree;

(26)    $r35.popNode();

     label29:
        z3_11 = Phi(z3_10 #25, z3_9 #26);

(27)    $z1 = r72 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label30;

        $r39 = (java.lang.RuntimeException) r72;

        throw $r39;

     label30:
        $z2 = r72 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label31;

        $r38 = (org.gjt.sp.jedit.bsh.ParseException) r72;

        throw $r38;

     label31:
        $r37 = (java.lang.Error) r72;

        throw $r37;

     label32:
        $r32 := @caughtexception;

        $i17 = Phi($i17_3 #23, $i17 #28, $i17 #0, $i17_1 #2, $i17_2 #3);

        z3 = Phi(z3_9 #23, z3_10 #24, z3_11 #27, z3 #28, z3 #0, z3_1 #4, z3_2 #7, z3_3 #13, z3_4 #15, z3_5 #17, z3_6 #19, z3_7 #21);

(28)    r66 = Phi(r66_4 #23, r66 #28, r66 #0, r66_1 #10, r66_2 #11);

        r2 = $r32;

     label33:
        if z3 == 0 goto label34;

        $r33 = r0.jjtree;

        $r33.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label34:
        throw r2;

     label35:
        return;

        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label26 with label27;
        catch java.lang.Throwable from label01 to label26 with label32;
        catch java.lang.Throwable from label27 to label33 with label32;
    }

    public final boolean BooleanLiteral() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1, $i1_1, $i1_2;
        org.gjt.sp.jedit.bsh.ParseException $r4;

        r0 := @this;

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label1;

        $i1 = specialinvoke r0.jj_ntk();

(0)     goto label2;

     label1:
(1)     $i1_1 = r0.jj_ntk;

     label2:
        $i1_2 = Phi($i1 #0, $i1_1 #1);

        lookupswitch($i1_2)
        {
            case 26: goto label4;
            case 55: goto label3;
            default: goto label5;
        };

     label3:
        specialinvoke r0.jj_consume_token(55);

        return 1;

     label4:
        specialinvoke r0.jj_consume_token(26);

        return 0;

     label5:
        specialinvoke r0.jj_consume_token(-1);

        $r4 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r4.<init>();

        throw $r4;
    }

    public final void NullLiteral() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        specialinvoke r0.jj_consume_token(41);

        return;
    }

    public final void VoidLiteral() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        specialinvoke r0.jj_consume_token(57);

        return;
    }

    public final void Arguments() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHArguments r1, $r4;
        java.lang.Throwable r2, r3, $r9, $r11;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r10, $r12, $r17;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r14;
        org.gjt.sp.jedit.bsh.ParseException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHArguments;

        specialinvoke $r4.<init>(22);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(72);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     tableswitch($i1_2)
        {
            case 11: goto label04;
            case 12: goto label05;
            case 13: goto label05;
            case 14: goto label04;
            case 15: goto label05;
            case 16: goto label05;
            case 17: goto label04;
            case 18: goto label05;
            case 19: goto label05;
            case 20: goto label05;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label05;
            case 24: goto label05;
            case 25: goto label05;
            case 26: goto label04;
            case 27: goto label05;
            case 28: goto label05;
            case 29: goto label04;
            case 30: goto label05;
            case 31: goto label05;
            case 32: goto label05;
            case 33: goto label05;
            case 34: goto label05;
            case 35: goto label05;
            case 36: goto label04;
            case 37: goto label05;
            case 38: goto label04;
            case 39: goto label05;
            case 40: goto label04;
            case 41: goto label04;
            case 42: goto label05;
            case 43: goto label05;
            case 44: goto label05;
            case 45: goto label05;
            case 46: goto label05;
            case 47: goto label04;
            case 48: goto label05;
            case 49: goto label05;
            case 50: goto label05;
            case 51: goto label05;
            case 52: goto label05;
            case 53: goto label05;
            case 54: goto label05;
            case 55: goto label04;
            case 56: goto label05;
            case 57: goto label04;
            case 58: goto label05;
            case 59: goto label05;
            case 60: goto label04;
            case 61: goto label05;
            case 62: goto label05;
            case 63: goto label05;
            case 64: goto label04;
            case 65: goto label05;
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label05;
            case 69: goto label04;
            case 70: goto label05;
            case 71: goto label05;
            case 72: goto label04;
            case 73: goto label05;
            case 74: goto label05;
            case 75: goto label05;
            case 76: goto label05;
            case 77: goto label05;
            case 78: goto label05;
            case 79: goto label05;
            case 80: goto label05;
            case 81: goto label05;
            case 82: goto label05;
            case 83: goto label05;
            case 84: goto label05;
            case 85: goto label05;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label05;
            case 89: goto label05;
            case 90: goto label05;
            case 91: goto label05;
            case 92: goto label05;
            case 93: goto label05;
            case 94: goto label05;
            case 95: goto label05;
            case 96: goto label05;
            case 97: goto label05;
            case 98: goto label05;
            case 99: goto label05;
            case 100: goto label04;
            case 101: goto label04;
            case 102: goto label04;
            case 103: goto label04;
            default: goto label05;
        };

     label04:
        r0.ArgumentList();

        goto label05;

     label05:
        specialinvoke r0.jj_consume_token(73);

     label06:
        if z2 == 0 goto label15;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label15;

     label07:
        $r11 := @caughtexception;

(4)     $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

        r2 = $r11;

        if z2 == 0 goto label08;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

(5)     z2_1 = 0;

(6)     goto label09;

     label08:
        $r12 = r0.jjtree;

(7)     $r12.popNode();

     label09:
        z2_2 = Phi(z2_1 #6, z2 #7);

(8)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label10;

        $r16 = (java.lang.RuntimeException) r2;

        throw $r16;

     label10:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label11;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r15;

     label11:
        $r14 = (java.lang.Error) r2;

        throw $r14;

     label12:
        $r9 := @caughtexception;

        z2 = Phi(z2_1 #5, z2_2 #8, z2 #9, z2 #0);

(9)     $i1 = Phi($i1_3 #4, $i1 #9, $i1 #0, $i1_1 #2, $i1_2 #3);

        r3 = $r9;

     label13:
        if z2 == 0 goto label14;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label14:
        throw r3;

     label15:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label13 with label12;
    }

    public final void ArgumentList() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int $i0, $i1;

        r0 := @this;

(0)     r0.Expression();

     label1:
        $i1 = Phi($i1 #0, $i1 #3);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label2;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label3;

     label2:
(2)     $i1 = r0.jj_ntk;

     label3:
        $i1 = Phi($i1 #1, $i1 #2);

        lookupswitch($i1)
        {
            case 79: goto label4;
            default: goto label5;
        };

     label4:
        goto label6;

     label5:
        goto label7;

     label6:
        specialinvoke r0.jj_consume_token(79);

        r0.Expression();

(3)     goto label1;

     label7:
        return;
    }

    public final void AllocationExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHAllocationExpression r1, $r4;
        java.lang.Throwable r2, r3, $r13, $r20;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r7, $r14, $r19, $r21;
        boolean $z0, $z1, $z2, $z3, z4, z4_1, z4_2;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i3_3, $i2_3, $i3_4, $i2_4;
        org.gjt.sp.jedit.bsh.ParseException $r9, $r11, $r17;
        java.lang.Error $r16;
        java.lang.RuntimeException $r18;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHAllocationExpression;

        specialinvoke $r4.<init>(23);

        r1 = $r4;

        z4 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_18(2);

        if $z0 == 0 goto label02;

        specialinvoke r0.jj_consume_token(40);

        r0.PrimitiveType();

        r0.ArrayDimensions();

(1)     goto label12;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i2 = specialinvoke r0.jj_ntk();

(2)     goto label04;

     label03:
(3)     $i2_1 = r0.jj_ntk;

     label04:
        $i2_2 = Phi($i2 #2, $i2_1 #3);

(4)     lookupswitch($i2_2)
        {
            case 40: goto label05;
            default: goto label11;
        };

     label05:
        specialinvoke r0.jj_consume_token(40);

        r0.AmbiguousName();

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label06;

        $i3 = specialinvoke r0.jj_ntk();

(5)     goto label07;

     label06:
(6)     $i3_1 = r0.jj_ntk;

     label07:
        $i3_2 = Phi($i3 #5, $i3_1 #6);

(7)     lookupswitch($i3_2)
        {
            case 72: goto label09;
            case 76: goto label08;
            default: goto label10;
        };

     label08:
        r0.ArrayDimensions();

(8)     goto label12;

     label09:
        r0.Arguments();

        $z1 = specialinvoke r0.jj_2_17(2);

(9)     if $z1 == 0 goto label12;

        r0.Block();

(10)    goto label12;

     label10:
        specialinvoke r0.jj_consume_token(-1);

        $r9 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r9.<init>();

        throw $r9;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r11 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r11.<init>();

        throw $r11;

     label12:
        $i3_3 = Phi($i3 #1, $i3_2 #8, $i3_2 #9, $i3_2 #10);

        $i2_3 = Phi($i2 #1, $i2_2 #8, $i2_2 #9, $i2_2 #10);

        if z4 == 0 goto label21;

        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label21;

     label13:
        $r13 := @caughtexception;

        $i3_4 = Phi($i3 #0, $i3_1 #6, $i3_2 #7);

(11)    $i2_4 = Phi($i2 #0, $i2_1 #3, $i2_2 #4);

        r2 = $r13;

        if z4 == 0 goto label14;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

(12)    z4_1 = 0;

(13)    goto label15;

     label14:
        $r14 = r0.jjtree;

(14)    $r14.popNode();

     label15:
        z4_2 = Phi(z4_1 #13, z4 #14);

(15)    $z2 = r2 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label16;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label16:
        $z3 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z3 == 0 goto label17;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label17:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label18:
        $r20 := @caughtexception;

        $i3 = Phi($i3_4 #11, $i3 #16, $i3 #0, $i3_1 #6, $i3_2 #7);

        z4 = Phi(z4_1 #12, z4_2 #15, z4 #16, z4 #0);

(16)    $i2 = Phi($i2_4 #11, $i2 #16, $i2 #0, $i2_1 #3, $i2_2 #4);

        r3 = $r20;

     label19:
        if z4 == 0 goto label20;

        $r21 = r0.jjtree;

        $r21.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label20:
        throw r3;

     label21:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label01 to label12 with label18;
        catch java.lang.Throwable from label13 to label19 with label18;
    }

    public final void ArrayDimensions() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHArrayDimensions r1, $r4;
        java.lang.Throwable r2, r3, $r15, $r17;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r16, $r18, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2;
        org.gjt.sp.jedit.bsh.ParseException $r10, $r21;
        java.lang.Error $r20;
        java.lang.RuntimeException $r22;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHArrayDimensions;

        specialinvoke $r4.<init>(24);

        r1 = $r4;

        z5 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_21(2);

(1)     if $z0 == 0 goto label04;

     label02:
        z5 = Phi(z5 #1, z5 #4);

(2)     specialinvoke r0.jj_consume_token(76);

        r0.Expression();

        specialinvoke r0.jj_consume_token(77);

        r1.addDefinedDimension();

        $z1 = specialinvoke r0.jj_2_19(2);

(3)     if $z1 == 0 goto label03;

(4)     goto label02;

     label03:
        z5 = Phi(z5 #3, z5 #7);

(5)     $z2 = specialinvoke r0.jj_2_20(2);

(6)     if $z2 == 0 goto label14;

        specialinvoke r0.jj_consume_token(76);

        specialinvoke r0.jj_consume_token(77);

        r1.addUndefinedDimension();

(7)     goto label03;

     label04:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label05;

        $i2 = specialinvoke r0.jj_ntk();

(8)     goto label06;

     label05:
(9)     $i2_1 = r0.jj_ntk;

     label06:
        $i2_2 = Phi($i2 #8, $i2_1 #9);

(10)    lookupswitch($i2_2)
        {
            case 76: goto label07;
            default: goto label13;
        };

     label07:
        $i2 = Phi($i2_2 #10, $i2 #14);

        $i3 = Phi($i3 #10, $i3 #14);

        z5 = Phi(z5 #10, z5 #14);

(11)    specialinvoke r0.jj_consume_token(76);

        specialinvoke r0.jj_consume_token(77);

        r1.addUndefinedDimension();

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label08;

        $i3 = specialinvoke r0.jj_ntk();

(12)    goto label09;

     label08:
(13)    $i3 = r0.jj_ntk;

     label09:
        $i3 = Phi($i3 #12, $i3 #13);

        lookupswitch($i3)
        {
            case 76: goto label10;
            default: goto label11;
        };

     label10:
(14)    goto label07;

     label11:
        goto label12;

     label12:
        r0.ArrayInitializer();

(15)    goto label14;

     label13:
        specialinvoke r0.jj_consume_token(-1);

        $r10 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r10.<init>();

        throw $r10;

     label14:
        $i2 = Phi($i2 #6, $i2 #15);

        $i3 = Phi($i3 #6, $i3 #15);

        z5 = Phi(z5 #6, z5 #15);

        if z5 == 0 goto label23;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label23;

     label15:
(16)    $r17 := @caughtexception;

        $i2 = Phi($i2 #0, $i2 #2, $i2 #5, $i2_1 #9, $i2_2 #10, $i2 #11);

        $i3 = Phi($i3 #0, $i3 #2, $i3 #5, $i3 #11);

(17)    z5 = Phi(z5 #0, z5 #2, z5 #5, z5 #11);

        r2 = $r17;

        if z5 == 0 goto label16;

        $r23 = r0.jjtree;

        $r23.clearNodeScope(r1);

        z5 = 0;

(18)    goto label17;

     label16:
        $r18 = r0.jjtree;

(19)    $r18.popNode();

     label17:
        z5 = Phi(z5 #18, z5 #19);

        $z3 = r2 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label18;

        $r22 = (java.lang.RuntimeException) r2;

        throw $r22;

     label18:
        $z4 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z4 == 0 goto label19;

        $r21 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r21;

     label19:
        $r20 = (java.lang.Error) r2;

        throw $r20;

     label20:
        $r15 := @caughtexception;

        $i2 = Phi($i2 #17, $i2 #20, $i2 #0, $i2 #2, $i2 #5, $i2_1 #9, $i2_2 #10, $i2 #11);

        $i3 = Phi($i3 #17, $i3 #20, $i3 #0, $i3 #2, $i3 #5, $i3 #11);

(20)    z5 = Phi(z5 #16, z5 #20, z5 #0, z5 #2, z5 #5, z5 #11);

        r3 = $r15;

     label21:
        if z5 == 0 goto label22;

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label22:
        throw r3;

     label23:
        return;

        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label01 to label14 with label20;
        catch java.lang.Throwable from label15 to label21 with label20;
    }

    public final void Statement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i2_1, $i2_2, $i3_1, $i3_2, $i2_3, $i3_3;
        org.gjt.sp.jedit.bsh.ParseException $r3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_22(2);

        if $z0 == 0 goto label01;

        r0.LabeledStatement();

(0)     goto label23;

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i2 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i2_1 = r0.jj_ntk;

     label03:
        $i2_2 = Phi($i2 #1, $i2_1 #2);

        tableswitch($i2_2)
        {
            case 11: goto label06;
            case 12: goto label11;
            case 13: goto label11;
            case 14: goto label06;
            case 15: goto label11;
            case 16: goto label11;
            case 17: goto label06;
            case 18: goto label11;
            case 19: goto label11;
            case 20: goto label11;
            case 21: goto label10;
            case 22: goto label06;
            case 23: goto label11;
            case 24: goto label11;
            case 25: goto label11;
            case 26: goto label06;
            case 27: goto label11;
            case 28: goto label11;
            case 29: goto label06;
            case 30: goto label11;
            case 31: goto label11;
            case 32: goto label08;
            case 33: goto label11;
            case 34: goto label11;
            case 35: goto label11;
            case 36: goto label06;
            case 37: goto label11;
            case 38: goto label06;
            case 39: goto label11;
            case 40: goto label06;
            case 41: goto label06;
            case 42: goto label11;
            case 43: goto label11;
            case 44: goto label11;
            case 45: goto label11;
            case 46: goto label11;
            case 47: goto label06;
            case 48: goto label11;
            case 49: goto label11;
            case 50: goto label07;
            case 51: goto label11;
            case 52: goto label11;
            case 53: goto label11;
            case 54: goto label11;
            case 55: goto label06;
            case 56: goto label11;
            case 57: goto label06;
            case 58: goto label11;
            case 59: goto label09;
            case 60: goto label06;
            case 61: goto label11;
            case 62: goto label11;
            case 63: goto label11;
            case 64: goto label06;
            case 65: goto label11;
            case 66: goto label06;
            case 67: goto label06;
            case 68: goto label11;
            case 69: goto label06;
            case 70: goto label11;
            case 71: goto label11;
            case 72: goto label06;
            case 73: goto label11;
            case 74: goto label04;
            case 75: goto label11;
            case 76: goto label11;
            case 77: goto label11;
            case 78: goto label05;
            case 79: goto label11;
            case 80: goto label11;
            case 81: goto label11;
            case 82: goto label11;
            case 83: goto label11;
            case 84: goto label11;
            case 85: goto label11;
            case 86: goto label06;
            case 87: goto label06;
            case 88: goto label11;
            case 89: goto label11;
            case 90: goto label11;
            case 91: goto label11;
            case 92: goto label11;
            case 93: goto label11;
            case 94: goto label11;
            case 95: goto label11;
            case 96: goto label11;
            case 97: goto label11;
            case 98: goto label11;
            case 99: goto label11;
            case 100: goto label06;
            case 101: goto label06;
            case 102: goto label06;
            case 103: goto label06;
            default: goto label11;
        };

     label04:
        r0.Block();

(3)     goto label23;

     label05:
        r0.EmptyStatement();

(4)     goto label23;

     label06:
        r0.StatementExpression();

        specialinvoke r0.jj_consume_token(78);

(5)     goto label23;

     label07:
        r0.SwitchStatement();

(6)     goto label23;

     label08:
        r0.IfStatement();

(7)     goto label23;

     label09:
        r0.WhileStatement();

(8)     goto label23;

     label10:
        r0.DoStatement();

(9)     goto label23;

     label11:
        $z1 = r0.isRegularForStatement();

        if $z1 == 0 goto label12;

        r0.ForStatement();

(10)    goto label23;

     label12:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label13;

        $i3 = specialinvoke r0.jj_ntk();

(11)    goto label14;

     label13:
(12)    $i3_1 = r0.jj_ntk;

     label14:
        $i3_2 = Phi($i3 #11, $i3_1 #12);

        lookupswitch($i3_2)
        {
            case 12: goto label16;
            case 19: goto label17;
            case 30: goto label15;
            case 46: goto label18;
            case 51: goto label19;
            case 53: goto label20;
            case 56: goto label21;
            default: goto label22;
        };

     label15:
        r0.EnhancedForStatement();

(13)    goto label23;

     label16:
        r0.BreakStatement();

(14)    goto label23;

     label17:
        r0.ContinueStatement();

(15)    goto label23;

     label18:
        r0.ReturnStatement();

(16)    goto label23;

     label19:
        r0.SynchronizedStatement();

(17)    goto label23;

     label20:
        r0.ThrowStatement();

(18)    goto label23;

     label21:
        r0.TryStatement();

(19)    goto label23;

     label22:
        specialinvoke r0.jj_consume_token(-1);

        $r3 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r3.<init>();

        throw $r3;

     label23:
        $i2_3 = Phi($i2 #0, $i2_2 #3, $i2_2 #4, $i2_2 #5, $i2_2 #6, $i2_2 #7, $i2_2 #8, $i2_2 #9, $i2_2 #10, $i2_2 #13, $i2_2 #14, $i2_2 #15, $i2_2 #16, $i2_2 #17, $i2_2 #18, $i2_2 #19);

        $i3_3 = Phi($i3 #0, $i3 #3, $i3 #4, $i3 #5, $i3 #6, $i3 #7, $i3 #8, $i3 #9, $i3 #10, $i3_2 #13, $i3_2 #14, $i3_2 #15, $i3_2 #16, $i3_2 #17, $i3_2 #18, $i3_2 #19);

        return;
    }

    public final void LabeledStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        specialinvoke r0.jj_consume_token(69);

        specialinvoke r0.jj_consume_token(89);

        r0.Statement();

        return;
    }

    public final void Block() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBlock r1, $r4;
        java.lang.Throwable r2, r3, $r9, $r11;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r10, $r12, $r17;
        boolean $z0, $z1, $z2, z3;
        java.lang.Error $r14;
        org.gjt.sp.jedit.bsh.ParseException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHBlock;

        specialinvoke $r4.<init>(25);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
(1)     specialinvoke r0.jj_consume_token(74);

     label02:
        z3 = Phi(z3 #1, z3 #3);

(2)     $z0 = specialinvoke r0.jj_2_23(1);

        if $z0 == 0 goto label03;

        r0.BlockStatement();

(3)     goto label02;

     label03:
        specialinvoke r0.jj_consume_token(75);

     label04:
        if z3 == 0 goto label13;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label13;

     label05:
(4)     $r11 := @caughtexception;

        z3 = Phi(z3 #0, z3 #2);

        r2 = $r11;

        if z3 == 0 goto label06;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

        z3 = 0;

(5)     goto label07;

     label06:
        $r12 = r0.jjtree;

(6)     $r12.popNode();

     label07:
        z3 = Phi(z3 #5, z3 #6);

        $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label08;

        $r16 = (java.lang.RuntimeException) r2;

        throw $r16;

     label08:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label09;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r15;

     label09:
        $r14 = (java.lang.Error) r2;

        throw $r14;

     label10:
        $r9 := @caughtexception;

(7)     z3 = Phi(z3 #4, z3 #7, z3 #0, z3 #2);

        r3 = $r9;

     label11:
        if z3 == 0 goto label12;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label01 to label04 with label10;
        catch java.lang.Throwable from label05 to label11 with label10;
    }

    public final void BlockStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        org.gjt.sp.jedit.bsh.ParseException $r2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_24(2147483647);

        if $z0 == 0 goto label01;

        r0.ClassDeclaration();

(0)     goto label12;

     label01:
        $z1 = specialinvoke r0.jj_2_25(2147483647);

        if $z1 == 0 goto label02;

        r0.MethodDeclaration();

(1)     goto label12;

     label02:
        $z2 = specialinvoke r0.jj_2_26(2147483647);

        if $z2 == 0 goto label03;

        r0.MethodDeclaration();

(2)     goto label12;

     label03:
        $z3 = specialinvoke r0.jj_2_27(2147483647);

        if $z3 == 0 goto label04;

        r0.TypedVariableDeclaration();

        specialinvoke r0.jj_consume_token(78);

(3)     goto label12;

     label04:
        $z4 = specialinvoke r0.jj_2_28(1);

        if $z4 == 0 goto label05;

        r0.Statement();

(4)     goto label12;

     label05:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label06;

        $i1 = specialinvoke r0.jj_ntk();

(5)     goto label07;

     label06:
(6)     $i1_1 = r0.jj_ntk;

     label07:
        $i1_2 = Phi($i1 #5, $i1_1 #6);

        lookupswitch($i1_2)
        {
            case 34: goto label08;
            case 42: goto label09;
            case 48: goto label08;
            case 68: goto label10;
            default: goto label11;
        };

     label08:
        r0.ImportDeclaration();

(7)     goto label12;

     label09:
        r0.PackageDeclaration();

(8)     goto label12;

     label10:
        r0.FormalComment();

(9)     goto label12;

     label11:
        specialinvoke r0.jj_consume_token(-1);

        $r2 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r2.<init>();

        throw $r2;

     label12:
        $i1_3 = Phi($i1 #0, $i1 #1, $i1 #2, $i1 #3, $i1 #4, $i1_2 #7, $i1_2 #8, $i1_2 #9);

        return;
    }

    public final void FormalComment() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHFormalComment r1, $r4;
        org.gjt.sp.jedit.bsh.Token r2;
        java.lang.Throwable r3, $r9;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, z3, z3_1;
        java.lang.String $r7;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHFormalComment;

        specialinvoke $r4.<init>(26);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label1:
        r2 = specialinvoke r0.jj_consume_token(68);

        $r6 = r0.jjtree;

        $z0 = r0.retainComments;

        $r6.closeNodeScope(r1, $z0);

(1)     z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r7 = r2.image;

        r1.text = $r7;

     label2:
        if z3_1 == 0 goto label6;

        $r8 = r0.jjtree;

        $z1 = r0.retainComments;

        $r8.closeNodeScope(r1, $z1);

        r0.jjtreeCloseNodeScope(r1);

        goto label6;

     label3:
        $r9 := @caughtexception;

(2)     z3 = Phi(z3 #0, z3_1 #1, z3 #2);

        r3 = $r9;

     label4:
        if z3 == 0 goto label5;

        $r10 = r0.jjtree;

        $z2 = r0.retainComments;

        $r10.closeNodeScope(r1, $z2);

        r0.jjtreeCloseNodeScope(r1);

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void EmptyStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        specialinvoke r0.jj_consume_token(78);

        return;
    }

    public final void StatementExpression() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        r0.Expression();

        return;
    }

    public final void SwitchStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHSwitchStatement r1, $r4;
        java.lang.Throwable r2, r3, $r12, $r14;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r11, $r13, $r15, $r20;
        int $i0, $i1;
        boolean $z0, $z1, $z2, z3;
        java.lang.Error $r17;
        org.gjt.sp.jedit.bsh.ParseException $r18;
        java.lang.RuntimeException $r19;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHSwitchStatement;

        specialinvoke $r4.<init>(27);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(50);

        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

(1)     specialinvoke r0.jj_consume_token(74);

     label02:
        z3 = Phi(z3 #1, z3 #7);

        $i1 = Phi($i1 #1, $i1 #7);

(2)     $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1 = r0.jj_ntk;

     label04:
        $i1 = Phi($i1 #3, $i1 #4);

        lookupswitch($i1)
        {
            case 15: goto label05;
            case 20: goto label05;
            default: goto label06;
        };

     label05:
        goto label07;

     label06:
        goto label09;

     label07:
(5)     r0.SwitchLabel();

     label08:
        z3 = Phi(z3 #5, z3 #8);

        $i1 = Phi($i1 #5, $i1 #8);

(6)     $z0 = specialinvoke r0.jj_2_29(1);

(7)     if $z0 == 0 goto label02;

        r0.BlockStatement();

(8)     goto label08;

     label09:
        specialinvoke r0.jj_consume_token(75);

     label10:
        if z3 == 0 goto label19;

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label19;

     label11:
        $r14 := @caughtexception;

        z3 = Phi(z3 #0, z3 #2, z3 #6);

(9)     $i1 = Phi($i1 #0, $i1 #2, $i1 #6);

        r2 = $r14;

        if z3 == 0 goto label12;

        $r20 = r0.jjtree;

        $r20.clearNodeScope(r1);

        z3 = 0;

(10)    goto label13;

     label12:
        $r15 = r0.jjtree;

(11)    $r15.popNode();

     label13:
        z3 = Phi(z3 #10, z3 #11);

        $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label14;

        $r19 = (java.lang.RuntimeException) r2;

        throw $r19;

     label14:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label15;

        $r18 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r18;

     label15:
        $r17 = (java.lang.Error) r2;

        throw $r17;

     label16:
        $r12 := @caughtexception;

        z3 = Phi(z3 #9, z3 #12, z3 #0, z3 #2, z3 #6);

(12)    $i1 = Phi($i1 #9, $i1 #12, $i1 #0, $i1 #2, $i1 #6);

        r3 = $r12;

     label17:
        if z3 == 0 goto label18;

        $r13 = r0.jjtree;

        $r13.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label18:
        throw r3;

     label19:
        return;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label01 to label10 with label16;
        catch java.lang.Throwable from label11 to label17 with label16;
    }

    public final void SwitchLabel() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHSwitchLabel r1, $r4;
        java.lang.Throwable r2, r3, $r14, $r16;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r9, $r15, $r17, $r22;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        org.gjt.sp.jedit.bsh.ParseException $r13, $r20;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4, z2_5;
        java.lang.Error $r19;
        java.lang.RuntimeException $r21;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHSwitchLabel;

        specialinvoke $r4.<init>(28);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 15: goto label04;
            case 20: goto label05;
            default: goto label06;
        };

     label04:
        specialinvoke r0.jj_consume_token(15);

        r0.Expression();

        specialinvoke r0.jj_consume_token(89);

(4)     goto label07;

     label05:
        specialinvoke r0.jj_consume_token(20);

        specialinvoke r0.jj_consume_token(89);

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

(5)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.isDefault = 1;

(6)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r13 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r13.<init>();

        throw $r13;

     label07:
        z2_2 = Phi(z2 #4, z2_1 #6);

        if z2_2 == 0 goto label16;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label16;

     label08:
(7)     $r16 := @caughtexception;

        $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

(8)     z2_3 = Phi(z2 #0, z2_1 #5);

        r2 = $r16;

        if z2_3 == 0 goto label09;

        $r22 = r0.jjtree;

        $r22.clearNodeScope(r1);

(9)     z2_4 = 0;

(10)    goto label10;

     label09:
        $r17 = r0.jjtree;

(11)    $r17.popNode();

     label10:
        z2_5 = Phi(z2_4 #10, z2_3 #11);

(12)    $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label11;

        $r21 = (java.lang.RuntimeException) r2;

        throw $r21;

     label11:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label12;

        $r20 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r20;

     label12:
        $r19 = (java.lang.Error) r2;

        throw $r19;

     label13:
        $r14 := @caughtexception;

        $i1 = Phi($i1_3 #8, $i1 #13, $i1 #0, $i1_1 #2, $i1_2 #3);

(13)    z2 = Phi(z2_3 #7, z2_4 #9, z2_5 #12, z2 #13, z2 #0, z2_1 #5);

        r3 = $r14;

     label14:
        if z2 == 0 goto label15;

        $r15 = r0.jjtree;

        $r15.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label14 with label13;
    }

    public final void IfStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHIfStatement r1, $r4;
        java.lang.Throwable r2, r3, $r11, $r18;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r10, $r12, $r17, $r19;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r14;
        org.gjt.sp.jedit.bsh.ParseException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHIfStatement;

        specialinvoke $r4.<init>(29);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(32);

        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        r0.Statement();

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 23: goto label04;
            default: goto label05;
        };

     label04:
        specialinvoke r0.jj_consume_token(23);

        r0.Statement();

        goto label05;

     label05:
        if z2 == 0 goto label14;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label14;

     label06:
        $r11 := @caughtexception;

(4)     $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

        r2 = $r11;

        if z2 == 0 goto label07;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

(5)     z2_1 = 0;

(6)     goto label08;

     label07:
        $r12 = r0.jjtree;

(7)     $r12.popNode();

     label08:
        z2_2 = Phi(z2_1 #6, z2 #7);

(8)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label09;

        $r16 = (java.lang.RuntimeException) r2;

        throw $r16;

     label09:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label10;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r15;

     label10:
        $r14 = (java.lang.Error) r2;

        throw $r14;

     label11:
        $r18 := @caughtexception;

        $i1 = Phi($i1_3 #4, $i1 #9, $i1 #0, $i1_1 #2, $i1_2 #3);

(9)     z2 = Phi(z2_1 #5, z2_2 #8, z2 #9, z2 #0);

        r3 = $r18;

     label12:
        if z2 == 0 goto label13;

        $r19 = r0.jjtree;

        $r19.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label13:
        throw r3;

     label14:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label01 to label05 with label11;
        catch java.lang.Throwable from label06 to label12 with label11;
    }

    public final void WhileStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHWhileStatement r1, $r4;
        java.lang.Throwable r2, r3, $r10, $r12;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r9, $r11, $r13, $r18;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r15;
        org.gjt.sp.jedit.bsh.ParseException $r16;
        java.lang.RuntimeException $r17;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHWhileStatement;

        specialinvoke $r4.<init>(30);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(59);

        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        r0.Statement();

     label02:
        if z2 == 0 goto label11;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
        $r12 := @caughtexception;

        r2 = $r12;

        if z2 == 0 goto label04;

        $r18 = r0.jjtree;

        $r18.clearNodeScope(r1);

(1)     z2_1 = 0;

(2)     goto label05;

     label04:
        $r13 = r0.jjtree;

(3)     $r13.popNode();

     label05:
        z2_2 = Phi(z2_1 #2, z2 #3);

(4)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r17 = (java.lang.RuntimeException) r2;

        throw $r17;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r16 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r16;

     label07:
        $r15 = (java.lang.Error) r2;

        throw $r15;

     label08:
        $r10 := @caughtexception;

(5)     z2 = Phi(z2_1 #1, z2_2 #4, z2 #5, z2 #0);

        r3 = $r10;

     label09:
        if z2 == 0 goto label10;

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void DoStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHWhileStatement r1, $r4;
        java.lang.Throwable r2, r3, $r13, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r11, $r12, $r14, $r16, $r21;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4;
        java.lang.Error $r18;
        org.gjt.sp.jedit.bsh.ParseException $r19;
        java.lang.RuntimeException $r20;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHWhileStatement;

        specialinvoke $r4.<init>(30);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(21);

        r0.Statement();

        specialinvoke r0.jj_consume_token(59);

        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        specialinvoke r0.jj_consume_token(78);

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

(1)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.isDoStatement = 1;

     label02:
        if z2_1 == 0 goto label11;

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
(2)     $r15 := @caughtexception;

        z2_2 = Phi(z2 #0, z2_1 #1);

        r2 = $r15;

        if z2_2 == 0 goto label04;

        $r21 = r0.jjtree;

        $r21.clearNodeScope(r1);

(3)     z2_3 = 0;

(4)     goto label05;

     label04:
        $r16 = r0.jjtree;

(5)     $r16.popNode();

     label05:
        z2_4 = Phi(z2_3 #4, z2_2 #5);

(6)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r20 = (java.lang.RuntimeException) r2;

        throw $r20;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r19 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r19;

     label07:
        $r18 = (java.lang.Error) r2;

        throw $r18;

     label08:
        $r13 := @caughtexception;

(7)     z2 = Phi(z2_2 #2, z2_3 #3, z2_4 #6, z2 #7, z2 #0, z2_1 #1);

        r3 = $r13;

     label09:
        if z2 == 0 goto label10;

        $r14 = r0.jjtree;

        $r14.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void ForStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHForStatement r1, $r4;
        java.lang.Throwable r2, r3, $r7, $r13;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r12, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i3_1, $i3_2, $i4_1, $i4_2, $i5_1, $i5_2, $i5_3, $i4_3, $i3_3;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r9;
        org.gjt.sp.jedit.bsh.ParseException $r10;
        java.lang.RuntimeException $r11;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHForStatement;

        specialinvoke $r4.<init>(31);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(30);

        specialinvoke r0.jj_consume_token(72);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i3 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i3_1 = r0.jj_ntk;

     label03:
        $i3_2 = Phi($i3 #1, $i3_1 #2);

(3)     tableswitch($i3_2)
        {
            case 10: goto label04;
            case 11: goto label04;
            case 12: goto label05;
            case 13: goto label05;
            case 14: goto label04;
            case 15: goto label05;
            case 16: goto label05;
            case 17: goto label04;
            case 18: goto label05;
            case 19: goto label05;
            case 20: goto label05;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label05;
            case 24: goto label05;
            case 25: goto label05;
            case 26: goto label04;
            case 27: goto label04;
            case 28: goto label05;
            case 29: goto label04;
            case 30: goto label05;
            case 31: goto label05;
            case 32: goto label05;
            case 33: goto label05;
            case 34: goto label05;
            case 35: goto label05;
            case 36: goto label04;
            case 37: goto label05;
            case 38: goto label04;
            case 39: goto label04;
            case 40: goto label04;
            case 41: goto label04;
            case 42: goto label05;
            case 43: goto label04;
            case 44: goto label04;
            case 45: goto label04;
            case 46: goto label05;
            case 47: goto label04;
            case 48: goto label04;
            case 49: goto label04;
            case 50: goto label05;
            case 51: goto label04;
            case 52: goto label04;
            case 53: goto label05;
            case 54: goto label05;
            case 55: goto label04;
            case 56: goto label05;
            case 57: goto label04;
            case 58: goto label04;
            case 59: goto label05;
            case 60: goto label04;
            case 61: goto label05;
            case 62: goto label05;
            case 63: goto label05;
            case 64: goto label04;
            case 65: goto label05;
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label05;
            case 69: goto label04;
            case 70: goto label05;
            case 71: goto label05;
            case 72: goto label04;
            case 73: goto label05;
            case 74: goto label05;
            case 75: goto label05;
            case 76: goto label05;
            case 77: goto label05;
            case 78: goto label05;
            case 79: goto label05;
            case 80: goto label05;
            case 81: goto label05;
            case 82: goto label05;
            case 83: goto label05;
            case 84: goto label05;
            case 85: goto label05;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label05;
            case 89: goto label05;
            case 90: goto label05;
            case 91: goto label05;
            case 92: goto label05;
            case 93: goto label05;
            case 94: goto label05;
            case 95: goto label05;
            case 96: goto label05;
            case 97: goto label05;
            case 98: goto label05;
            case 99: goto label05;
            case 100: goto label04;
            case 101: goto label04;
            case 102: goto label04;
            case 103: goto label04;
            default: goto label05;
        };

     label04:
        r0.ForInit();

        r1.hasForInit = 1;

        goto label05;

     label05:
        specialinvoke r0.jj_consume_token(78);

        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label06;

        $i4 = specialinvoke r0.jj_ntk();

(4)     goto label07;

     label06:
(5)     $i4_1 = r0.jj_ntk;

     label07:
        $i4_2 = Phi($i4 #4, $i4_1 #5);

(6)     tableswitch($i4_2)
        {
            case 11: goto label08;
            case 12: goto label09;
            case 13: goto label09;
            case 14: goto label08;
            case 15: goto label09;
            case 16: goto label09;
            case 17: goto label08;
            case 18: goto label09;
            case 19: goto label09;
            case 20: goto label09;
            case 21: goto label09;
            case 22: goto label08;
            case 23: goto label09;
            case 24: goto label09;
            case 25: goto label09;
            case 26: goto label08;
            case 27: goto label09;
            case 28: goto label09;
            case 29: goto label08;
            case 30: goto label09;
            case 31: goto label09;
            case 32: goto label09;
            case 33: goto label09;
            case 34: goto label09;
            case 35: goto label09;
            case 36: goto label08;
            case 37: goto label09;
            case 38: goto label08;
            case 39: goto label09;
            case 40: goto label08;
            case 41: goto label08;
            case 42: goto label09;
            case 43: goto label09;
            case 44: goto label09;
            case 45: goto label09;
            case 46: goto label09;
            case 47: goto label08;
            case 48: goto label09;
            case 49: goto label09;
            case 50: goto label09;
            case 51: goto label09;
            case 52: goto label09;
            case 53: goto label09;
            case 54: goto label09;
            case 55: goto label08;
            case 56: goto label09;
            case 57: goto label08;
            case 58: goto label09;
            case 59: goto label09;
            case 60: goto label08;
            case 61: goto label09;
            case 62: goto label09;
            case 63: goto label09;
            case 64: goto label08;
            case 65: goto label09;
            case 66: goto label08;
            case 67: goto label08;
            case 68: goto label09;
            case 69: goto label08;
            case 70: goto label09;
            case 71: goto label09;
            case 72: goto label08;
            case 73: goto label09;
            case 74: goto label09;
            case 75: goto label09;
            case 76: goto label09;
            case 77: goto label09;
            case 78: goto label09;
            case 79: goto label09;
            case 80: goto label09;
            case 81: goto label09;
            case 82: goto label09;
            case 83: goto label09;
            case 84: goto label09;
            case 85: goto label09;
            case 86: goto label08;
            case 87: goto label08;
            case 88: goto label09;
            case 89: goto label09;
            case 90: goto label09;
            case 91: goto label09;
            case 92: goto label09;
            case 93: goto label09;
            case 94: goto label09;
            case 95: goto label09;
            case 96: goto label09;
            case 97: goto label09;
            case 98: goto label09;
            case 99: goto label09;
            case 100: goto label08;
            case 101: goto label08;
            case 102: goto label08;
            case 103: goto label08;
            default: goto label09;
        };

     label08:
        r0.Expression();

        r1.hasExpression = 1;

        goto label09;

     label09:
        specialinvoke r0.jj_consume_token(78);

        $i2 = r0.jj_ntk;

        if $i2 != -1 goto label10;

        $i5 = specialinvoke r0.jj_ntk();

(7)     goto label11;

     label10:
(8)     $i5_1 = r0.jj_ntk;

     label11:
        $i5_2 = Phi($i5 #7, $i5_1 #8);

(9)     tableswitch($i5_2)
        {
            case 11: goto label12;
            case 12: goto label13;
            case 13: goto label13;
            case 14: goto label12;
            case 15: goto label13;
            case 16: goto label13;
            case 17: goto label12;
            case 18: goto label13;
            case 19: goto label13;
            case 20: goto label13;
            case 21: goto label13;
            case 22: goto label12;
            case 23: goto label13;
            case 24: goto label13;
            case 25: goto label13;
            case 26: goto label12;
            case 27: goto label13;
            case 28: goto label13;
            case 29: goto label12;
            case 30: goto label13;
            case 31: goto label13;
            case 32: goto label13;
            case 33: goto label13;
            case 34: goto label13;
            case 35: goto label13;
            case 36: goto label12;
            case 37: goto label13;
            case 38: goto label12;
            case 39: goto label13;
            case 40: goto label12;
            case 41: goto label12;
            case 42: goto label13;
            case 43: goto label13;
            case 44: goto label13;
            case 45: goto label13;
            case 46: goto label13;
            case 47: goto label12;
            case 48: goto label13;
            case 49: goto label13;
            case 50: goto label13;
            case 51: goto label13;
            case 52: goto label13;
            case 53: goto label13;
            case 54: goto label13;
            case 55: goto label12;
            case 56: goto label13;
            case 57: goto label12;
            case 58: goto label13;
            case 59: goto label13;
            case 60: goto label12;
            case 61: goto label13;
            case 62: goto label13;
            case 63: goto label13;
            case 64: goto label12;
            case 65: goto label13;
            case 66: goto label12;
            case 67: goto label12;
            case 68: goto label13;
            case 69: goto label12;
            case 70: goto label13;
            case 71: goto label13;
            case 72: goto label12;
            case 73: goto label13;
            case 74: goto label13;
            case 75: goto label13;
            case 76: goto label13;
            case 77: goto label13;
            case 78: goto label13;
            case 79: goto label13;
            case 80: goto label13;
            case 81: goto label13;
            case 82: goto label13;
            case 83: goto label13;
            case 84: goto label13;
            case 85: goto label13;
            case 86: goto label12;
            case 87: goto label12;
            case 88: goto label13;
            case 89: goto label13;
            case 90: goto label13;
            case 91: goto label13;
            case 92: goto label13;
            case 93: goto label13;
            case 94: goto label13;
            case 95: goto label13;
            case 96: goto label13;
            case 97: goto label13;
            case 98: goto label13;
            case 99: goto label13;
            case 100: goto label12;
            case 101: goto label12;
            case 102: goto label12;
            case 103: goto label12;
            default: goto label13;
        };

     label12:
        r0.ForUpdate();

        r1.hasForUpdate = 1;

        goto label13;

     label13:
        specialinvoke r0.jj_consume_token(73);

        r0.Statement();

     label14:
        if 1 == 0 goto label23;

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label23;

     label15:
        $r7 := @caughtexception;

        $i5_3 = Phi($i5 #0, $i5_1 #8, $i5_2 #9);

        $i4_3 = Phi($i4 #0, $i4_1 #5, $i4_2 #6);

(10)    $i3_3 = Phi($i3 #0, $i3_1 #2, $i3_2 #3);

        r2 = $r7;

        if 1 == 0 goto label16;

        $r12 = r0.jjtree;

        $r12.clearNodeScope(r1);

(11)    z2_1 = 0;

(12)    goto label17;

     label16:
        $r8 = r0.jjtree;

(13)    $r8.popNode();

     label17:
        z2_2 = Phi(z2_1 #12, z2 #13);

(14)    $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label18;

        $r11 = (java.lang.RuntimeException) r2;

        throw $r11;

     label18:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label19;

        $r10 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r10;

     label19:
        $r9 = (java.lang.Error) r2;

        throw $r9;

     label20:
        $r13 := @caughtexception;

        $i5 = Phi($i5_3 #10, $i5 #15, $i5 #0, $i5_1 #8, $i5_2 #9);

        $i4 = Phi($i4_3 #10, $i4 #15, $i4 #0, $i4_1 #5, $i4_2 #6);

        $i3 = Phi($i3_3 #10, $i3 #15, $i3 #0, $i3_1 #2, $i3_2 #3);

(15)    z2 = Phi(z2_1 #11, z2_2 #14, z2 #15, z2 #0);

        r3 = $r13;

     label21:
        if z2 == 0 goto label22;

        $r14 = r0.jjtree;

        $r14.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label22:
        throw r3;

     label23:
        return;

        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label01 to label14 with label20;
        catch java.lang.Throwable from label15 to label21 with label20;
    }

    public final void EnhancedForStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHEnhancedForStatement r1, $r4;
        java.lang.Throwable r2, r3, $r12, $r14;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r6, $r8, $r10, $r13, $r15, $r19;
        boolean $z0, $z1, $z2, z3, z3_1, z3_2, z3_3, z3_4, z3_5, z3_6;
        int $i0, $i1, $i1_1, $i1_2, $i1_3, $i1_4;
        java.lang.String $r7, $r11;
        org.gjt.sp.jedit.bsh.ParseException $r9, $r17;
        java.lang.Error $r16;
        java.lang.RuntimeException $r18;
        org.gjt.sp.jedit.bsh.Token r20, r21;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHEnhancedForStatement;

        specialinvoke $r4.<init>(32);

        r1 = $r4;

        z3 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        $z0 = specialinvoke r0.jj_2_30(4);

        if $z0 == 0 goto label02;

        specialinvoke r0.jj_consume_token(30);

        specialinvoke r0.jj_consume_token(72);

        r20 = specialinvoke r0.jj_consume_token(69);

        specialinvoke r0.jj_consume_token(89);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        r0.Statement();

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

(1)     z3_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r11 = r20.image;

        r1.varName = $r11;

(2)     goto label07;

     label02:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1_1 = r0.jj_ntk;

     label04:
        $i1_2 = Phi($i1 #3, $i1_1 #4);

(5)     lookupswitch($i1_2)
        {
            case 30: goto label05;
            default: goto label06;
        };

     label05:
        specialinvoke r0.jj_consume_token(30);

        specialinvoke r0.jj_consume_token(72);

        r0.Type();

        r21 = specialinvoke r0.jj_consume_token(69);

        specialinvoke r0.jj_consume_token(89);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        r0.Statement();

        $r6 = r0.jjtree;

        $r6.closeNodeScope(r1, 1);

(6)     z3_2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        $r7 = r21.image;

        r1.varName = $r7;

(7)     goto label07;

     label06:
        specialinvoke r0.jj_consume_token(-1);

        $r9 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r9.<init>();

        throw $r9;

     label07:
        $i1_3 = Phi($i1 #2, $i1_2 #7);

        z3_3 = Phi(z3_1 #2, z3_2 #7);

        if z3_3 == 0 goto label16;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label16;

     label08:
(8)     $r14 := @caughtexception;

        $i1_4 = Phi($i1 #0, $i1_1 #4, $i1_2 #5);

(9)     z3_4 = Phi(z3 #0, z3_1 #1, z3_2 #6);

        r2 = $r14;

        if z3_4 == 0 goto label09;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

(10)    z3_5 = 0;

(11)    goto label10;

     label09:
        $r15 = r0.jjtree;

(12)    $r15.popNode();

     label10:
        z3_6 = Phi(z3_5 #11, z3_4 #12);

(13)    $z1 = r2 instanceof java.lang.RuntimeException;

        if $z1 == 0 goto label11;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label11:
        $z2 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z2 == 0 goto label12;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label12:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label13:
        $r12 := @caughtexception;

        $i1 = Phi($i1_4 #9, $i1 #14, $i1 #0, $i1_1 #4, $i1_2 #5);

(14)    z3 = Phi(z3_4 #8, z3_5 #10, z3_6 #13, z3 #14, z3 #0, z3_1 #1, z3_2 #6);

        r3 = $r12;

     label14:
        if z3 == 0 goto label15;

        $r13 = r0.jjtree;

        $r13.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label15:
        throw r3;

     label16:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label01 to label07 with label13;
        catch java.lang.Throwable from label08 to label14 with label13;
    }

    public final void ForInit() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        org.gjt.sp.jedit.bsh.ParseException $r1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_2_31(2147483647);

        if $z0 == 0 goto label1;

        r0.TypedVariableDeclaration();

(0)     goto label6;

     label1:
        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label2;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label3;

     label2:
(2)     $i1_1 = r0.jj_ntk;

     label3:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

        tableswitch($i1_2)
        {
            case 11: goto label4;
            case 12: goto label5;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label5;
            case 16: goto label5;
            case 17: goto label4;
            case 18: goto label5;
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label4;
            case 23: goto label5;
            case 24: goto label5;
            case 25: goto label5;
            case 26: goto label4;
            case 27: goto label5;
            case 28: goto label5;
            case 29: goto label4;
            case 30: goto label5;
            case 31: goto label5;
            case 32: goto label5;
            case 33: goto label5;
            case 34: goto label5;
            case 35: goto label5;
            case 36: goto label4;
            case 37: goto label5;
            case 38: goto label4;
            case 39: goto label5;
            case 40: goto label4;
            case 41: goto label4;
            case 42: goto label5;
            case 43: goto label5;
            case 44: goto label5;
            case 45: goto label5;
            case 46: goto label5;
            case 47: goto label4;
            case 48: goto label5;
            case 49: goto label5;
            case 50: goto label5;
            case 51: goto label5;
            case 52: goto label5;
            case 53: goto label5;
            case 54: goto label5;
            case 55: goto label4;
            case 56: goto label5;
            case 57: goto label4;
            case 58: goto label5;
            case 59: goto label5;
            case 60: goto label4;
            case 61: goto label5;
            case 62: goto label5;
            case 63: goto label5;
            case 64: goto label4;
            case 65: goto label5;
            case 66: goto label4;
            case 67: goto label4;
            case 68: goto label5;
            case 69: goto label4;
            case 70: goto label5;
            case 71: goto label5;
            case 72: goto label4;
            case 73: goto label5;
            case 74: goto label5;
            case 75: goto label5;
            case 76: goto label5;
            case 77: goto label5;
            case 78: goto label5;
            case 79: goto label5;
            case 80: goto label5;
            case 81: goto label5;
            case 82: goto label5;
            case 83: goto label5;
            case 84: goto label5;
            case 85: goto label5;
            case 86: goto label4;
            case 87: goto label4;
            case 88: goto label5;
            case 89: goto label5;
            case 90: goto label5;
            case 91: goto label5;
            case 92: goto label5;
            case 93: goto label5;
            case 94: goto label5;
            case 95: goto label5;
            case 96: goto label5;
            case 97: goto label5;
            case 98: goto label5;
            case 99: goto label5;
            case 100: goto label4;
            case 101: goto label4;
            case 102: goto label4;
            case 103: goto label4;
            default: goto label5;
        };

     label4:
        r0.StatementExpressionList();

(3)     goto label6;

     label5:
        specialinvoke r0.jj_consume_token(-1);

        $r1 = new org.gjt.sp.jedit.bsh.ParseException;

        specialinvoke $r1.<init>();

        throw $r1;

     label6:
        $i1_3 = Phi($i1 #0, $i1_2 #3);

        return;
    }

    public final void TypedVariableDeclaration() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHTypedVariableDeclaration r1, $r5;
        org.gjt.sp.jedit.bsh.Modifiers r2;
        java.lang.Throwable r3, r4, $r9, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r6, $r7, $r8, $r10, $r14, $r16;
        int $i0, $i1;
        boolean $z0, $z1, z2;
        java.lang.Error $r11;
        org.gjt.sp.jedit.bsh.ParseException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this;

        $r5 = new org.gjt.sp.jedit.bsh.BSHTypedVariableDeclaration;

        specialinvoke $r5.<init>(33);

        r1 = $r5;

        z2 = 1;

        $r6 = r0.jjtree;

        $r6.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        r2 = r0.Modifiers(2, 0);

        r0.Type();

(1)     r0.VariableDeclarator();

     label02:
        $i1 = Phi($i1 #1, $i1 #5);

        z2 = Phi(z2 #1, z2 #5);

(2)     $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1 = r0.jj_ntk;

     label04:
        $i1 = Phi($i1 #3, $i1 #4);

        lookupswitch($i1)
        {
            case 79: goto label05;
            default: goto label06;
        };

     label05:
        goto label07;

     label06:
        goto label08;

     label07:
        specialinvoke r0.jj_consume_token(79);

        r0.VariableDeclarator();

(5)     goto label02;

     label08:
        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

        z2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.modifiers = r2;

     label09:
        if 0 == 0 goto label18;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label18;

     label10:
(6)     $r9 := @caughtexception;

        $i1 = Phi($i1 #0, $i1 #2);

(7)     z2 = Phi(z2 #0, z2 #2);

        r3 = $r9;

        if z2 == 0 goto label11;

        $r14 = r0.jjtree;

        $r14.clearNodeScope(r1);

        z2 = 0;

(8)     goto label12;

     label11:
        $r10 = r0.jjtree;

(9)     $r10.popNode();

     label12:
        z2 = Phi(z2 #8, z2 #9);

        $z0 = r3 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label13;

        $r13 = (java.lang.RuntimeException) r3;

        throw $r13;

     label13:
        $z1 = r3 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label14;

        $r12 = (org.gjt.sp.jedit.bsh.ParseException) r3;

        throw $r12;

     label14:
        $r11 = (java.lang.Error) r3;

        throw $r11;

     label15:
        $r15 := @caughtexception;

        $i1 = Phi($i1 #7, $i1 #10, $i1 #0, $i1 #2);

(10)    z2 = Phi(z2 #6, z2 #10, z2 #0, z2 #2);

        r4 = $r15;

     label16:
        if z2 == 0 goto label17;

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label17:
        throw r4;

     label18:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label01 to label09 with label15;
        catch java.lang.Throwable from label10 to label16 with label15;
    }

    public final void StatementExpressionList() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHStatementExpressionList r1, $r4;
        java.lang.Throwable r2, r3, $r8, $r15;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r7, $r9, $r14, $r16;
        int $i0, $i1;
        boolean $z0, $z1, z2;
        java.lang.Error $r11;
        org.gjt.sp.jedit.bsh.ParseException $r12;
        java.lang.RuntimeException $r13;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHStatementExpressionList;

        specialinvoke $r4.<init>(34);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
(1)     r0.StatementExpression();

     label02:
        $i1 = Phi($i1 #1, $i1 #5);

        z2 = Phi(z2 #1, z2 #5);

(2)     $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i1 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i1 = r0.jj_ntk;

     label04:
        $i1 = Phi($i1 #3, $i1 #4);

        lookupswitch($i1)
        {
            case 79: goto label05;
            default: goto label06;
        };

     label05:
        goto label07;

     label06:
        goto label08;

     label07:
        specialinvoke r0.jj_consume_token(79);

        r0.StatementExpression();

(5)     goto label02;

     label08:
        if z2 == 0 goto label17;

        $r7 = r0.jjtree;

        $r7.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label17;

     label09:
(6)     $r8 := @caughtexception;

        $i1 = Phi($i1 #0, $i1 #2);

(7)     z2 = Phi(z2 #0, z2 #2);

        r2 = $r8;

        if z2 == 0 goto label10;

        $r14 = r0.jjtree;

        $r14.clearNodeScope(r1);

        z2 = 0;

(8)     goto label11;

     label10:
        $r9 = r0.jjtree;

(9)     $r9.popNode();

     label11:
        z2 = Phi(z2 #8, z2 #9);

        $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label12;

        $r13 = (java.lang.RuntimeException) r2;

        throw $r13;

     label12:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label13;

        $r12 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r12;

     label13:
        $r11 = (java.lang.Error) r2;

        throw $r11;

     label14:
        $r15 := @caughtexception;

        $i1 = Phi($i1 #7, $i1 #10, $i1 #0, $i1 #2);

(10)    z2 = Phi(z2 #6, z2 #10, z2 #0, z2 #2);

        r3 = $r15;

     label15:
        if z2 == 0 goto label16;

        $r16 = r0.jjtree;

        $r16.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label16:
        throw r3;

     label17:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label01 to label08 with label14;
        catch java.lang.Throwable from label09 to label15 with label14;
    }

    public final void ForUpdate() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        r0.StatementExpressionList();

        return;
    }

    public final void BreakStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHReturnStatement r1, $r3;
        java.lang.Throwable r2, $r10;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r8, $r9, $r11;
        int $i0, $i1, $i1_1, $i1_2;
        boolean z0, z0_1;

        r0 := @this;

        $r3 = new org.gjt.sp.jedit.bsh.BSHReturnStatement;

        specialinvoke $r3.<init>(35);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(12);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 69: goto label04;
            default: goto label05;
        };

     label04:
        specialinvoke r0.jj_consume_token(69);

        goto label05;

     label05:
        specialinvoke r0.jj_consume_token(78);

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

(4)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.kind = 12;

     label06:
        if z0_1 == 0 goto label10;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label10;

     label07:
        $r10 := @caughtexception;

        $i1 = Phi($i1 #0, $i1_1 #2, $i1_2 #3, $i1 #5);

(5)     z0 = Phi(z0 #0, z0_1 #4, z0 #5);

        r2 = $r10;

     label08:
        if z0 == 0 goto label09;

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label09:
        throw r2;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public final void ContinueStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHReturnStatement r1, $r3;
        java.lang.Throwable r2, $r10;
        org.gjt.sp.jedit.bsh.JJTParserState $r4, $r8, $r9, $r11;
        int $i0, $i1, $i1_1, $i1_2;
        boolean z0, z0_1;

        r0 := @this;

        $r3 = new org.gjt.sp.jedit.bsh.BSHReturnStatement;

        specialinvoke $r3.<init>(35);

        r1 = $r3;

        z0 = 1;

        $r4 = r0.jjtree;

        $r4.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(19);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     lookupswitch($i1_2)
        {
            case 69: goto label04;
            default: goto label05;
        };

     label04:
        specialinvoke r0.jj_consume_token(69);

        goto label05;

     label05:
        specialinvoke r0.jj_consume_token(78);

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

(4)     z0_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.kind = 19;

     label06:
        if z0_1 == 0 goto label10;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label10;

     label07:
        $r10 := @caughtexception;

        $i1 = Phi($i1 #0, $i1_1 #2, $i1_2 #3, $i1 #5);

(5)     z0 = Phi(z0 #0, z0_1 #4, z0 #5);

        r2 = $r10;

     label08:
        if z0 == 0 goto label09;

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label09:
        throw r2;

     label10:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public final void ReturnStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHReturnStatement r1, $r4;
        java.lang.Throwable r2, r3, $r10, $r17;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r9, $r11, $r16, $r18;
        int $i0, $i1, $i1_1, $i1_2, $i1_3;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4;
        java.lang.Error $r13;
        org.gjt.sp.jedit.bsh.ParseException $r14;
        java.lang.RuntimeException $r15;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHReturnStatement;

        specialinvoke $r4.<init>(35);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(46);

        $i0 = r0.jj_ntk;

        if $i0 != -1 goto label02;

        $i1 = specialinvoke r0.jj_ntk();

(1)     goto label03;

     label02:
(2)     $i1_1 = r0.jj_ntk;

     label03:
        $i1_2 = Phi($i1 #1, $i1_1 #2);

(3)     tableswitch($i1_2)
        {
            case 11: goto label04;
            case 12: goto label05;
            case 13: goto label05;
            case 14: goto label04;
            case 15: goto label05;
            case 16: goto label05;
            case 17: goto label04;
            case 18: goto label05;
            case 19: goto label05;
            case 20: goto label05;
            case 21: goto label05;
            case 22: goto label04;
            case 23: goto label05;
            case 24: goto label05;
            case 25: goto label05;
            case 26: goto label04;
            case 27: goto label05;
            case 28: goto label05;
            case 29: goto label04;
            case 30: goto label05;
            case 31: goto label05;
            case 32: goto label05;
            case 33: goto label05;
            case 34: goto label05;
            case 35: goto label05;
            case 36: goto label04;
            case 37: goto label05;
            case 38: goto label04;
            case 39: goto label05;
            case 40: goto label04;
            case 41: goto label04;
            case 42: goto label05;
            case 43: goto label05;
            case 44: goto label05;
            case 45: goto label05;
            case 46: goto label05;
            case 47: goto label04;
            case 48: goto label05;
            case 49: goto label05;
            case 50: goto label05;
            case 51: goto label05;
            case 52: goto label05;
            case 53: goto label05;
            case 54: goto label05;
            case 55: goto label04;
            case 56: goto label05;
            case 57: goto label04;
            case 58: goto label05;
            case 59: goto label05;
            case 60: goto label04;
            case 61: goto label05;
            case 62: goto label05;
            case 63: goto label05;
            case 64: goto label04;
            case 65: goto label05;
            case 66: goto label04;
            case 67: goto label04;
            case 68: goto label05;
            case 69: goto label04;
            case 70: goto label05;
            case 71: goto label05;
            case 72: goto label04;
            case 73: goto label05;
            case 74: goto label05;
            case 75: goto label05;
            case 76: goto label05;
            case 77: goto label05;
            case 78: goto label05;
            case 79: goto label05;
            case 80: goto label05;
            case 81: goto label05;
            case 82: goto label05;
            case 83: goto label05;
            case 84: goto label05;
            case 85: goto label05;
            case 86: goto label04;
            case 87: goto label04;
            case 88: goto label05;
            case 89: goto label05;
            case 90: goto label05;
            case 91: goto label05;
            case 92: goto label05;
            case 93: goto label05;
            case 94: goto label05;
            case 95: goto label05;
            case 96: goto label05;
            case 97: goto label05;
            case 98: goto label05;
            case 99: goto label05;
            case 100: goto label04;
            case 101: goto label04;
            case 102: goto label04;
            case 103: goto label04;
            default: goto label05;
        };

     label04:
        r0.Expression();

        goto label05;

     label05:
        specialinvoke r0.jj_consume_token(78);

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

(4)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        r1.kind = 46;

     label06:
        if z2_1 == 0 goto label15;

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label15;

     label07:
        $r10 := @caughtexception;

        z2_2 = Phi(z2 #0, z2_1 #4);

(5)     $i1_3 = Phi($i1 #0, $i1_1 #2, $i1_2 #3);

        r2 = $r10;

        if z2_2 == 0 goto label08;

        $r16 = r0.jjtree;

        $r16.clearNodeScope(r1);

(6)     z2_3 = 0;

(7)     goto label09;

     label08:
        $r11 = r0.jjtree;

(8)     $r11.popNode();

     label09:
        z2_4 = Phi(z2_3 #7, z2_2 #8);

(9)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label10;

        $r15 = (java.lang.RuntimeException) r2;

        throw $r15;

     label10:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label11;

        $r14 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r14;

     label11:
        $r13 = (java.lang.Error) r2;

        throw $r13;

     label12:
        $r17 := @caughtexception;

        z2 = Phi(z2_2 #5, z2_3 #6, z2_4 #9, z2 #10, z2 #0, z2_1 #4);

(10)    $i1 = Phi($i1_3 #5, $i1 #10, $i1 #0, $i1_1 #2, $i1_2 #3);

        r3 = $r17;

     label13:
        if z2 == 0 goto label14;

        $r18 = r0.jjtree;

        $r18.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label14:
        throw r3;

     label15:
        return;

        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label01 to label06 with label12;
        catch java.lang.Throwable from label07 to label13 with label12;
    }

    public final void SynchronizedStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHBlock r1, $r4;
        java.lang.Throwable r2, r3, $r11, $r13;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r9, $r10, $r12, $r14, $r19;
        boolean $z0, $z1, z2, z2_1, z2_2, z2_3, z2_4;
        java.lang.Error $r16;
        org.gjt.sp.jedit.bsh.ParseException $r17;
        java.lang.RuntimeException $r18;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHBlock;

        specialinvoke $r4.<init>(25);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(51);

        specialinvoke r0.jj_consume_token(72);

        r0.Expression();

        specialinvoke r0.jj_consume_token(73);

        r0.Block();

        $r9 = r0.jjtree;

        $r9.closeNodeScope(r1, 1);

(1)     z2_1 = 0;

        r0.jjtreeCloseNodeScope(r1);

        Packer.Unpack(r1);

        r1.isSynchronized = 1;

     label02:
        Packer.Pack(r1);

        if z2_1 == 0 goto label11;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
(2)     $r13 := @caughtexception;

        z2_2 = Phi(z2 #0, z2_1 #1);

        r2 = $r13;

        if z2_2 == 0 goto label04;

        $r19 = r0.jjtree;

        $r19.clearNodeScope(r1);

(3)     z2_3 = 0;

(4)     goto label05;

     label04:
        $r14 = r0.jjtree;

(5)     $r14.popNode();

     label05:
        z2_4 = Phi(z2_3 #4, z2_2 #5);

(6)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r18 = (java.lang.RuntimeException) r2;

        throw $r18;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r17 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r17;

     label07:
        $r16 = (java.lang.Error) r2;

        throw $r16;

     label08:
        $r11 := @caughtexception;

(7)     z2 = Phi(z2_2 #2, z2_3 #3, z2_4 #6, z2 #7, z2 #0, z2_1 #1);

        r3 = $r11;

     label09:
        if z2 == 0 goto label10;

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void ThrowStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHThrowStatement r1, $r4;
        java.lang.Throwable r2, r3, $r9, $r11;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r8, $r10, $r12, $r17;
        boolean $z0, $z1, z2, z2_1, z2_2;
        java.lang.Error $r14;
        org.gjt.sp.jedit.bsh.ParseException $r15;
        java.lang.RuntimeException $r16;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHThrowStatement;

        specialinvoke $r4.<init>(36);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

(0)     r0.jjtreeOpenNodeScope(r1);

     label01:
        specialinvoke r0.jj_consume_token(53);

        r0.Expression();

        specialinvoke r0.jj_consume_token(78);

     label02:
        if z2 == 0 goto label11;

        $r8 = r0.jjtree;

        $r8.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label11;

     label03:
        $r11 := @caughtexception;

        r2 = $r11;

        if z2 == 0 goto label04;

        $r17 = r0.jjtree;

        $r17.clearNodeScope(r1);

(1)     z2_1 = 0;

(2)     goto label05;

     label04:
        $r12 = r0.jjtree;

(3)     $r12.popNode();

     label05:
        z2_2 = Phi(z2_1 #2, z2 #3);

(4)     $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label06;

        $r16 = (java.lang.RuntimeException) r2;

        throw $r16;

     label06:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label07;

        $r15 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r15;

     label07:
        $r14 = (java.lang.Error) r2;

        throw $r14;

     label08:
        $r9 := @caughtexception;

(5)     z2 = Phi(z2_1 #1, z2_2 #4, z2 #5, z2 #0);

        r3 = $r9;

     label09:
        if z2 == 0 goto label10;

        $r10 = r0.jjtree;

        $r10.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label10:
        throw r3;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }

    public final void TryStatement() throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.BSHTryStatement r1, $r4;
        java.lang.Throwable r2, r3, $r14, $r16;
        org.gjt.sp.jedit.bsh.JJTParserState $r5, $r11, $r12, $r15, $r17, $r22;
        int $i0, $i1, $i2, $i3;
        org.gjt.sp.jedit.bsh.ParseException $r13, $r20;
        boolean $z0, $z1, z2, z3;
        java.lang.Error $r19;
        java.lang.RuntimeException $r21;

        r0 := @this;

        $r4 = new org.gjt.sp.jedit.bsh.BSHTryStatement;

        specialinvoke $r4.<init>(37);

        r1 = $r4;

        z2 = 1;

        $r5 = r0.jjtree;

        $r5.openNodeScope(r1);

        r0.jjtreeOpenNodeScope(r1);

(0)     z3 = 0;

     label01:
        specialinvoke r0.jj_consume_token(56);

(1)     r0.Block();

     label02:
        $i2 = Phi($i2 #1, $i2 #5);

        z3 = Phi(z3 #1, z3 #5);

        z2 = Phi(z2 #1, z2 #5);

(2)     $i0 = r0.jj_ntk;

        if $i0 != -1 goto label03;

        $i2 = specialinvoke r0.jj_ntk();

(3)     goto label04;

     label03:
(4)     $i2 = r0.jj_ntk;

     label04:
        $i2 = Phi($i2 #3, $i2 #4);

        lookupswitch($i2)
        {
            case 16: goto label05;
            default: goto label06;
        };

     label05:
        goto label07;

     label06:
        goto label08;

     label07:
        specialinvoke r0.jj_consume_token(16);

        specialinvoke r0.jj_consume_token(72);

        r0.FormalParameter();

        specialinvoke r0.jj_consume_token(73);

        r0.Block();

        z3 = 1;

(5)     goto label02;

     label08:
        $i1 = r0.jj_ntk;

        if $i1 != -1 goto label09;

        $i3 = specialinvoke r0.jj_ntk();

(6)     goto label10;

     label09:
(7)     $i3 = r0.jj_ntk;

     label10:
        $i3 = Phi($i3 #6, $i3 #7);

(8)     lookupswitch($i3)
        {
            case 28: goto label11;
            default: goto label12;
        };

     label11:
        specialinvoke r0.jj_consume_token(28);

        r0.Block();

        z3 = 1;

(9)     goto label12;

     label12:
        z3 = Phi(z3 #8, z3 #9);

        $r11 = r0.jjtree;

        $r11.closeNodeScope(r1, 1);

        z2 = 0;

        r0.jjtreeCloseNodeScope(r1);

        if z3 != 0 goto label13;

        $r13 = r0.generateParseException();

        throw $r13;

     label13:
        if z2 == 0 goto label22;

        $r12 = r0.jjtree;

        $r12.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

        goto label22;

     label14:
(10)    $r16 := @caughtexception;

        $i2 = Phi($i2 #0, $i2 #2);

        z3 = Phi(z3 #0, z3 #2);

        $i3 = Phi($i3 #0, $i3 #2);

(11)    z2 = Phi(z2 #0, z2 #2);

        r2 = $r16;

        if z2 == 0 goto label15;

        $r22 = r0.jjtree;

        $r22.clearNodeScope(r1);

        z2 = 0;

(12)    goto label16;

     label15:
        $r17 = r0.jjtree;

(13)    $r17.popNode();

     label16:
        z2 = Phi(z2 #12, z2 #13);

        $z0 = r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label17;

        $r21 = (java.lang.RuntimeException) r2;

        throw $r21;

     label17:
        $z1 = r2 instanceof org.gjt.sp.jedit.bsh.ParseException;

        if $z1 == 0 goto label18;

        $r20 = (org.gjt.sp.jedit.bsh.ParseException) r2;

        throw $r20;

     label18:
        $r19 = (java.lang.Error) r2;

        throw $r19;

     label19:
        $r14 := @caughtexception;

        $i2 = Phi($i2 #11, $i2 #14, $i2 #0, $i2 #2);

        z3 = Phi(z3 #11, z3 #14, z3 #0, z3 #2);

        $i3 = Phi($i3 #11, $i3 #14, $i3 #0, $i3 #2);

(14)    z2 = Phi(z2 #10, z2 #14, z2 #0, z2 #2);

        r3 = $r14;

     label20:
        if z2 == 0 goto label21;

        $r15 = r0.jjtree;

        $r15.closeNodeScope(r1, 1);

        r0.jjtreeCloseNodeScope(r1);

     label21:
        throw r3;

     label22:
        return;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label01 to label13 with label19;
        catch java.lang.Throwable from label14 to label20 with label19;
    }

    private final boolean jj_2_1(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_1();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_2(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_2();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_3(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_3();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_4(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_4();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_5(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_5();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_6(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_6();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_7(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_7();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_8(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_8();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_9(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_9();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_10(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_10();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_11(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_11();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_12(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_12();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_13(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_13();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_14(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_14();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_15(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_15();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_16(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_16();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_17(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_17();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_18(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_18();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_19(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_19();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_20(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_20();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_21(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_21();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_22(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_22();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_23(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_23();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_24(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_24();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_25(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_25();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_26(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_26();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_27(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_27();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_28(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_28();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_29(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_29();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_30(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_30();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_2_31(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess r1, $r3;
        org.gjt.sp.jedit.bsh.Token $r2;
        boolean $z0, $z1, $z1_1, $z1_2;

        r0 := @this;

        i0 := @parameter0;

        r0.jj_la = i0;

        $r2 = r0.token;

        r0.jj_scanpos = $r2;

        r0.jj_lastpos = $r2;

     label1:
        $z0 = specialinvoke r0.jj_3_31();

        if $z0 != 0 goto label2;

        $z1 = 1;

(0)     goto label3;

     label2:
(1)     $z1_1 = 0;

     label3:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        return $z1_2;

     label4:
        $r3 := @caughtexception;

        r1 = $r3;

        return 1;

        catch org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess from label1 to label3 with label4;
    }

    private final boolean jj_3R_46()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_91();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_28()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_46();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_47();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_48();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_49();

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_3_28();

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_3R_50();

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_51();

        if $z6 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_3R_52();

        if $z7 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_23()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_28();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_161()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_164();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_169();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_38()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(74);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_23();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(75);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_158()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_161();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_167();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_40()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(89);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_45();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_156()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(88);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(89);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_3R_108();

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_165()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(108);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(109);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_158();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_153()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_158();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_165();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_90()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_124();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_89()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_123();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_88()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_122();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_162()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(98);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(99);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_153();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_87()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_121();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_148()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_153();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_162();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_86()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_120();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_85()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_119();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_84()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_118();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_159()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(96);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(97);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_148();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_83()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_117();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_135()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_148();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_159();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_82()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_116();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_81()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_115();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_80()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_114();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_108()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_135();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_156();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        return 0;
    }

    private final boolean jj_3R_79()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_113();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_78()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_112();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(78);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_17()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_38();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_77()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_38();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_45()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_22();

        if $z0 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_77();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_78();

        if $z3 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_3R_79();

        if $z4 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_3R_80();

        if $z5 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_81();

        if $z6 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_3R_82();

        if $z7 == 0 goto label2;

        r0.jj_scanpos = r1;

        r0.lookingAhead = 1;

        $z8 = r0.isRegularForStatement();

        r0.jj_semLA = $z8;

        r0.lookingAhead = 0;

        $z9 = r0.jj_semLA;

        if $z9 == 0 goto label1;

        $z17 = specialinvoke r0.jj_3R_83();

        if $z17 == 0 goto label2;

     label1:
        r0.jj_scanpos = r1;

        $z10 = specialinvoke r0.jj_3R_84();

        if $z10 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z11 = specialinvoke r0.jj_3R_85();

        if $z11 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z12 = specialinvoke r0.jj_3R_86();

        if $z12 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z13 = specialinvoke r0.jj_3R_87();

        if $z13 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z14 = specialinvoke r0.jj_3R_88();

        if $z14 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z15 = specialinvoke r0.jj_3R_89();

        if $z15 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z16 = specialinvoke r0.jj_3R_90();

        if $z16 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_22()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_40();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_34()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(81);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_scan_token(120);

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(121);

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_scan_token(127);

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_scan_token(118);

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_scan_token(119);

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_scan_token(122);

        if $z6 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_scan_token(126);

        if $z7 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z8 = specialinvoke r0.jj_scan_token(124);

        if $z8 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z9 = specialinvoke r0.jj_scan_token(128);

        if $z9 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z10 = specialinvoke r0.jj_scan_token(129);

        if $z10 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z11 = specialinvoke r0.jj_scan_token(130);

        if $z11 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z12 = specialinvoke r0.jj_scan_token(131);

        if $z12 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z13 = specialinvoke r0.jj_scan_token(132);

        if $z13 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z14 = specialinvoke r0.jj_scan_token(133);

        if $z14 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_111()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_160()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(76);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(77);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_152()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_69();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_17();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        return 0;
    }

    private final boolean jj_3R_157()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_160();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_160();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        $z2 = specialinvoke r0.jj_3R_97();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_8()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_33();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_34();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_20()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(76);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(77);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_151()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_150();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_19()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(76);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(77);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_107()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_33();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_34();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_39();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_21()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;
        org.gjt.sp.jedit.bsh.Token r1, r2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3_19();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_19();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        r2 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_3_20();

        if $z2 == 0 goto label2;

        r0.jj_scanpos = r2;

        goto label3;

     label3:
        return 0;
    }

    private final boolean jj_3R_150()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_21();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_157();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_71()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_108();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_39()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_70();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_71();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_70()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_107();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_145()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(40);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r1 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_3R_151();

        if $z2 == 0 goto label3;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_152();

        if $z3 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_18()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(40);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_36();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_150();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_130()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_18();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_145();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_147()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_76()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_29();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_111();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_134()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_39();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_147();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_106()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_134();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_7()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(80);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_69()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_106();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_29()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_7();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_68()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(22);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_67()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(29);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_155()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(26);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_66()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(38);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_65()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(36);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_154()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(55);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_149()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_154();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_155();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_64()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(47);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_56()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_29();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_63()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(14);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_62()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(17);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_61()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(11);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_36()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_61();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_62();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_63();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_64();

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_3R_65();

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_3R_66();

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_67();

        if $z6 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_3R_68();

        if $z7 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_144()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(57);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_74()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_32();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_42()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_73();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_74();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_73()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(57);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_143()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(41);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_6()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(76);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(77);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_142()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_149();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_55()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_36();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_110()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_109();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_141()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(67);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_32()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;
        org.gjt.sp.jedit.bsh.Token r1, r2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_55();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_56();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        r2 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_6();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r2;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_140()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(66);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_190()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(28);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_38();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_4()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_31();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_189()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(16);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_109();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(73);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_38();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_136()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_5()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_32();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_75()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_109();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_110();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_109()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_5();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_136();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_124()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;
        org.gjt.sp.jedit.bsh.Token r1, r2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(56);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_38();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r1 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_3R_189();

        if $z2 == 0 goto label2;

        r0.jj_scanpos = r1;

        goto label3;

     label3:
        r2 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_190();

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r2;

     label4:
        return 0;
    }

    private final boolean jj_3R_43()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_75();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_163()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_31();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_4();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_139()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(64);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_97()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;
        org.gjt.sp.jedit.bsh.Token r1, r2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(74);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_163();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        r2 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_scan_token(79);

        if $z2 == 0 goto label3;

        r0.jj_scanpos = r2;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(75);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_30()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(80);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(104);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_123()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(53);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_180()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(81);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_31();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_54()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_39();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_188()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_39();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_53()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_97();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_31()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_53();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_54();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_122()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(51);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_39();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(73);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_38();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_177()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_176();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_210()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(79);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_112();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_121()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(46);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_188();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_129()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_138();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_139();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_140();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_141();

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_3R_142();

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_3R_143();

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_144();

        if $z6 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_138()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(60);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_146()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_69();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_176()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_180();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        return 0;
    }

    private final boolean jj_3R_105()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_129();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_120()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(19);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_119()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(12);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_195()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_205();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_128()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(34);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(104);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(78);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_133()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(74);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(75);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_205()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_112();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_210();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_132()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(80);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r1 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_3R_146();

        if $z2 == 0 goto label3;

        r0.jj_scanpos = r1;

     label3:
        return 0;
    }

    private final boolean jj_3_3()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.gjt.sp.jedit.bsh.Token r1, r2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(48);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(34);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_29();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r2 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_30();

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r2;

     label4:
        $z4 = specialinvoke r0.jj_scan_token(78);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_94()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_3();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_128();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_93()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_176();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r1 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_177();

        if $z3 == 0 goto label3;

        r0.jj_scanpos = r1;

        goto label4;

     label4:
        return 0;
    }

    private final boolean jj_3R_131()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(76);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(77);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_95()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(42);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_2()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_175()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_38();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_16()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(80);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(13);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_104()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_16();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_131();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_132();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_133();

        if $z3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_174()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(54);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_76();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_15()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_32();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(80);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(13);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_31()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(69);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3_14()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_37();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_126()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(69);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_127()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_42();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_92()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.gjt.sp.jedit.bsh.Token r1, r2, r3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_126();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_127();

        if $z6 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_43();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r2 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_174();

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r2;

     label4:
        r3 = r0.jj_scanpos;

        $z4 = specialinvoke r0.jj_3R_175();

        if $z4 == 0 goto label5;

        r0.jj_scanpos = r3;

        $z5 = specialinvoke r0.jj_scan_token(78);

        if $z5 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_204()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_205();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_103()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_29();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_203()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_93();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_194()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_203();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_204();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_102()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_32();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_58()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_104();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_125()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(37);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_101()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_37();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_100()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_130();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_99()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_137()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(30);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_32();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(69);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_scan_token(89);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        $z5 = specialinvoke r0.jj_3R_39();

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $z6 = specialinvoke r0.jj_scan_token(73);

        if $z6 == 0 goto label7;

        return 1;

     label7:
        $z7 = specialinvoke r0.jj_3R_45();

        if $z7 == 0 goto label8;

        return 1;

     label8:
        return 0;
    }

    private final boolean jj_3R_184()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(23);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_45();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_173()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(33);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_76();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_57()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_98();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_99();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_100();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_101();

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_3R_102();

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_3R_103();

        if $z5 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_98()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_129();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_172()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(25);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_30()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(30);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(69);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(89);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_39();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        $z5 = specialinvoke r0.jj_scan_token(73);

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $z6 = specialinvoke r0.jj_3R_45();

        if $z6 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    private final boolean jj_3R_118()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_30();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_137();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_37()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_29();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_69();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_185()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_194();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_91()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.gjt.sp.jedit.bsh.Token r1, r2, r3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(13);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_3R_125();

        if $z6 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(69);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r2 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_172();

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r2;

     label4:
        r3 = r0.jj_scanpos;

        $z4 = specialinvoke r0.jj_3R_173();

        if $z4 == 0 goto label5;

        r0.jj_scanpos = r3;

     label5:
        $z5 = specialinvoke r0.jj_3R_38();

        if $z5 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    private final boolean jj_3_13()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_36();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_187()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_195();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_186()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_39();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_33()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_57();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_58();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_217()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_3R_208();

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_216()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_3R_191();

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_117()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        org.gjt.sp.jedit.bsh.Token r1, r2, r3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(30);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r1 = r0.jj_scanpos;

        $z2 = specialinvoke r0.jj_3R_185();

        if $z2 == 0 goto label3;

        r0.jj_scanpos = r1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(78);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        r2 = r0.jj_scanpos;

        $z4 = specialinvoke r0.jj_3R_186();

        if $z4 == 0 goto label5;

        r0.jj_scanpos = r2;

     label5:
        $z5 = specialinvoke r0.jj_scan_token(78);

        if $z5 == 0 goto label6;

        return 1;

     label6:
        r3 = r0.jj_scanpos;

        $z6 = specialinvoke r0.jj_3R_187();

        if $z6 == 0 goto label7;

        r0.jj_scanpos = r3;

     label7:
        $z7 = specialinvoke r0.jj_scan_token(73);

        if $z7 == 0 goto label8;

        return 1;

     label8:
        $z8 = specialinvoke r0.jj_3R_45();

        if $z8 == 0 goto label9;

        return 1;

     label9:
        return 0;
    }

    private final boolean jj_3R_214()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_216();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_217();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_12()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_33();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(100);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(101);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_219()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_33();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_116()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(21);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_45();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(59);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(72);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_39();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        $z5 = specialinvoke r0.jj_scan_token(73);

        if $z5 == 0 goto label6;

        return 1;

     label6:
        $z6 = specialinvoke r0.jj_scan_token(78);

        if $z6 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    private final boolean jj_3_11()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(76);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_218()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_33();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(100);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(101);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_215()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_218();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_219();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_72()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(43);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_scan_token(44);

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(45);

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_scan_token(51);

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_scan_token(27);

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_scan_token(39);

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_scan_token(52);

        if $z6 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_scan_token(58);

        if $z7 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z8 = specialinvoke r0.jj_scan_token(10);

        if $z8 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z9 = specialinvoke r0.jj_scan_token(48);

        if $z9 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z10 = specialinvoke r0.jj_scan_token(49);

        if $z10 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_115()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(59);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_39();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(73);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_45();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_60()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(73);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r1 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_scan_token(87);

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_scan_token(86);

        if $z4 == 0 goto label4;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_scan_token(72);

        if $z5 == 0 goto label4;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_scan_token(69);

        if $z6 == 0 goto label4;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_scan_token(40);

        if $z7 == 0 goto label4;

        r0.jj_scanpos = r1;

        $z8 = specialinvoke r0.jj_3R_105();

        if $z8 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_59()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_29();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(76);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(77);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3_9()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_35();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_29()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_28();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_114()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(32);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_39();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(73);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_3R_45();

        if $z4 == 0 goto label5;

        return 1;

     label5:
        r1 = r0.jj_scanpos;

        $z5 = specialinvoke r0.jj_3R_184();

        if $z5 == 0 goto label6;

        r0.jj_scanpos = r1;

     label6:
        return 0;
    }

    private final boolean jj_3R_41()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0;

        r0 := @this;

     label1:
        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_72();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_35()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3_10();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_59();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_60();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_10()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(72);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_36();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_213()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_215();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_212()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_214();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_202()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(20);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(89);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_211()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(87);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(86);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_191();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_208()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_211();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_212();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_213();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_201()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(15);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_39();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(89);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_193()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_201();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_202();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_183()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_193();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3_29();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_207()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(101);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_33();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_1()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_28();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_113()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(50);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(72);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_39();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(73);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        $z4 = specialinvoke r0.jj_scan_token(74);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        r1 = r0.jj_scanpos;

        $z5 = specialinvoke r0.jj_3R_183();

        if $z5 == 0 goto label5;

        r0.jj_scanpos = r1;

        goto label6;

     label6:
        $z6 = specialinvoke r0.jj_scan_token(75);

        if $z6 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    private final boolean jj_3R_209()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(104);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(105);

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_scan_token(111);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_191();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_206()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(100);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_33();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_199()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_208();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_198()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_207();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_197()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_206();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_196()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(102);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(103);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_191();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_191()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_3R_196();

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z1 = specialinvoke r0.jj_3R_197();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_3R_198();

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_3R_199();

        if $z3 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_44()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(54);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_76();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_112()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_39();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_181()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_191();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_209();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_200()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(102);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(103);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_181();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_178()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_181();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_200();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_96()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(68);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_192()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(112);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(113);

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_scan_token(114);

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_scan_token(115);

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_scan_token(116);

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_scan_token(117);

        if $z6 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_178();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_171()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(90);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(95);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_166();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_170()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_178();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_192();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_52()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_96();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_182()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(84);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(85);

        if $z2 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z3 = specialinvoke r0.jj_scan_token(82);

        if $z3 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z4 = specialinvoke r0.jj_scan_token(83);

        if $z4 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z5 = specialinvoke r0.jj_scan_token(91);

        if $z5 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z6 = specialinvoke r0.jj_scan_token(92);

        if $z6 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z7 = specialinvoke r0.jj_scan_token(93);

        if $z7 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z8 = specialinvoke r0.jj_scan_token(94);

        if $z8 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_170();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_27()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(69);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private final boolean jj_3R_51()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_95();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_168()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_170();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_182();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_50()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_94();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3_26()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(69);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_3R_43();

        if $z2 == 0 goto label3;

        return 1;

     label3:
        r1 = r0.jj_scanpos;

        $z3 = specialinvoke r0.jj_3R_44();

        if $z3 == 0 goto label4;

        r0.jj_scanpos = r1;

     label4:
        $z4 = specialinvoke r0.jj_scan_token(74);

        if $z4 == 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private final boolean jj_3R_179()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(35);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_32();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_28()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_45();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_166()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_168();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_179();

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

     label2:
        return 0;
    }

    private final boolean jj_3_25()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_42();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $z2 = specialinvoke r0.jj_scan_token(69);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $z3 = specialinvoke r0.jj_scan_token(72);

        if $z3 == 0 goto label4;

        return 1;

     label4:
        return 0;
    }

    private final boolean jj_3R_49()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_93();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_scan_token(78);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3_24()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_41();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_scan_token(13);

        if $z1 == 0 goto label2;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(37);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_167()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_scan_token(110);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_161();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private final boolean jj_3R_48()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_92();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_164()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_166();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r1 = r0.jj_scanpos;

        $z1 = specialinvoke r0.jj_3R_171();

        if $z1 == 0 goto label1;

        r0.jj_scanpos = r1;

        goto label2;

     label2:
        return 0;
    }

    private final boolean jj_3R_47()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.jj_3R_92();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private final boolean jj_3R_169()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.jj_scanpos;

        $z0 = specialinvoke r0.jj_scan_token(106);

        if $z0 == 0 goto label1;

        r0.jj_scanpos = r1;

        $z2 = specialinvoke r0.jj_scan_token(107);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r0.jj_3R_164();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void <init>(java.io.InputStream)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.InputStream r1;
        org.gjt.sp.jedit.bsh.JJTParserState $r2;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess $r3;
        org.gjt.sp.jedit.bsh.JavaCharStream $r4, $r6;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r5;
        org.gjt.sp.jedit.bsh.Token $r7;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new org.gjt.sp.jedit.bsh.JJTParserState;

        specialinvoke $r2.<init>();

        r0.jjtree = $r2;

        r0.retainComments = 0;

        r0.lookingAhead = 0;

        $r3 = new org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess;

        specialinvoke $r3.<init>(null);

        r0.jj_ls = $r3;

        $r4 = new org.gjt.sp.jedit.bsh.JavaCharStream;

        specialinvoke $r4.<init>(r1, 1, 1);

        r0.jj_input_stream = $r4;

        $r5 = new org.gjt.sp.jedit.bsh.ParserTokenManager;

        $r6 = r0.jj_input_stream;

        specialinvoke $r5.<init>($r6);

        r0.token_source = $r5;

        $r7 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r7.<init>();

        r0.token = $r7;

        r0.jj_ntk = -1;

        return;
    }

    public void ReInit(java.io.InputStream)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.InputStream r1;
        org.gjt.sp.jedit.bsh.JavaCharStream $r2, $r3;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r4;
        org.gjt.sp.jedit.bsh.Token $r5;
        org.gjt.sp.jedit.bsh.JJTParserState $r6;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.jj_input_stream;

        $r2.ReInit(r1, 1, 1);

        $r4 = r0.token_source;

        $r3 = r0.jj_input_stream;

        $r4.ReInit($r3);

        $r5 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r5.<init>();

        r0.token = $r5;

        r0.jj_ntk = -1;

        $r6 = r0.jjtree;

        $r6.reset();

        return;
    }

    public void <init>(java.io.Reader)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.Reader r1;
        org.gjt.sp.jedit.bsh.JJTParserState $r2;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess $r3;
        org.gjt.sp.jedit.bsh.JavaCharStream $r4, $r6;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r5;
        org.gjt.sp.jedit.bsh.Token $r7;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new org.gjt.sp.jedit.bsh.JJTParserState;

        specialinvoke $r2.<init>();

        r0.jjtree = $r2;

        r0.retainComments = 0;

        r0.lookingAhead = 0;

        $r3 = new org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess;

        specialinvoke $r3.<init>(null);

        r0.jj_ls = $r3;

        $r4 = new org.gjt.sp.jedit.bsh.JavaCharStream;

        specialinvoke $r4.<init>(r1, 1, 1);

        r0.jj_input_stream = $r4;

        $r5 = new org.gjt.sp.jedit.bsh.ParserTokenManager;

        $r6 = r0.jj_input_stream;

        specialinvoke $r5.<init>($r6);

        r0.token_source = $r5;

        $r7 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r7.<init>();

        r0.token = $r7;

        r0.jj_ntk = -1;

        return;
    }

    public void ReInit(java.io.Reader)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        java.io.Reader r1;
        org.gjt.sp.jedit.bsh.JavaCharStream $r2, $r3;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r4;
        org.gjt.sp.jedit.bsh.Token $r5;
        org.gjt.sp.jedit.bsh.JJTParserState $r6;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.jj_input_stream;

        $r2.ReInit(r1, 1, 1);

        $r4 = r0.token_source;

        $r3 = r0.jj_input_stream;

        $r4.ReInit($r3);

        $r5 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r5.<init>();

        r0.token = $r5;

        r0.jj_ntk = -1;

        $r6 = r0.jjtree;

        $r6.reset();

        return;
    }

    public void <init>(org.gjt.sp.jedit.bsh.ParserTokenManager)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.ParserTokenManager r1;
        org.gjt.sp.jedit.bsh.JJTParserState $r2;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess $r3;
        org.gjt.sp.jedit.bsh.Token $r4;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new org.gjt.sp.jedit.bsh.JJTParserState;

        specialinvoke $r2.<init>();

        r0.jjtree = $r2;

        r0.retainComments = 0;

        r0.lookingAhead = 0;

        $r3 = new org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess;

        specialinvoke $r3.<init>(null);

        r0.jj_ls = $r3;

        r0.token_source = r1;

        $r4 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r4.<init>();

        r0.token = $r4;

        r0.jj_ntk = -1;

        return;
    }

    public void ReInit(org.gjt.sp.jedit.bsh.ParserTokenManager)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.ParserTokenManager r1;
        org.gjt.sp.jedit.bsh.Token $r2;
        org.gjt.sp.jedit.bsh.JJTParserState $r3;

        r0 := @this;

        r1 := @parameter0;

        r0.token_source = r1;

        $r2 = new org.gjt.sp.jedit.bsh.Token;

        specialinvoke $r2.<init>();

        r0.token = $r2;

        r0.jj_ntk = -1;

        $r3 = r0.jjtree;

        $r3.reset();

        return;
    }

    private final org.gjt.sp.jedit.bsh.Token jj_consume_token(int) throws org.gjt.sp.jedit.bsh.ParseException
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0, $i1;
        org.gjt.sp.jedit.bsh.Token r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r4;
        org.gjt.sp.jedit.bsh.ParseException $r8;

        r0 := @this;

        i0 := @parameter0;

        $r2 = r0.token;

        r1 = $r2;

        $r3 = $r2.next;

        if $r3 == null goto label1;

        $r10 = r0.token;

        $r11 = $r10.next;

        r0.token = $r11;

        goto label2;

     label1:
        $r5 = r0.token;

        $r4 = r0.token_source;

        $r6 = $r4.getNextToken();

        $r5.next = $r6;

        r0.token = $r6;

     label2:
        r0.jj_ntk = -1;

        $r7 = r0.token;

        $i1 = $r7.kind;

        if $i1 != i0 goto label3;

        $r9 = r0.token;

        return $r9;

     label3:
        r0.token = r1;

        $r8 = r0.generateParseException();

        throw $r8;
    }

    private final boolean jj_scan_token(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0, $i1, $i2, $i3, $i4;
        org.gjt.sp.jedit.bsh.Token $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r14, $r15;
        org.gjt.sp.jedit.bsh.Parser$LookaheadSuccess $r8;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r13;

        r0 := @this;

        i0 := @parameter0;

        $r2 = r0.jj_scanpos;

        $r1 = r0.jj_lastpos;

        if $r2 != $r1 goto label2;

        $i3 = r0.jj_la;

        $i4 = $i3 - 1;

        r0.jj_la = $i4;

        $r9 = r0.jj_scanpos;

        $r10 = $r9.next;

        if $r10 != null goto label1;

        $r14 = r0.jj_scanpos;

        $r13 = r0.token_source;

        $r15 = $r13.getNextToken();

        $r14.next = $r15;

        r0.jj_scanpos = $r15;

        r0.jj_lastpos = $r15;

        goto label3;

     label1:
        $r11 = r0.jj_scanpos;

        $r12 = $r11.next;

        r0.jj_scanpos = $r12;

        r0.jj_lastpos = $r12;

        goto label3;

     label2:
        $r3 = r0.jj_scanpos;

        $r4 = $r3.next;

        r0.jj_scanpos = $r4;

     label3:
        $r5 = r0.jj_scanpos;

        $i1 = $r5.kind;

        if $i1 == i0 goto label4;

        return 1;

     label4:
        $i2 = r0.jj_la;

        if $i2 != 0 goto label5;

        $r7 = r0.jj_scanpos;

        $r6 = r0.jj_lastpos;

        if $r7 != $r6 goto label5;

        $r8 = r0.jj_ls;

        throw $r8;

     label5:
        return 0;
    }

    public final org.gjt.sp.jedit.bsh.Token getNextToken()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r3;

        r0 := @this;

        $r1 = r0.token;

        $r2 = $r1.next;

        if $r2 == null goto label1;

        $r7 = r0.token;

        $r8 = $r7.next;

        r0.token = $r8;

        goto label2;

     label1:
        $r4 = r0.token;

        $r3 = r0.token_source;

        $r5 = $r3.getNextToken();

        $r4.next = $r5;

        r0.token = $r5;

     label2:
        r0.jj_ntk = -1;

        $r6 = r0.token;

        return $r6;
    }

    public final org.gjt.sp.jedit.bsh.Token getToken(int)
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        int i0, i1;
        boolean $z0;
        org.gjt.sp.jedit.bsh.Token $r1, $r3, $r4, r5, $r4_1, $r4_2;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r2;

        r0 := @this;

        i0 := @parameter0;

        $z0 = r0.lookingAhead;

        if $z0 == 0 goto label1;

        $r4 = r0.jj_scanpos;

(0)     goto label2;

     label1:
(1)     $r4_1 = r0.token;

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        r5 = $r4_2;

(2)     i1 = 0;

     label3:
        r5 = Phi(r5 #2, r5 #5);

        $r4 = Phi($r4_2 #2, $r4 #5);

        i1 = Phi(i1 #2, i1 #5);

        if i1 >= i0 goto label6;

        $r1 = r5.next;

        if $r1 == null goto label4;

        r5 = r5.next;

(3)     goto label5;

     label4:
        $r2 = r0.token_source;

        $r3 = $r2.getNextToken();

        r5.next = $r3;

(4)     r5 = $r3;

     label5:
        r5 = Phi(r5 #3, r5 #4);

        i1 = i1 + 1;

(5)     goto label3;

     label6:
        return r5;
    }

    private final int jj_ntk()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token $r1, $r2, $r3, $r5, $r6;
        int $i0, $i1;
        org.gjt.sp.jedit.bsh.ParserTokenManager $r4;

        r0 := @this;

        $r1 = r0.token;

        $r2 = $r1.next;

        r0.jj_nt = $r2;

        if $r2 != null goto label1;

        $r5 = r0.token;

        $r4 = r0.token_source;

        $r6 = $r4.getNextToken();

        $r5.next = $r6;

        $i1 = $r6.kind;

        r0.jj_ntk = $i1;

        return $i1;

     label1:
        $r3 = r0.jj_nt;

        $i0 = $r3.kind;

        r0.jj_ntk = $i0;

        return $i0;
    }

    public org.gjt.sp.jedit.bsh.ParseException generateParseException()
    {
        org.gjt.sp.jedit.bsh.Parser r0;
        org.gjt.sp.jedit.bsh.Token r1, $r3;
        int i0, i1, $i2;
        java.lang.String r2, $r12, $r14, $r14_1, $r14_2;
        org.gjt.sp.jedit.bsh.ParseException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String[] $r13;

        r0 := @this;

        $r3 = r0.token;

        r1 = $r3.next;

        i0 = r1.beginLine;

        i1 = r1.beginColumn;

        $i2 = r1.kind;

        if $i2 != 0 goto label1;

        $r13 = org.gjt.sp.jedit.bsh.Parser.tokenImage;

        $r14 = $r13[0];

(0)     goto label2;

     label1:
(1)     $r14_1 = r1.image;

     label2:
        $r14_2 = Phi($r14 #0, $r14_1 #1);

        r2 = $r14_2;

        $r4 = new org.gjt.sp.jedit.bsh.ParseException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r6 = $r5.append("Parse error at line ");

        $r7 = $r6.append(i0);

        $r8 = $r7.append(", column ");

        $r9 = $r8.append(i1);

        $r10 = $r9.append(".  Encountered: ");

        $r11 = $r10.append(r2);

        $r12 = $r11.toString();

        specialinvoke $r4.<init>($r12);

        return $r4;
    }

    public final void enable_tracing()
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        return;
    }

    public final void disable_tracing()
    {
        org.gjt.sp.jedit.bsh.Parser r0;

        r0 := @this;

        return;
    }
}
