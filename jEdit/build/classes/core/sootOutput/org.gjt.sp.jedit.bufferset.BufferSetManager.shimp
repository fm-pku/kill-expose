public class org.gjt.sp.jedit.bufferset.BufferSetManager extends java.lang.Object
{
    private org.gjt.sp.jedit.bufferset.BufferSet$Scope scope;

    public void <init>()
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        java.lang.IllegalArgumentException r1, $r4;
        java.lang.String $r2;
        org.gjt.sp.jedit.bufferset.BufferSet$Scope $r3, $r5;

        r0 := @this;

        specialinvoke r0.<init>();

        org.gjt.sp.jedit.EditBus.addToBus(r0);

     label1:
        $r2 = org.gjt.sp.jedit.jEdit.getProperty("bufferset.scope", "global");

        $r3 = org.gjt.sp.jedit.bufferset.BufferSet$Scope.valueOf($r2);

        r0.scope = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        org.gjt.sp.util.Log.log(9, r0, r1);

        $r5 = org.gjt.sp.jedit.bufferset.BufferSet$Scope.global;

        r0.scope = $r5;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void handleEditPaneUpdate(org.gjt.sp.jedit.msg.EditPaneUpdate)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.msg.EditPaneUpdate r1;
        org.gjt.sp.jedit.EditPane r2;
        org.gjt.sp.jedit.bufferset.BufferSet r3;
        org.gjt.sp.jedit.Buffer[] r4, r5;
        int i0, i1;
        org.gjt.sp.jedit.Buffer r6;
        java.lang.Object $r7, $r8;

        r0 := @this;

        r1 := @parameter0;

        $r7 = r1.getWhat();

        $r8 = org.gjt.sp.jedit.msg.EditPaneUpdate.DESTROYED;

(0)     if $r7 != $r8 goto label2;

        r2 = r1.getEditPane();

        r3 = r2.getBufferSet();

        r4 = r3.getAllBuffers();

        r5 = r4;

        i0 = lengthof r5;

(1)     i1 = 0;

     label1:
        i1 = Phi(i1 #1, i1 #3);

(2)     if i1 >= i0 goto label2;

        r6 = r5[i1];

        specialinvoke r0._removeBuffer(r3, r6);

        i1 = i1 + 1;

(3)     goto label1;

     label2:
        i1 = Phi(i1 #0, i1 #2);

        return;
    }

    public void handlePropertiesChanged(org.gjt.sp.jedit.msg.PropertiesChanged)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.msg.PropertiesChanged r1;
        org.gjt.sp.jedit.bufferset.BufferSetManager$1 $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new org.gjt.sp.jedit.bufferset.BufferSetManager$1;

        specialinvoke $r2.<init>(r0);

        org.gjt.sp.jedit.jEdit.visit($r2);

        return;
    }

    public int countBufferSets(org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.Buffer r1;
        java.util.Set $r2;
        int $i0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.getOwners(r1);

        $i0 = $r2.size();

        return $i0;
    }

    public void setScope(org.gjt.sp.jedit.bufferset.BufferSet$Scope)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.bufferset.BufferSet$Scope r1, $r2, $r4, $r6;
        java.lang.String $r3;
        int $i0;
        org.gjt.sp.jedit.msg.PropertiesChanged $r5;
        java.util.HashMap $r7, r12;
        org.gjt.sp.jedit.bufferset.BufferSetManager$3 $r8;
        org.gjt.sp.jedit.bufferset.BufferSetManager$4 $r9;
        org.gjt.sp.jedit.bufferset.BufferSetManager$2 $r10;
        org.gjt.sp.jedit.Buffer[] r11;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.scope;

        if r1 != $r2 goto label1;

        return;

     label1:
        $r3 = r1.name();

        org.gjt.sp.jedit.jEdit.setProperty("bufferset.scope", $r3);

        $r4 = r0.scope;

        $i0 = r1.compareTo($r4);

        if $i0 <= 0 goto label3;

        $r6 = org.gjt.sp.jedit.bufferset.BufferSet$Scope.global;

        if r1 != $r6 goto label2;

        r11 = org.gjt.sp.jedit.jEdit.getBuffers();

        $r10 = new org.gjt.sp.jedit.bufferset.BufferSetManager$2;

        specialinvoke $r10.<init>(r0, r11);

        org.gjt.sp.jedit.jEdit.visit($r10);

        goto label3;

     label2:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<init>();

        r12 = $r7;

        $r8 = new org.gjt.sp.jedit.bufferset.BufferSetManager$3;

        specialinvoke $r8.<init>(r0, r12);

        org.gjt.sp.jedit.jEdit.visit($r8);

        $r9 = new org.gjt.sp.jedit.bufferset.BufferSetManager$4;

        specialinvoke $r9.<init>(r0, r12);

        org.gjt.sp.jedit.jEdit.visit($r9);

     label3:
        r0.scope = r1;

        $r5 = new org.gjt.sp.jedit.msg.PropertiesChanged;

        specialinvoke $r5.<init>(r0);

        org.gjt.sp.jedit.EditBus.send($r5);

        return;
    }

    public org.gjt.sp.jedit.bufferset.BufferSet$Scope getScope()
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.bufferset.BufferSet$Scope $r1;

        r0 := @this;

        $r1 = r0.scope;

        return $r1;
    }

    public void addBuffer(org.gjt.sp.jedit.View, org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.View r1;
        org.gjt.sp.jedit.Buffer r2;
        org.gjt.sp.jedit.EditPane r3, $r4, $r4_1, $r4_2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        if r1 != null goto label1;

        $r4 = null;

(0)     goto label2;

     label1:
(1)     $r4_1 = r1.getEditPane();

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        r3 = $r4_2;

        r0.addBuffer(r3, r2);

        return;
    }

    public void addBuffer(org.gjt.sp.jedit.EditPane, org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.Buffer r1;
        org.gjt.sp.jedit.bufferset.BufferSet r2, r6;
        org.gjt.sp.jedit.EditPane[] r3, r4;
        int i0, $i1, $i2, i3;
        org.gjt.sp.jedit.EditPane r5, r12, r12_1, r12_2;
        org.gjt.sp.jedit.bufferset.BufferSet$Scope $r7;
        int[] $r8;
        org.gjt.sp.jedit.bufferset.BufferSetManager$5 $r9;
        org.gjt.sp.jedit.View $r10, $r11;

        r0 := @this;

        r12 := @parameter0;

        r1 := @parameter1;

(0)     if r12 != null goto label1;

        $r11 = org.gjt.sp.jedit.jEdit.getActiveView();

(1)     r12_1 = $r11.getEditPane();

     label1:
        r12_2 = Phi(r12 #0, r12_1 #1);

        r2 = r12_2.getBufferSet();

        $r8 = org.gjt.sp.jedit.bufferset.BufferSetManager$7.$SwitchMap$org$gjt$sp$jedit$bufferset$BufferSet$Scope;

        $r7 = r0.scope;

        $i1 = $r7.ordinal();

        $i2 = $r8[$i1];

(2)     tableswitch($i2)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label8;
            default: goto label9;
        };

     label2:
        r2.addBuffer(r1);

(3)     goto label9;

     label3:
        $r10 = r12_2.getView();

        r3 = $r10.getEditPanes();

        r4 = r3;

        i0 = lengthof r4;

(4)     i3 = 0;

     label4:
        i3 = Phi(i3 #4, i3 #5);

        r12 = Phi(r12_2 #4, r12 #5);

        if i3 >= i0 goto label7;

        r5 = r4[i3];

        if r5 != null goto label5;

        goto label6;

     label5:
        r6 = r5.getBufferSet();

        r6.addBuffer(r1);

     label6:
        i3 = i3 + 1;

(5)     goto label4;

     label7:
(6)     goto label9;

     label8:
        $r9 = new org.gjt.sp.jedit.bufferset.BufferSetManager$5;

        specialinvoke $r9.<init>(r0, r1);

(7)     org.gjt.sp.jedit.jEdit.visit($r9);

     label9:
        i3 = Phi(i3 #2, i3 #3, i3 #6, i3 #7);

        r12 = Phi(r12_2 #2, r12_2 #3, r12 #6, r12_2 #7);

        return;
    }

    public void moveBuffer(org.gjt.sp.jedit.EditPane, int, int)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.EditPane r1;
        int i0, i1;
        org.gjt.sp.jedit.bufferset.BufferSet $r2;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        $r2 = r1.getBufferSet();

        $r2.moveBuffer(i0, i1);

        return;
    }

    public void removeBuffer(org.gjt.sp.jedit.EditPane, org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.EditPane r1, r6;
        org.gjt.sp.jedit.Buffer r2;
        org.gjt.sp.jedit.bufferset.BufferSet r3, $r10;
        org.gjt.sp.jedit.EditPane[] r4, r5;
        int i0, $i1, $i2, i3;
        org.gjt.sp.jedit.bufferset.BufferSet$Scope $r7;
        int[] $r8;
        org.gjt.sp.jedit.View $r9;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r8 = org.gjt.sp.jedit.bufferset.BufferSetManager$7.$SwitchMap$org$gjt$sp$jedit$bufferset$BufferSet$Scope;

        $r7 = r0.scope;

        $i1 = $r7.ordinal();

        $i2 = $r8[$i1];

(0)     tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label5;
            default: goto label6;
        };

     label1:
        r3 = r1.getBufferSet();

        r0.removeBuffer(r3, r2);

(1)     goto label6;

     label2:
        $r9 = r1.getView();

        r4 = $r9.getEditPanes();

        r5 = r4;

        i0 = lengthof r5;

(2)     i3 = 0;

     label3:
        i3 = Phi(i3 #2, i3 #3);

        if i3 >= i0 goto label4;

        r6 = r5[i3];

        $r10 = r6.getBufferSet();

        r0.removeBuffer($r10, r2);

        i3 = i3 + 1;

(3)     goto label3;

     label4:
(4)     goto label6;

     label5:
(5)     org.gjt.sp.jedit.jEdit._closeBuffer(null, r2);

     label6:
        i3 = Phi(i3 #0, i3 #1, i3 #4, i3 #5);

        return;
    }

    void removeBuffer(org.gjt.sp.jedit.bufferset.BufferSet, org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.bufferset.BufferSet r1;
        org.gjt.sp.jedit.Buffer r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append("removeBuffer(");

        $r5 = $r4.append(r1);

        $r6 = $r5.append(44);

        $r7 = $r6.append(r2);

        $r8 = $r7.append(41);

        $r9 = $r8.toString();

        org.gjt.sp.util.Log.log(1, r0, $r9);

        specialinvoke r0._removeBuffer(r1, r2);

        specialinvoke r0.bufferRemoved(r1);

        return;
    }

    public void removeBuffer(org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.Buffer r1;
        java.util.Iterator r2;
        org.gjt.sp.jedit.bufferset.BufferSet r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this;

        r1 := @parameter0;

        $r4 = r0.getOwners(r1);

        r2 = $r4.iterator();

     label1:
        $z0 = r2.hasNext();

        if $z0 == 0 goto label2;

        $r5 = r2.next();

        r3 = (org.gjt.sp.jedit.bufferset.BufferSet) $r5;

        r3.removeBuffer(r1);

        specialinvoke r0.bufferRemoved(r3);

        goto label1;

     label2:
        return;
    }

    private void bufferRemoved(org.gjt.sp.jedit.bufferset.BufferSet)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.bufferset.BufferSet r1;
        org.gjt.sp.jedit.Buffer r2;
        org.gjt.sp.jedit.EditPane r3;
        int $i0;

        r0 := @this;

        r1 := @parameter0;

        $i0 = r1.size();

        if $i0 != 0 goto label1;

        r2 = org.gjt.sp.jedit.bufferset.BufferSetManager.createUntitledBuffer();

        r3 = org.gjt.sp.jedit.bufferset.BufferSetManager.getOwner(r1);

        r0.addBuffer(r3, r2);

     label1:
        return;
    }

    private void _removeBuffer(org.gjt.sp.jedit.bufferset.BufferSet, org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.bufferset.BufferSet r1;
        org.gjt.sp.jedit.Buffer r2;
        java.util.Set r3;
        boolean $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 = r0.getOwners(r2);

        r3.remove(r1);

        r1.removeBuffer(r2);

        $z1 = r3.isEmpty();

        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r5 = $r4.append("Buffer:");

        $r6 = $r5.append(r2);

        $r7 = $r6.append(" is in no bufferSet anymore, closing it");

        $r8 = $r7.toString();

        org.gjt.sp.util.Log.log(1, r0, $r8);

        org.gjt.sp.jedit.jEdit._closeBuffer(null, r2);

     label1:
        return;
    }

    public static org.gjt.sp.jedit.Buffer createUntitledBuffer()
    {
        int i0, $i1, $i2;
        org.gjt.sp.jedit.View r0;
        org.gjt.sp.jedit.Buffer r1, r7;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, r6, r6_1, r6_2, r6_3, r6_4, r6_5, r6_6;
        org.gjt.sp.jedit.io.VFS r8;

        i0 = org.gjt.sp.jedit.jEdit.getNextUntitledBufferId();

        r0 = org.gjt.sp.jedit.jEdit.getActiveView();

        r6 = null;

(0)     if r0 == null goto label1;

        r7 = r0.getBuffer();

(1)     r6_1 = r7.getDirectory();

     label1:
        r6_2 = Phi(r6 #0, r6_1 #1);

(2)     if r6_2 != null goto label2;

(3)     r6_3 = java.lang.System.getProperty("user.home");

     label2:
        r6_4 = Phi(r6_2 #2, r6_3 #3);

        r8 = org.gjt.sp.jedit.io.VFSManager.getVFSForPath(r6_4);

        $i1 = r8.getCapabilities();

        $i2 = $i1 & 2;

(4)     if $i2 != 0 goto label3;

(5)     r6_5 = java.lang.System.getProperty("user.home");

     label3:
        r6_6 = Phi(r6_4 #4, r6_5 #5);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r3 = $r2.append("Untitled-");

        $r4 = $r3.append(i0);

        $r5 = $r4.toString();

        r1 = org.gjt.sp.jedit.jEdit.openTemporary(r0, r6_6, $r5, 1, null);

        org.gjt.sp.jedit.jEdit.commitTemporary(r1);

        return r1;
    }

    public java.util.Set getOwners(org.gjt.sp.jedit.Buffer)
    {
        org.gjt.sp.jedit.bufferset.BufferSetManager r0;
        org.gjt.sp.jedit.Buffer r1;
        java.util.HashSet r2, $r4;
        java.util.Iterator r3;
        org.gjt.sp.jedit.bufferset.BufferSetManager$6 $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.gjt.sp.jedit.bufferset.BufferSet $r7;
        int $i0;

        r0 := @this;

        r1 := @parameter0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<init>();

        r2 = $r4;

        $r5 = new org.gjt.sp.jedit.bufferset.BufferSetManager$6;

        specialinvoke $r5.<init>(r0, r2);

        org.gjt.sp.jedit.jEdit.visit($r5);

        r3 = r2.iterator();

     label1:
        $z0 = r3.hasNext();

        if $z0 == 0 goto label2;

        $r6 = r3.next();

        $r7 = (org.gjt.sp.jedit.bufferset.BufferSet) $r6;

        $i0 = $r7.indexOf(r1);

        if $i0 != -1 goto label1;

        r3.remove();

        goto label1;

     label2:
        return r2;
    }

    private static org.gjt.sp.jedit.EditPane getOwner(org.gjt.sp.jedit.bufferset.BufferSet)
    {
        org.gjt.sp.jedit.bufferset.BufferSet r0, $r7;
        org.gjt.sp.jedit.View[] r1, r2;
        int i0, i1, i2, i3;
        org.gjt.sp.jedit.View r3;
        org.gjt.sp.jedit.EditPane[] r4, r5;
        org.gjt.sp.jedit.EditPane r6;

        r0 := @parameter0;

        r1 = org.gjt.sp.jedit.jEdit.getViews();

        r2 = r1;

        i0 = lengthof r2;

(0)     i2 = 0;

     label1:
        i2 = Phi(i2 #0, i2 #3);

        i3 = Phi(i3 #0, i3 #3);

        if i2 >= i0 goto label5;

        r3 = r2[i2];

        r4 = r3.getEditPanes();

        r5 = r4;

        i1 = lengthof r5;

(1)     i3 = 0;

     label2:
        i2 = Phi(i2 #1, i2 #2);

        i3 = Phi(i3 #1, i3 #2);

        if i3 >= i1 goto label4;

        r6 = r5[i3];

        $r7 = r6.getBufferSet();

        if $r7 != r0 goto label3;

        return r6;

     label3:
        i3 = i3 + 1;

(2)     goto label2;

     label4:
        i2 = i2 + 1;

(3)     goto label1;

     label5:
        return null;
    }
}
