public class org.gjt.sp.jedit.gui.NumericTextField extends javax.swing.JTextField
{
    private final boolean positiveOnly;

    public void <init>(java.lang.String)
    {
        org.gjt.sp.jedit.gui.NumericTextField r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>(r1, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        org.gjt.sp.jedit.gui.NumericTextField r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        specialinvoke r0.<init>(r1);

        r0.positiveOnly = z0;

        return;
    }

    protected void processKeyEvent(java.awt.event.KeyEvent)
    {
        org.gjt.sp.jedit.gui.NumericTextField r0;
        java.awt.event.KeyEvent r1;
        int $i0;
        char $c1, $c2;
        boolean $z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        $i0 = r1.getID();

        if $i0 != 400 goto label2;

        $c1 = r1.getKeyChar();

        $z0 = java.lang.Character.isDigit($c1);

        if $z0 != 0 goto label2;

        $z1 = r0.positiveOnly;

        if $z1 != 0 goto label1;

        $c2 = r1.getKeyChar();

        if $c2 == 45 goto label2;

     label1:
        r1.consume();

     label2:
        specialinvoke r0.processKeyEvent(r1);

        return;
    }
}
