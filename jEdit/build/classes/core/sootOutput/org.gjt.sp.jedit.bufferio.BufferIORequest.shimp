public abstract class org.gjt.sp.jedit.bufferio.BufferIORequest extends org.gjt.sp.jedit.bufferio.IoTask
{
    public static final int IOBUFSIZE;
    public static final int PROGRESS_INTERVAL;
    public static final java.lang.String LOAD_DATA;
    public static final java.lang.String END_OFFSETS;
    public static final java.lang.String NEW_PATH;
    public static final java.lang.String ERROR_OCCURRED;
    protected final org.gjt.sp.jedit.View view;
    protected final org.gjt.sp.jedit.Buffer buffer;
    protected final java.lang.Object session;
    protected final org.gjt.sp.jedit.io.VFS vfs;
    protected java.lang.String path;
    protected final java.lang.String markersPath;

    protected void <init>(org.gjt.sp.jedit.View, org.gjt.sp.jedit.Buffer, java.lang.Object, org.gjt.sp.jedit.io.VFS, java.lang.String)
    {
        org.gjt.sp.jedit.bufferio.BufferIORequest r0;
        org.gjt.sp.jedit.View r1;
        org.gjt.sp.jedit.Buffer r2;
        java.lang.Object r3;
        org.gjt.sp.jedit.io.VFS r4;
        java.lang.String r5, $r6;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        r5 := @parameter4;

        specialinvoke r0.<init>();

        r0.view = r1;

        r0.buffer = r2;

        r0.session = r3;

        r0.vfs = r4;

        r0.path = r5;

        $r6 = org.gjt.sp.jedit.Buffer.getMarkersPath(r4, r5);

        r0.markersPath = $r6;

        return;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.bufferio.BufferIORequest r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;
        org.gjt.sp.jedit.Buffer $r6;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = r0.getClass();

        $r3 = $r2.getName();

        $r4 = $r1.append($r3);

        $r5 = $r4.append(91);

        $r6 = r0.buffer;

        $r7 = $r5.append($r6);

        $r8 = $r7.append(93);

        $r9 = $r8.toString();

        return $r9;
    }

    public static int getCharIOBufferSize()
    {
        return 32768;
    }

    public static int getByteIOBufferSize()
    {
        return 65536;
    }

    protected java.io.Reader autodetect(java.io.InputStream) throws java.io.IOException
    {
        org.gjt.sp.jedit.bufferio.BufferIORequest r0;
        java.io.InputStream r1;
        org.gjt.sp.jedit.Buffer $r2;
        java.io.Reader $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.buffer;

        $r3 = org.gjt.sp.jedit.MiscUtilities.autodetect(r1, $r2);

        return $r3;
    }

    protected org.gjt.sp.util.SegmentBuffer read(java.io.Reader, long, boolean) throws java.io.IOException, java.lang.InterruptedException
    {
        org.gjt.sp.jedit.bufferio.BufferIORequest r0;
        java.io.Reader r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, z6, z7, z8, $z5_1, $z5_2;
        org.gjt.sp.util.IntegerArray r2, $r5;
        org.gjt.sp.util.SegmentBuffer r3, $r7;
        char[] r4, $r14, $r16;
        int i0, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, i38, i39, i40, i41;
        long $l1, $l22, $l29, $l35, l37, l37_1, l37_2;
        org.gjt.sp.jedit.Buffer $r6, $r8, $r9, $r10, $r12, $r13, $r15;
        byte $b4, $b36;
        java.lang.String $r11, $r17, r19;
        char $c23, c42, c43;
        java.lang.InterruptedException $r18;

        r0 := @this;

        r1 := @parameter0;

        l37 := @parameter1;

        z0 := @parameter2;

        $r5 = new org.gjt.sp.util.IntegerArray;

        $l1 = l37 / 50L;

        $i2 = (int) $l1;

        $i3 = java.lang.Math.max(1, $i2);

        specialinvoke $r5.<init>($i3);

        r2 = $r5;

        $r6 = r0.buffer;

        $z2 = $r6.isTemporary();

        if $z2 != 0 goto label01;

        $b36 = l37 cmp 0L;

        if $b36 == 0 goto label01;

        $z5 = 1;

(0)     goto label02;

     label01:
(1)     $z5_1 = 0;

     label02:
        $z5_2 = Phi($z5 #0, $z5_1 #1);

        z1 = $z5_2;

        if z1 == 0 goto label03;

        r0.setMaximum(l37);

        r0.setValue(0L);

     label03:
        $b4 = l37 cmp 0L;

(2)     if $b4 != 0 goto label04;

(3)     l37_1 = 32768L;

     label04:
        l37_2 = Phi(l37 #2, l37_1 #3);

        $r7 = new org.gjt.sp.util.SegmentBuffer;

        $i5 = (int) l37_2;

        $i6 = $i5 + 1;

        specialinvoke $r7.<init>($i6);

        r3 = $r7;

        r4 = newarray (char)[32768];

        z6 = 0;

        z7 = 0;

        z8 = 0;

(4)     i38 = 0;

     label05:
        $z5 = Phi($z5_2 #4, $z5 #20);

        l37 = Phi(l37_2 #4, l37 #20);

        z8 = Phi(z8 #4, z8 #20);

        i38 = Phi(i38 #4, i38 #20);

        z7 = Phi(z7 #4, z7 #20);

        i39 = Phi(i39 #4, i39 #20);

        z6 = Phi(z6 #4, z6 #20);

        i40 = Phi(i40 #4, i40 #20);

        $i7 = lengthof r4;

        $i8 = r1.read(r4, 0, $i7);

        i0 = $i8;

        if $i8 == -1 goto label19;

        $z4 = java.lang.Thread.interrupted();

        if $z4 == 0 goto label06;

        $r18 = new java.lang.InterruptedException;

        specialinvoke $r18.<init>();

        throw $r18;

     label06:
        i39 = 0;

(5)     i40 = 0;

     label07:
        $z5 = Phi($z5 #5, $z5 #19);

        l37 = Phi(l37 #5, l37 #19);

        z8 = Phi(z8 #5, z8 #19);

        i38 = Phi(i38 #5, i38 #19);

        z7 = Phi(z7 #5, z7 #19);

        i39 = Phi(i39 #5, i39 #19);

        z6 = Phi(z6 #5, z6 #19);

        i40 = Phi(i40 #5, i40 #19);

        if i40 >= i0 goto label17;

        $c23 = r4[i40];

        lookupswitch($c23)
        {
            case 10: goto label12;
            case 13: goto label08;
            default: goto label15;
        };

     label08:
        if z8 == 0 goto label09;

        z7 = 1;

        z6 = 0;

(6)     goto label10;

     label09:
(7)     z8 = 1;

     label10:
        z8 = Phi(z8 #6, z8 #7);

        z7 = Phi(z7 #6, z7 #7);

        z6 = Phi(z6 #6, z6 #7);

        $i24 = i40 - i39;

        r3.append(r4, i39, $i24);

        r3.append(10);

        $i25 = r3.count;

        r2.add($i25);

(8)     if z1 == 0 goto label11;

        $i26 = i38;

        i38 = i38 + 1;

        $i27 = $i26 % 300;

(9)     if $i27 != 0 goto label11;

        $i28 = r3.count;

        $l29 = (long) $i28;

(10)    r0.setValue($l29);

     label11:
        i38 = Phi(i38 #8, i38 #9, i38 #10);

        i39 = i40 + 1;

(11)    goto label16;

     label12:
        if z8 == 0 goto label13;

        z7 = 0;

        z6 = 1;

        z8 = 0;

        i39 = i40 + 1;

(12)    goto label16;

     label13:
        z7 = 0;

        z6 = 0;

        $i30 = i40 - i39;

        r3.append(r4, i39, $i30);

        r3.append(10);

        $i31 = r3.count;

        r2.add($i31);

(13)    if z1 == 0 goto label14;

        $i32 = i38;

        i38 = i38 + 1;

        $i33 = $i32 % 300;

(14)    if $i33 != 0 goto label14;

        $i34 = r3.count;

        $l35 = (long) $i34;

(15)    r0.setValue($l35);

     label14:
        i38 = Phi(i38 #13, i38 #14, i38 #15);

        i39 = i40 + 1;

(16)    goto label16;

     label15:
(17)    if z8 == 0 goto label16;

        z7 = 1;

        z6 = 0;

(18)    z8 = 0;

     label16:
        z8 = Phi(z8 #11, z8 #12, z8 #16, z8 #17, z8 #18);

        i38 = Phi(i38 #11, i38 #12, i38 #16, i38 #17, i38 #18);

        z7 = Phi(z7 #11, z7 #12, z7 #16, z7 #17, z7 #18);

        i39 = Phi(i39 #11, i39 #12, i39 #16, i39 #17, i39 #18);

        z6 = Phi(z6 #11, z6 #12, z6 #16, z6 #17, z6 #18);

        i40 = i40 + 1;

(19)    goto label07;

     label17:
        if z1 == 0 goto label18;

        $i21 = r3.count;

        $l22 = (long) $i21;

        r0.setValue($l22);

     label18:
        $i20 = i0 - i39;

        r3.append(r4, i39, $i20);

(20)    goto label05;

     label19:
        r0.setCancellable(0);

        $i9 = r3.count;

        if $i9 != 0 goto label20;

        $r17 = java.lang.System.getProperty("line.separator");

        r19 = org.gjt.sp.jedit.jEdit.getProperty("buffer.lineSeparator", $r17);

(21)    goto label23;

     label20:
        if z6 == 0 goto label21;

        r19 = "\r\n";

(22)    goto label23;

     label21:
        if z7 == 0 goto label22;

        r19 = "\r";

(23)    goto label23;

     label22:
(24)    r19 = "\n";

     label23:
        r19 = Phi(r19 #21, r19 #22, r19 #23, r19 #24);

        i41 = r3.count;

        if i41 == 0 goto label24;

        $r16 = r3.array;

        $i17 = i41 - 1;

        c42 = $r16[$i17];

        if c42 != 26 goto label24;

        $i18 = r3.count;

        $i19 = $i18 - 1;

        r3.count = $i19;

     label24:
        $r8 = r0.buffer;

        $r8.setBooleanProperty("trailingEOL", 0);

        if i41 == 0 goto label25;

        $z3 = org.gjt.sp.jedit.jEdit.getBooleanProperty("stripTrailingEOL");

        if $z3 == 0 goto label25;

        $r14 = r3.array;

        $i12 = i41 - 1;

        c43 = $r14[$i12];

        if c43 != 10 goto label25;

        $r15 = r0.buffer;

        $r15.setBooleanProperty("trailingEOL", 1);

        $i13 = r3.count;

        $i14 = $i13 - 1;

        r3.count = $i14;

        $i15 = r2.getSize();

        $i16 = $i15 - 1;

        r2.setSize($i16);

     label25:
        $i10 = r3.count;

        $i11 = $i10 + 1;

        r2.add($i11);

        if z0 != 0 goto label26;

        $r9 = r0.buffer;

        $r9.setProperty("BufferIORequest__loadData", r3);

        $r10 = r0.buffer;

        $r10.setProperty("BufferIORequest__endOffsets", r2);

        $r12 = r0.buffer;

        $r11 = r0.path;

        $r12.setProperty("BufferIORequest__newPath", $r11);

        if r19 == null goto label26;

        $r13 = r0.buffer;

        $r13.setProperty("lineSeparator", r19);

     label26:
        return r3;
    }

    protected void write(org.gjt.sp.jedit.Buffer, java.io.OutputStream) throws java.io.IOException, java.lang.InterruptedException
    {
        org.gjt.sp.jedit.bufferio.BufferIORequest r0;
        org.gjt.sp.jedit.Buffer r1;
        java.io.OutputStream r2;
        java.lang.String r3, r8, r17, r17_1, r17_2;
        org.gjt.sp.jedit.io.Encoding r4;
        java.io.Writer r5;
        javax.swing.text.Segment r6, $r11;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, i10;
        java.nio.charset.CharacterCodingException r7, $r14;
        java.io.CharConversionException r9, $r15;
        java.io.BufferedOutputStream $r10;
        long $l3, $l9;
        boolean $z0, $z1, $z2;
        char[] $r12;
        java.lang.InterruptedException $r13;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 = r1.getStringProperty("encoding");

        r4 = org.gjt.sp.jedit.io.EncodingServer.getEncoding(r3);

        $r10 = new java.io.BufferedOutputStream;

        $i1 = org.gjt.sp.jedit.bufferio.BufferIORequest.getByteIOBufferSize();

        specialinvoke $r10.<init>(r2, $i1);

        r5 = r4.getTextWriter($r10);

        $r11 = new javax.swing.text.Segment;

        specialinvoke $r11.<init>();

        r6 = $r11;

        r17 = r1.getStringProperty("lineSeparator");

(0)     if r17 != null goto label1;

(1)     r17_1 = java.lang.System.getProperty("line.separator");

     label1:
        r17_2 = Phi(r17 #0, r17_1 #1);

        i0 = r1.getLineCount();

        $i2 = i0 / 300;

        $l3 = (long) $i2;

        r0.setMaximum($l3);

        r0.setValue(0L);

(2)     i10 = 0;

     label2:
        i10 = Phi(i10 #2, i10 #3, i10 #4);

        r17 = Phi(r17_2 #2, r17 #3, r17 #4);

        if i10 >= i0 goto label9;

        $z0 = java.lang.Thread.interrupted();

        if $z0 == 0 goto label3;

        $r13 = new java.lang.InterruptedException;

        specialinvoke $r13.<init>();

        throw $r13;

     label3:
        r1.getLineText(i10, r6);

     label4:
        $r12 = r6.array;

        $i5 = r6.offset;

        $i4 = r6.count;

        r5.write($r12, $i5, $i4);

        $i6 = i0 - 1;

        if i10 < $i6 goto label5;

        $z1 = org.gjt.sp.jedit.jEdit.getBooleanProperty("stripTrailingEOL");

        if $z1 == 0 goto label6;

        $z2 = r1.getBooleanProperty("trailingEOL");

        if $z2 == 0 goto label6;

     label5:
        r5.write(r17);

     label6:
        goto label8;

     label7:
        $r14 := @caughtexception;

        r7 = $r14;

        r8 = org.gjt.sp.jedit.bufferio.BufferIORequest.getWriteEncodingErrorMessage(r3, r4, r6, i10);

        $r15 = new java.io.CharConversionException;

        specialinvoke $r15.<init>(r8);

        r9 = $r15;

        r9.initCause(r7);

        throw r9;

     label8:
        i10 = i10 + 1;

        $i7 = i10 % 300;

(3)     if $i7 != 0 goto label2;

        $i8 = i10 / 300;

        $l9 = (long) $i8;

        r0.setValue($l9);

(4)     goto label2;

     label9:
        r5.flush();

        return;

        catch java.nio.charset.CharacterCodingException from label4 to label6 with label7;
    }

    private static java.lang.String getWriteEncodingErrorMessage(java.lang.String, org.gjt.sp.jedit.io.Encoding, javax.swing.text.Segment, int)
    {
        java.lang.String r0, $r5, $r6, $r8, $r13, $r14, $r17;
        org.gjt.sp.jedit.io.Encoding r1;
        javax.swing.text.Segment r2;
        int i0, $i2, $i3, $i4, $i5, $i6, i7;
        java.lang.String[] r3, $r4;
        char c1;
        char[] $r7;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r15, $r16;
        java.lang.Exception $r18, r19;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        i0 := @parameter3;

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = r0;

        $i2 = i0 + 1;

        $r5 = java.lang.Integer.toString($i2);

        $r4[1] = $r5;

        $r4[2] = "UNKNOWN";

        $r4[3] = "UNKNOWN";

        r3 = $r4;

     label1:
        i7 = org.gjt.sp.jedit.bufferio.BufferIORequest.getFirstGuiltyCharacterIndex(r1, r2);

        if 0 > i7 goto label2;

        $i3 = r2.count;

        if i7 >= $i3 goto label2;

        $r7 = r2.array;

        $i4 = r2.offset;

        $i5 = $i4 + i7;

        c1 = $r7[$i5];

        $i6 = i7 + 1;

        $r8 = java.lang.Integer.toString($i6);

        r3[2] = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r10 = $r9.append("\'");

        $r11 = $r10.append(c1);

        $r12 = $r11.append("\' (U+");

        $r13 = java.lang.Integer.toHexString(c1);

        $r14 = $r13.toUpperCase();

        $r15 = $r12.append($r14);

        $r16 = $r15.append(")");

        $r17 = $r16.toString();

        r3[3] = $r17;

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        r19 = $r18;

     label4:
        $r6 = org.gjt.sp.jedit.jEdit.getProperty("ioerror.write-encoding-error", r3);

        return $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static int getFirstGuiltyCharacterIndex(org.gjt.sp.jedit.io.Encoding, javax.swing.text.Segment) throws java.io.IOException
    {
        org.gjt.sp.jedit.io.Encoding r0;
        javax.swing.text.Segment r1;
        java.io.Writer r2;
        java.nio.charset.CharacterCodingException r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, i6;
        org.gjt.sp.jedit.bufferio.BufferIORequest$1 $r4;
        char[] $r5;
        char $c5;

        r0 := @parameter0;

        r1 := @parameter1;

        $i0 = r1.count;

        if $i0 >= 1 goto label1;

        return -1;

     label1:
        $i1 = r1.count;

        if $i1 != 1 goto label2;

        return 0;

     label2:
        $r4 = new org.gjt.sp.jedit.bufferio.BufferIORequest$1;

        specialinvoke $r4.<init>();

        r2 = r0.getTextWriter($r4);

(0)     i6 = 0;

     label3:
        i6 = Phi(i6 #0, i6 #1);

        $i2 = r1.count;

        if i6 >= $i2 goto label8;

     label4:
        $r5 = r1.array;

        $i3 = r1.offset;

        $i4 = $i3 + i6;

        $c5 = $r5[$i4];

        r2.write($c5);

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        return i6;

     label7:
        i6 = i6 + 1;

(1)     goto label3;

     label8:
        return -1;

        catch java.nio.charset.CharacterCodingException from label4 to label5 with label6;
    }
}
