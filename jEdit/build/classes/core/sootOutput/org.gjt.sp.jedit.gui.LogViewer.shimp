public class org.gjt.sp.jedit.gui.LogViewer extends javax.swing.JPanel implements org.gjt.sp.jedit.gui.DefaultFocusComponent
{
    private final org.gjt.sp.jedit.gui.LogViewer$ColorizerCellRenderer cellRenderer;
    private org.gjt.sp.jedit.gui.LogViewer$ListHandler listHandler;
    private final org.gjt.sp.jedit.gui.FilteredListModel listModel;
    private final javax.swing.JList list;
    private final javax.swing.JButton copy;
    private final javax.swing.JCheckBox tail;
    private final javax.swing.JTextField filter;
    private boolean tailIsOn;
    private static boolean showDebug;
    private static boolean showMessage;
    private static boolean showNotice;
    private static boolean showWarning;
    private static boolean showError;

    public void <init>()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.JPanel r1, $r7;
        java.lang.String r2, $r13, $r27, $r35, $r52, $r54;
        javax.swing.JScrollPane r3, $r48;
        java.awt.Dimension r4;
        java.awt.BorderLayout $r5;
        javax.swing.border.Border $r6;
        javax.swing.BoxLayout $r8;
        javax.swing.border.EmptyBorder $r9;
        java.awt.Component $r10, $r24, $r32;
        boolean $z0, $z1;
        javax.swing.JCheckBox $r12, $r15, $r22;
        org.gjt.sp.jedit.gui.LogViewer$ActionHandler $r14, $r28;
        javax.swing.JTextField $r16, $r17, $r20;
        javax.swing.text.Document $r18;
        org.gjt.sp.jedit.gui.LogViewer$1 $r19;
        javax.swing.JButton $r26, $r29, $r30, $r34, r58;
        org.gjt.sp.jedit.gui.LogViewer$2 $r36;
        org.gjt.sp.jedit.gui.LogViewer$MyFilteredListModel $r38;
        org.gjt.sp.jedit.gui.FilteredListModel $r39, $r41, $r43;
        org.gjt.sp.jedit.gui.LogViewer$LogList $r40;
        javax.swing.JList $r42, $r46, $r49;
        org.gjt.sp.jedit.gui.LogViewer$ColorizerCellRenderer $r44, $r45;
        int $i0, $i1;
        java.lang.String[] $r51, r56;
        javax.swing.JLabel $r53, r57;
        javax.swing.ListModel r59;

        r0 := @this;

        $r5 = new java.awt.BorderLayout;

        specialinvoke $r5.<init>();

        specialinvoke r0.<init>($r5);

        $r6 = javax.swing.BorderFactory.createEmptyBorder(0, 3, 0, 0);

        r0.setBorder($r6);

        $r7 = new javax.swing.JPanel;

        specialinvoke $r7.<init>();

        r1 = $r7;

        $r8 = new javax.swing.BoxLayout;

        specialinvoke $r8.<init>(r1, 0);

        r1.setLayout($r8);

        $r9 = new javax.swing.border.EmptyBorder;

        specialinvoke $r9.<init>(6, 0, 6, 0);

        r1.setBorder($r9);

        r2 = org.gjt.sp.jedit.jEdit.getSettingsDirectory();

        if r2 == null goto label1;

        $r51 = newarray (java.lang.String)[1];

        $r52 = org.gjt.sp.jedit.MiscUtilities.constructPath(r2, "activity.log");

        $r51[0] = $r52;

        r56 = $r51;

        $r53 = new javax.swing.JLabel;

        $r54 = org.gjt.sp.jedit.jEdit.getProperty("log-viewer.caption", r56);

        specialinvoke $r53.<init>($r54);

        r57 = $r53;

        r1.add(r57);

     label1:
        $r10 = javax.swing.Box.createHorizontalGlue();

        r1.add($r10);

        $z0 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.tail", 0);

        r0.tailIsOn = $z0;

        $r12 = new javax.swing.JCheckBox;

        $r13 = org.gjt.sp.jedit.jEdit.getProperty("log-viewer.tail.label");

        $z1 = r0.tailIsOn;

        specialinvoke $r12.<init>($r13, $z1);

        r0.tail = $r12;

        $r15 = r0.tail;

        $r14 = new org.gjt.sp.jedit.gui.LogViewer$ActionHandler;

        specialinvoke $r14.<init>(r0, null);

        $r15.addActionListener($r14);

        $r16 = new javax.swing.JTextField;

        specialinvoke $r16.<init>();

        r0.filter = $r16;

        $r17 = r0.filter;

        $r18 = $r17.getDocument();

        $r19 = new org.gjt.sp.jedit.gui.LogViewer$1;

        specialinvoke $r19.<init>(r0);

        $r18.addDocumentListener($r19);

        $r20 = r0.filter;

        r1.add($r20);

        $r22 = r0.tail;

        r1.add($r22);

        $r24 = javax.swing.Box.createHorizontalStrut(12);

        r1.add($r24);

        $r26 = new javax.swing.JButton;

        $r27 = org.gjt.sp.jedit.jEdit.getProperty("log-viewer.copy");

        specialinvoke $r26.<init>($r27);

        r0.copy = $r26;

        $r29 = r0.copy;

        $r28 = new org.gjt.sp.jedit.gui.LogViewer$ActionHandler;

        specialinvoke $r28.<init>(r0, null);

        $r29.addActionListener($r28);

        $r30 = r0.copy;

        r1.add($r30);

        $r32 = javax.swing.Box.createHorizontalStrut(6);

        r1.add($r32);

        $r34 = new javax.swing.JButton;

        $r35 = org.gjt.sp.jedit.jEdit.getProperty("log-viewer.settings.label");

        specialinvoke $r34.<init>($r35);

        r58 = $r34;

        $r36 = new org.gjt.sp.jedit.gui.LogViewer$2;

        specialinvoke $r36.<init>(r0);

        r58.addActionListener($r36);

        r1.add(r58);

        r59 = org.gjt.sp.util.Log.getLogListModel();

        $r38 = new org.gjt.sp.jedit.gui.LogViewer$MyFilteredListModel;

        specialinvoke $r38.<init>(r59);

        r0.listModel = $r38;

        $r39 = r0.listModel;

        r59.removeListDataListener($r39);

        $r40 = new org.gjt.sp.jedit.gui.LogViewer$LogList;

        $r41 = r0.listModel;

        specialinvoke $r40.<init>(r0, $r41);

        r0.list = $r40;

        $r43 = r0.listModel;

        $r42 = r0.list;

        $r43.setList($r42);

        $r44 = new org.gjt.sp.jedit.gui.LogViewer$ColorizerCellRenderer;

        specialinvoke $r44.<init>(null);

        r0.cellRenderer = $r44;

        $r46 = r0.list;

        $r45 = r0.cellRenderer;

        $r46.setCellRenderer($r45);

        specialinvoke r0.setFilter();

        r0.add("North", r1);

        $r48 = new javax.swing.JScrollPane;

        $r49 = r0.list;

        specialinvoke $r48.<init>($r49);

        r3 = $r48;

        r4 = r3.getPreferredSize();

        $i0 = r4.width;

        $i1 = java.lang.Math.min(600, $i0);

        r4.width = $i1;

        r3.setPreferredSize(r4);

        r0.add("Center", r3);

        specialinvoke r0.propertiesChanged();

        return;
    }

    public void setBounds(int, int, int, int)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        int i0, i1, i2, i3;

        r0 := @this;

        i0 := @parameter0;

        i1 := @parameter1;

        i2 := @parameter2;

        i3 := @parameter3;

        specialinvoke r0.setBounds(i0, i1, i2, i3);

        specialinvoke r0.scrollLaterIfRequired();

        return;
    }

    public void handlePropertiesChanged(org.gjt.sp.jedit.msg.PropertiesChanged)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        org.gjt.sp.jedit.msg.PropertiesChanged r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.propertiesChanged();

        return;
    }

    public void addNotify()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.ListModel r1;
        org.gjt.sp.jedit.gui.LogViewer$ColorizerCellRenderer $r2;
        org.gjt.sp.jedit.gui.FilteredListModel $r3;
        org.gjt.sp.jedit.gui.LogViewer$ListHandler $r4;
        boolean $z0;

        r0 := @this;

        specialinvoke r0.addNotify();

        $r2 = r0.cellRenderer;

        $r2.updateColors();

        r1 = org.gjt.sp.util.Log.getLogListModel();

        $r3 = r0.listModel;

        r1.addListDataListener($r3);

        $r4 = new org.gjt.sp.jedit.gui.LogViewer$ListHandler;

        specialinvoke $r4.<init>(r0, null);

        r0.listHandler = $r4;

        r1.addListDataListener($r4);

        $z0 = r0.tailIsOn;

        if $z0 == 0 goto label1;

        specialinvoke r0.scrollToTail();

     label1:
        org.gjt.sp.jedit.EditBus.addToBus(r0);

        return;
    }

    public void removeNotify()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.ListModel r1;
        org.gjt.sp.jedit.gui.FilteredListModel $r2;
        org.gjt.sp.jedit.gui.LogViewer$ListHandler $r3;

        r0 := @this;

        specialinvoke r0.removeNotify();

        r1 = org.gjt.sp.util.Log.getLogListModel();

        $r2 = r0.listModel;

        r1.removeListDataListener($r2);

        $r3 = r0.listHandler;

        r1.removeListDataListener($r3);

        r0.listHandler = null;

        org.gjt.sp.jedit.EditBus.removeFromBus(r0);

        return;
    }

    public void focusOnDefaultComponent()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.JList $r1;

        r0 := @this;

        $r1 = r0.list;

        $r1.requestFocus();

        return;
    }

    private void setFilter()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        java.lang.String r1, $r4, $r4_1, $r4_2;
        javax.swing.JTextField $r2;
        org.gjt.sp.jedit.gui.FilteredListModel $r3;
        int $i0;

        r0 := @this;

        $r2 = r0.filter;

        r1 = $r2.getText();

        $r3 = r0.listModel;

        $i0 = r1.length();

        if $i0 != 0 goto label1;

        $r4 = " ";

(0)     goto label2;

     label1:
(1)     $r4_1 = r1;

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        $r3.setFilter($r4_2);

        specialinvoke r0.scrollLaterIfRequired();

        return;
    }

    private void propertiesChanged()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        org.gjt.sp.jedit.gui.LogViewer$ColorizerCellRenderer $r1;
        javax.swing.JList $r2, $r4, $r5, $r6;
        java.awt.Font $r3, $r7;
        java.awt.FontMetrics $r8;
        int $i0;

        r0 := @this;

        $r1 = r0.cellRenderer;

        $r1.updateColors();

        $r2 = r0.list;

        $r3 = org.gjt.sp.jedit.jEdit.getFontProperty("view.font");

        $r2.setFont($r3);

        $r5 = r0.list;

        $r6 = r0.list;

        $r4 = r0.list;

        $r7 = $r4.getFont();

        $r8 = $r6.getFontMetrics($r7);

        $i0 = $r8.getHeight();

        $r5.setFixedCellHeight($i0);

        return;
    }

    private void scrollToTail()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        int i0, $i1;
        javax.swing.JList $r1, $r3;
        javax.swing.ListModel $r2;

        r0 := @this;

        $r1 = r0.list;

        $r2 = $r1.getModel();

        i0 = $r2.getSize();

        if i0 == 0 goto label1;

        $r3 = r0.list;

        $i1 = i0 - 1;

        $r3.ensureIndexIsVisible($i1);

     label1:
        return;
    }

    private void scrollLaterIfRequired()
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        boolean $z0;
        org.gjt.sp.jedit.gui.LogViewer$3 $r1;

        r0 := @this;

        $z0 = r0.tailIsOn;

        if $z0 == 0 goto label1;

        $r1 = new org.gjt.sp.jedit.gui.LogViewer$3;

        specialinvoke $r1.<init>(r0);

        org.gjt.sp.util.ThreadUtilities.runInDispatchThread($r1);

     label1:
        return;
    }

    static void access$100(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;

        r0 := @parameter0;

        specialinvoke r0.setFilter();

        return;
    }

    static void access$400(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;

        r0 := @parameter0;

        specialinvoke r0.scrollToTail();

        return;
    }

    static javax.swing.JCheckBox access$500(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.JCheckBox $r1;

        r0 := @parameter0;

        $r1 = r0.tail;

        return $r1;
    }

    static boolean access$602(org.gjt.sp.jedit.gui.LogViewer, boolean)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        boolean z0;

        r0 := @parameter0;

        z0 := @parameter1;

        r0.tailIsOn = z0;

        return z0;
    }

    static boolean access$600(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        boolean $z0;

        r0 := @parameter0;

        $z0 = r0.tailIsOn;

        return $z0;
    }

    static javax.swing.JButton access$700(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.JButton $r1;

        r0 := @parameter0;

        $r1 = r0.copy;

        return $r1;
    }

    static javax.swing.JList access$800(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;
        javax.swing.JList $r1;

        r0 := @parameter0;

        $r1 = r0.list;

        return $r1;
    }

    static void access$900(org.gjt.sp.jedit.gui.LogViewer)
    {
        org.gjt.sp.jedit.gui.LogViewer r0;

        r0 := @parameter0;

        specialinvoke r0.scrollLaterIfRequired();

        return;
    }

    static boolean access$1000()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.gui.LogViewer.showDebug;

        return $z0;
    }

    static boolean access$1100()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.gui.LogViewer.showMessage;

        return $z0;
    }

    static boolean access$1200()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.gui.LogViewer.showNotice;

        return $z0;
    }

    static boolean access$1300()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.gui.LogViewer.showWarning;

        return $z0;
    }

    static boolean access$1400()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.gui.LogViewer.showError;

        return $z0;
    }

    static boolean access$1002(boolean)
    {
        boolean z0;

        z0 := @parameter0;

        org.gjt.sp.jedit.gui.LogViewer.showDebug = z0;

        return z0;
    }

    static boolean access$1102(boolean)
    {
        boolean z0;

        z0 := @parameter0;

        org.gjt.sp.jedit.gui.LogViewer.showMessage = z0;

        return z0;
    }

    static boolean access$1202(boolean)
    {
        boolean z0;

        z0 := @parameter0;

        org.gjt.sp.jedit.gui.LogViewer.showNotice = z0;

        return z0;
    }

    static boolean access$1302(boolean)
    {
        boolean z0;

        z0 := @parameter0;

        org.gjt.sp.jedit.gui.LogViewer.showWarning = z0;

        return z0;
    }

    static boolean access$1402(boolean)
    {
        boolean z0;

        z0 := @parameter0;

        org.gjt.sp.jedit.gui.LogViewer.showError = z0;

        return z0;
    }

    static void <clinit>()
    {
        boolean $z0, $z1, $z2, $z3, $z4;

        $z0 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.message.debug", 1);

        org.gjt.sp.jedit.gui.LogViewer.showDebug = $z0;

        $z1 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.message.message", 1);

        org.gjt.sp.jedit.gui.LogViewer.showMessage = $z1;

        $z2 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.message.notice", 1);

        org.gjt.sp.jedit.gui.LogViewer.showNotice = $z2;

        $z3 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.message.warning", 1);

        org.gjt.sp.jedit.gui.LogViewer.showWarning = $z3;

        $z4 = org.gjt.sp.jedit.jEdit.getBooleanProperty("log-viewer.message.error", 1);

        org.gjt.sp.jedit.gui.LogViewer.showError = $z4;

        return;
    }
}
