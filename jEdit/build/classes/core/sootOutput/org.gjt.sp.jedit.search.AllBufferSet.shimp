public class org.gjt.sp.jedit.search.AllBufferSet extends org.gjt.sp.jedit.search.BufferListSet
{
    private java.lang.String glob;
    private org.gjt.sp.jedit.View view;

    public void <init>(java.lang.String, org.gjt.sp.jedit.View)
    {
        org.gjt.sp.jedit.search.AllBufferSet r0;
        java.lang.String r1;
        org.gjt.sp.jedit.View r2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.glob = r1;

        r0.view = r2;

        return;
    }

    public org.gjt.sp.jedit.View getView()
    {
        org.gjt.sp.jedit.search.AllBufferSet r0;
        org.gjt.sp.jedit.View $r1;

        r0 := @this;

        $r1 = r0.view;

        return $r1;
    }

    public java.lang.String getFileFilter()
    {
        org.gjt.sp.jedit.search.AllBufferSet r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.glob;

        return $r1;
    }

    public java.lang.String getCode()
    {
        org.gjt.sp.jedit.search.AllBufferSet r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        java.lang.String $r3, $r4, $r7;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("new AllBufferSet(\"");

        $r3 = r0.glob;

        $r4 = org.gjt.sp.util.StandardUtilities.charsToEscapes($r3);

        $r5 = $r2.append($r4);

        $r6 = $r5.append("\", view)");

        $r7 = $r6.toString();

        return $r7;
    }

    protected java.lang.String[] _getFiles(java.awt.Component)
    {
        org.gjt.sp.jedit.search.AllBufferSet r0;
        java.awt.Component r1;
        org.gjt.sp.jedit.Buffer[] r2, r23;
        java.util.ArrayList r3, $r7;
        java.util.regex.Pattern r4;
        int i0, $i1, $i2, i3;
        org.gjt.sp.jedit.Buffer r5;
        org.gjt.sp.jedit.View $r6;
        java.lang.String $r8, $r9, $r13, $r15, $r19, $r21;
        java.lang.String[] $r10, $r12;
        java.lang.Object[] $r11;
        java.util.regex.Matcher $r14;
        boolean $z0;
        java.lang.Exception $r16, r22;
        java.lang.StringBuilder $r17, $r18, $r20;

        r0 := @this;

        r1 := @parameter0;

        $r6 = r0.view;

        r2 = $r6.getBuffers();

        $r7 = new java.util.ArrayList;

        $i1 = lengthof r2;

        specialinvoke $r7.<init>($i1);

        r3 = $r7;

     label1:
        $r8 = r0.glob;

        $r9 = org.gjt.sp.util.StandardUtilities.globToRE($r8);

        r4 = java.util.regex.Pattern.compile($r9, 2);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

        r22 = $r16;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r18 = $r17.append("Error compiling Glob Pattern: ");

        $r19 = r0.glob;

        $r20 = $r18.append($r19);

        $r21 = $r20.toString();

        org.gjt.sp.util.Log.log(9, r0, $r21, r22);

        return null;

     label4:
        r23 = r2;

        i0 = lengthof r23;

(0)     i3 = 0;

     label5:
        i3 = Phi(i3 #0, i3 #1);

        if i3 >= i0 goto label7;

        r5 = r23[i3];

        $r13 = r5.getName();

        $r14 = r4.matcher($r13);

        $z0 = $r14.matches();

        if $z0 == 0 goto label6;

        $r15 = r5.getPath();

        r3.add($r15);

     label6:
        i3 = i3 + 1;

(1)     goto label5;

     label7:
        $i2 = r3.size();

        $r10 = newarray (java.lang.String)[$i2];

        $r11 = r3.toArray($r10);

        $r12 = (java.lang.String[]) $r11;

        return $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
