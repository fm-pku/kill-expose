class org.gjt.sp.jedit.print.BufferPrintable extends java.lang.Object implements java.awt.print.Printable
{
    private static java.awt.Color headerColor;
    private static java.awt.Color headerTextColor;
    private static java.awt.Color footerColor;
    private static java.awt.Color footerTextColor;
    private static java.awt.Color lineNumberColor;
    private static java.awt.Color textColor;
    private java.awt.print.PrinterJob job;
    private java.lang.Object format;
    private org.gjt.sp.jedit.View view;
    private org.gjt.sp.jedit.Buffer buffer;
    private java.awt.Font font;
    private org.gjt.sp.jedit.syntax.SyntaxStyle[] styles;
    private boolean header;
    private boolean footer;
    private boolean lineNumbers;
    private int currentPage;
    private int currentPageStart;
    private int currentPhysicalLine;
    private boolean end;
    private java.awt.font.LineMetrics lm;
    private final java.util.List lineList;
    private java.awt.font.FontRenderContext frc;
    private org.gjt.sp.jedit.syntax.DisplayTokenHandler tokenHandler;

    void <init>(java.awt.print.PrinterJob, java.lang.Object, org.gjt.sp.jedit.View, org.gjt.sp.jedit.Buffer, java.awt.Font, boolean, boolean, boolean, boolean)
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.awt.print.PrinterJob r1;
        java.lang.Object r2;
        org.gjt.sp.jedit.View r3;
        org.gjt.sp.jedit.Buffer r4;
        java.awt.Font r5, $r27;
        boolean z0, z1, z2, z3, $z4;
        org.gjt.sp.jedit.syntax.SyntaxStyle r6, $r9, $r19, $r21, $r26;
        java.lang.String $r7;
        int $i0, $i1, i2;
        org.gjt.sp.jedit.syntax.SyntaxStyle[] $r8, $r11, $r12, $r15, $r20, $r22, $r25;
        java.awt.Color $r10, $r16, $r17, $r18, $r23, $r24;
        java.util.ArrayList $r13;
        org.gjt.sp.jedit.syntax.DisplayTokenHandler $r14;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        r5 := @parameter4;

        z0 := @parameter5;

        z1 := @parameter6;

        z2 := @parameter7;

        z3 := @parameter8;

        specialinvoke r0.<init>();

        r0.job = r1;

        r0.format = r2;

        r0.view = r3;

        r0.buffer = r4;

        r0.font = r5;

        r0.header = z0;

        r0.footer = z1;

        r0.lineNumbers = z2;

        $r7 = org.gjt.sp.jedit.jEdit.getProperty("print.font");

        $i0 = org.gjt.sp.jedit.jEdit.getIntegerProperty("print.fontsize", 10);

        $r8 = org.gjt.sp.util.SyntaxUtilities.loadStyles($r7, $i0, z3);

        r0.styles = $r8;

        $r11 = r0.styles;

        $r9 = new org.gjt.sp.jedit.syntax.SyntaxStyle;

        $r10 = org.gjt.sp.jedit.print.BufferPrintable.textColor;

        specialinvoke $r9.<init>($r10, null, r5);

        $r11[0] = $r9;

(0)     i2 = 0;

     label1:
        i2 = Phi(i2 #0, i2 #1);

        $r12 = r0.styles;

        $i1 = lengthof $r12;

        if i2 >= $i1 goto label3;

        $r15 = r0.styles;

        r6 = $r15[i2];

        $r16 = r6.getForegroundColor();

        $r17 = java.awt.Color.WHITE;

        $z4 = $r16.equals($r17);

        if $z4 == 0 goto label2;

        $r18 = r6.getBackgroundColor();

        if $r18 != null goto label2;

        $r22 = r0.styles;

        $r19 = new org.gjt.sp.jedit.syntax.SyntaxStyle;

        $r23 = java.awt.Color.BLACK;

        $r20 = r0.styles;

        $r21 = $r20[i2];

        $r24 = $r21.getBackgroundColor();

        $r25 = r0.styles;

        $r26 = $r25[i2];

        $r27 = $r26.getFont();

        specialinvoke $r19.<init>($r23, $r24, $r27);

        $r22[i2] = $r19;

     label2:
        i2 = i2 + 1;

(1)     goto label1;

     label3:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<init>();

        r0.lineList = $r13;

        $r14 = new org.gjt.sp.jedit.syntax.DisplayTokenHandler;

        specialinvoke $r14.<init>();

        r0.tokenHandler = $r14;

        return;
    }

    public void print()
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.lang.String[] r1, $r13;
        java.lang.Object $r2, $r7;
        java.lang.Class[] $r3;
        java.lang.Class $r4, $r5;
        java.lang.Object[] $r6;
        java.awt.print.PrinterJob $r8, $r10;
        java.awt.print.PrinterAbortException $r11, r17;
        java.lang.Exception $r12, r18;
        java.lang.String $r14;
        org.gjt.sp.jedit.print.BufferPrintable$1 $r15;
        java.lang.reflect.Method r16;

        r0 := @this;

     label1:
        $r2 = r0.format;

        if $r2 != null goto label2;

        $r10 = r0.job;

        $r10.print();

        goto label3;

     label2:
        $r4 = class "java/awt/print/PrinterJob";

        $r3 = newarray (java.lang.Class)[1];

        $r5 = java.lang.Class.forName("javax.print.attribute.PrintRequestAttributeSet");

        $r3[0] = $r5;

        r16 = $r4.getMethod("print", $r3);

        $r8 = r0.job;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = r0.format;

        $r6[0] = $r7;

        r16.invoke($r8, $r6);

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r17 = $r11;

        org.gjt.sp.util.Log.log(1, r0, r17);

        goto label6;

     label5:
        $r12 := @caughtexception;

        r18 = $r12;

        org.gjt.sp.util.Log.log(9, r0, r18);

        $r13 = newarray (java.lang.String)[1];

        $r14 = r18.toString();

        $r13[0] = $r14;

        r1 = $r13;

        $r15 = new org.gjt.sp.jedit.print.BufferPrintable$1;

        specialinvoke $r15.<init>(r0, r1);

        javax.swing.SwingUtilities.invokeLater($r15);

     label6:
        return;

        catch java.awt.print.PrinterAbortException from label1 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    public int print(java.awt.Graphics, java.awt.print.PageFormat, int) throws java.awt.print.PrinterException
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.awt.Graphics r1;
        java.awt.print.PageFormat r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        java.awt.font.FontRenderContext $r3, $r33, $r36;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r34, $r35, $r37;
        java.lang.String $r7, $r11, $r15, $r19, $r23, $r27, $r31, $r38;
        boolean $z0;
        java.awt.Graphics2D $r32;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        i0 := @parameter2;

        $r3 = r0.frc;

        if $r3 != null goto label1;

        $r32 = (java.awt.Graphics2D) r1;

        $r33 = $r32.getFontRenderContext();

        r0.frc = $r33;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<init>();

        $r35 = $r34.append("Font render context is ");

        $r36 = r0.frc;

        $r37 = $r35.append($r36);

        $r38 = $r37.toString();

        org.gjt.sp.util.Log.log(1, r0, $r38);

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r5 = $r4.append("Asked to print page ");

        $r6 = $r5.append(i0);

        $r7 = $r6.toString();

        org.gjt.sp.util.Log.log(1, r0, $r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = $r8.append("Current page is ");

        $i1 = r0.currentPage;

        $r10 = $r9.append($i1);

        $r11 = $r10.toString();

        org.gjt.sp.util.Log.log(1, r0, $r11);

        $i2 = r0.currentPage;

(0)     if i0 <= $i2 goto label4;

(1)     i15 = r0.currentPage;

     label2:
        i15 = Phi(i15 #1, i15 #2);

        if i15 >= i0 goto label3;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        $r29 = $r28.append("Current physical line is now ");

        $i13 = r0.currentPageStart;

        $r30 = $r29.append($i13);

        $r31 = $r30.toString();

        org.gjt.sp.util.Log.log(1, r0, $r31);

        $i14 = r0.currentPageStart;

        r0.currentPhysicalLine = $i14;

        specialinvoke r0.printPage(r1, r2, i15, 1);

        i15 = i15 + 1;

(2)     goto label2;

     label3:
        $i11 = i0 - 1;

        r0.currentPage = $i11;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<init>();

        $r25 = $r24.append("Current page is now ");

        $i12 = r0.currentPage;

        $r26 = $r25.append($i12);

        $r27 = $r26.toString();

(3)     org.gjt.sp.util.Log.log(1, r0, $r27);

     label4:
        i15 = Phi(i15 #0, i15 #3);

        $i3 = r0.currentPage;

        $i4 = $i3 + 1;

        if i0 != $i4 goto label6;

        $z0 = r0.end;

        if $z0 == 0 goto label5;

        org.gjt.sp.util.Log.log(1, r0, "The end");

        return 1;

     label5:
        $i8 = r0.currentPhysicalLine;

        r0.currentPageStart = $i8;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        $r17 = $r16.append("#2 - Current physical line is now ");

        $i9 = r0.currentPageStart;

        $r18 = $r17.append($i9);

        $r19 = $r18.toString();

        org.gjt.sp.util.Log.log(1, r0, $r19);

        r0.currentPage = i0;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<init>();

        $r21 = $r20.append("#2 - Current page is now ");

        $i10 = r0.currentPage;

        $r22 = $r21.append($i10);

        $r23 = $r22.toString();

        org.gjt.sp.util.Log.log(1, r0, $r23);

        goto label7;

     label6:
        $i5 = r0.currentPage;

        if i0 != $i5 goto label7;

        $i6 = r0.currentPageStart;

        r0.currentPhysicalLine = $i6;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r13 = $r12.append("#3 - Current physical line is now ");

        $i7 = r0.currentPageStart;

        $r14 = $r13.append($i7);

        $r15 = $r14.toString();

        org.gjt.sp.util.Log.log(1, r0, $r15);

     label7:
        specialinvoke r0.printPage(r1, r2, i0, 1);

        return 0;
    }

    private void printPage(java.awt.Graphics, java.awt.print.PageFormat, int, boolean)
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.awt.Graphics r1;
        java.awt.print.PageFormat r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, i23;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, z10;
        java.awt.Graphics2D r3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, d20, d21, d22, d23, d24, d25, d19_1, d20_1, d20_2, d19_2, d20_3, d20_4;
        org.gjt.sp.jedit.print.BufferPrintable$PrintTabExpander r4, $r32;
        java.util.Iterator r5;
        org.gjt.sp.jedit.syntax.Chunk r6, r7;
        java.awt.FontMetrics r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r36, $r37, $r39, $r59, $r60, $r61;
        java.lang.String $r15, $r22, $r28, $r40, $r57, $r62;
        java.awt.Font $r16, $r30, $r34, $r55, $r69;
        java.awt.font.FontRenderContext $r29, $r33, $r44, $r68;
        java.awt.geom.Rectangle2D $r31, $r70;
        java.awt.font.LineMetrics $r35, $r38, $r50, $r54, $r58;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f9, $f10, $f12, $f13, $f14;
        org.gjt.sp.jedit.Buffer $r41, $r48, $r67;
        java.util.List $r42, $r43, $r49, $r51, $r52, $r63;
        org.gjt.sp.jedit.syntax.SyntaxStyle[] $r45;
        org.gjt.sp.jedit.syntax.DisplayTokenHandler $r46, $r47;
        byte $b6;
        java.lang.Object $r53;
        java.awt.Color $r56;
        org.gjt.sp.jedit.View $r64;
        org.gjt.sp.jedit.textarea.JEditTextArea $r65;
        org.gjt.sp.jedit.textarea.DisplayManager $r66;
        char[] r71, r72;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        i0 := @parameter2;

        z0 := @parameter3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r10 = $r9.append("printPage(");

        $r11 = $r10.append(i0);

        $r12 = $r11.append(44);

        $r13 = $r12.append(z0);

        $r14 = $r13.append(41);

        $r15 = $r14.toString();

        org.gjt.sp.util.Log.log(1, r0, $r15);

        r3 = (java.awt.Graphics2D) r1;

        $r16 = r0.font;

        r3.setFont($r16);

        d0 = r2.getImageableX();

        d19 = r2.getImageableY();

        d1 = r2.getImageableWidth();

        d20 = r2.getImageableHeight();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r18 = $r17.append("#1 - Page dimensions: ");

        $r19 = $r18.append(d1);

        $r20 = $r19.append(120);

        $r21 = $r20.append(d20);

        $r22 = $r21.toString();

        org.gjt.sp.util.Log.log(1, r0, $r22);

        $z1 = r0.header;

(0)     if $z1 == 0 goto label01;

        d21 = specialinvoke r0.paintHeader(r3, d0, d19, d1, z0);

        d19_1 = d19 + d21;

(1)     d20_1 = d20 - d21;

     label01:
        d20_2 = Phi(d20 #0, d20_1 #1);

        d19_2 = Phi(d19 #0, d19_1 #1);

        $z2 = r0.footer;

(2)     if $z2 == 0 goto label02;

        d22 = specialinvoke r0.paintFooter(r3, d0, d19_2, d1, d20_2, i0, z0);

(3)     d20_3 = d20_2 - d22;

     label02:
        d20_4 = Phi(d20_2 #2, d20_3 #3);

        z10 = org.gjt.sp.jedit.jEdit.getBooleanProperty("print.glyphVector");

        $z3 = r0.lineNumbers;

        if $z3 == 0 goto label05;

        $r67 = r0.buffer;

        $i16 = $r67.getLineCount();

        $i17 = $i16 + 1;

        $d14 = (double) $i17;

        $d15 = java.lang.Math.log($d14);

        $d16 = java.lang.Math.log(10.0);

        $d17 = $d15 / $d16;

        $d18 = java.lang.Math.ceil($d17);

        $i18 = (int) $d18;

        i20 = $i18 + 1;

        r71 = newarray (char)[i20];

(4)     i21 = 0;

     label03:
        i21 = Phi(i21 #4, i21 #5);

        d20 = Phi(d20_4 #4, d20 #5);

        d19 = Phi(d19_2 #4, d19 #5);

        $i19 = lengthof r71;

        if i21 >= $i19 goto label04;

        r71[i21] = 32;

        i21 = i21 + 1;

(5)     goto label03;

     label04:
        $r69 = r0.font;

        $r68 = r0.frc;

        $r70 = $r69.getStringBounds(r71, 0, i20, $r68);

        d23 = $r70.getWidth();

(6)     goto label06;

     label05:
(7)     d23 = 0.0;

     label06:
        i21 = Phi(i21 #6, i21 #7);

        d23 = Phi(d23 #6, d23 #7);

        d20 = Phi(d20 #6, d20_4 #7);

        d19 = Phi(d19 #6, d19_2 #7);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<init>();

        $r24 = $r23.append("#2 - Page dimensions: ");

        $d2 = d1 - d23;

        $r25 = $r24.append($d2);

        $r26 = $r25.append(120);

        $r27 = $r26.append(d20);

        $r28 = $r27.toString();

        org.gjt.sp.util.Log.log(1, r0, $r28);

        i22 = org.gjt.sp.jedit.jEdit.getIntegerProperty("print.tabSize", 8);

        r72 = newarray (char)[i22];

(8)     i23 = 0;

     label07:
        i23 = Phi(i23 #8, i23 #9);

        i21 = Phi(i21 #8, i21 #9);

        d23 = Phi(d23 #8, d23 #9);

        d20 = Phi(d20 #8, d20 #9);

        d19 = Phi(d19 #8, d19 #9);

        $i1 = lengthof r72;

        if i23 >= $i1 goto label08;

        r72[i23] = 32;

        i23 = i23 + 1;

(9)     goto label07;

     label08:
        $r30 = r0.font;

        $r29 = r0.frc;

        $r31 = $r30.getStringBounds(r72, 0, i22, $r29);

        d24 = $r31.getWidth();

        $r32 = new org.gjt.sp.jedit.print.BufferPrintable$PrintTabExpander;

        specialinvoke $r32.<init>(d24);

        r4 = $r32;

        $r34 = r0.font;

        $r33 = r0.frc;

        $r35 = $r34.getLineMetrics("gGyYX", $r33);

        r0.lm = $r35;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<init>();

        $r37 = $r36.append("Line height is ");

        $r38 = r0.lm;

        $f0 = $r38.getHeight();

        $r39 = $r37.append($f0);

        $r40 = $r39.toString();

        org.gjt.sp.util.Log.log(1, r0, $r40);

(10)    d25 = 0.0;

     label09:
        i23 = Phi(i23 #10, i23 #11, i23 #14);

        i21 = Phi(i21 #10, i21 #11, i21 #14);

        d23 = Phi(d23 #10, d23 #11, d23 #14);

        d20 = Phi(d20 #10, d20 #11, d20 #14);

        d25 = Phi(d25 #10, d25 #11, d25 #14);

        d19 = Phi(d19 #10, d19 #11, d19 #14);

        $i2 = r0.currentPhysicalLine;

        $r41 = r0.buffer;

        $i3 = $r41.getLineCount();

        if $i2 != $i3 goto label10;

        org.gjt.sp.util.Log.log(1, r0, "Finished buffer");

        r0.end = 1;

        goto label18;

     label10:
        $z4 = org.gjt.sp.jedit.jEdit.getBooleanProperty("print.folds", 1);

        if $z4 != 0 goto label11;

        $r64 = r0.view;

        $r65 = $r64.getTextArea();

        $r66 = $r65.getDisplayManager();

        $i13 = r0.currentPhysicalLine;

        $z9 = $r66.isLineVisible($i13);

        if $z9 != 0 goto label11;

        org.gjt.sp.util.Log.log(1, r0, "Skipping invisible line");

        $i14 = r0.currentPhysicalLine;

        $i15 = $i14 + 1;

        r0.currentPhysicalLine = $i15;

(11)    goto label09;

     label11:
        $r42 = r0.lineList;

        $r42.clear();

        $r46 = r0.tokenHandler;

        $r45 = r0.styles;

        $r44 = r0.frc;

        $r43 = r0.lineList;

        $d3 = d1 - d23;

        $f1 = (float) $d3;

        $r46.init($r45, $r44, r4, $r43, $f1, -1);

        $r48 = r0.buffer;

        $i4 = r0.currentPhysicalLine;

        $r47 = r0.tokenHandler;

        $r48.markTokens($i4, $r47);

        $r49 = r0.lineList;

        $z5 = $r49.isEmpty();

        if $z5 == 0 goto label12;

        $r63 = r0.lineList;

        $r63.add(null);

     label12:
        $r50 = r0.lm;

        $f2 = $r50.getHeight();

        $r51 = r0.lineList;

        $i5 = $r51.size();

        $f3 = (float) $i5;

        $f4 = $f2 * $f3;

        $d4 = (double) $f4;

        $d5 = d25 + $d4;

        $b6 = $d5 cmpl d20;

        if $b6 < 0 goto label13;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<init>();

        $r60 = $r59.append("Finished page before line ");

        $i12 = r0.currentPhysicalLine;

        $r61 = $r60.append($i12);

        $r62 = $r61.toString();

        org.gjt.sp.util.Log.log(1, r0, $r62);

        goto label18;

     label13:
        $z6 = r0.lineNumbers;

        if $z6 == 0 goto label14;

        if z0 == 0 goto label14;

        $r55 = r0.font;

        r3.setFont($r55);

        $r56 = org.gjt.sp.jedit.print.BufferPrintable.lineNumberColor;

        r3.setColor($r56);

        $i10 = r0.currentPhysicalLine;

        $i11 = $i10 + 1;

        $r57 = java.lang.String.valueOf($i11);

        $f12 = (float) d0;

        $d11 = d19 + d25;

        $r58 = r0.lm;

        $f13 = $r58.getHeight();

        $d12 = (double) $f13;

        $d13 = $d11 + $d12;

        $f14 = (float) $d13;

        r3.drawString($r57, $f12, $f14);

     label14:
        $r52 = r0.lineList;

(12)    r5 = $r52.iterator();

     label15:
        i23 = Phi(i23 #12, i23 #13);

        i21 = Phi(i21 #12, i21 #13);

        d23 = Phi(d23 #12, d23 #13);

        d20 = Phi(d20 #12, d20 #13);

        d25 = Phi(d25 #12, d25 #13);

        d19 = Phi(d19 #12, d19 #13);

        $z7 = r5.hasNext();

        if $z7 == 0 goto label17;

        $r53 = r5.next();

        r6 = (org.gjt.sp.jedit.syntax.Chunk) $r53;

        $r54 = r0.lm;

        $f5 = $r54.getHeight();

        $d6 = (double) $f5;

        d25 = d25 + $d6;

        r7 = r6;

        if r7 == null goto label16;

        if z0 == 0 goto label16;

        r8 = r3.getFontMetrics();

        $d7 = d0 + d23;

        $f6 = (float) $d7;

        $d8 = d19 + d25;

        $f7 = (float) $d8;

        $i9 = r8.getHeight();

        org.gjt.sp.jedit.syntax.Chunk.paintChunkBackgrounds(r7, r3, $f6, $f7, $i9);

        $d9 = d0 + d23;

        $f10 = (float) $d9;

        $d10 = d19 + d25;

        $f9 = (float) $d10;

        org.gjt.sp.jedit.syntax.Chunk.paintChunkList(r7, r3, $f10, $f9, z10);

     label16:
(13)    goto label15;

     label17:
        $i7 = r0.currentPhysicalLine;

        $i8 = $i7 + 1;

        r0.currentPhysicalLine = $i8;

(14)    goto label09;

     label18:
        return;
    }

    private double paintHeader(java.awt.Graphics2D, double, double, double, boolean)
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.awt.Graphics2D r1;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        boolean z0;
        java.lang.String r2, $r8;
        java.awt.font.FontRenderContext r3;
        java.awt.geom.Rectangle2D r4;
        java.awt.geom.Rectangle2D$Double r5, $r12;
        java.lang.String[] $r6;
        org.gjt.sp.jedit.Buffer $r7;
        java.awt.Font $r9, $r11;
        java.awt.font.LineMetrics $r10, $r15;
        java.awt.Color $r13, $r14;
        float $f0, $f1, $f2;

        r0 := @this;

        r1 := @parameter0;

        d0 := @parameter1;

        d1 := @parameter2;

        d2 := @parameter3;

        z0 := @parameter4;

        $r6 = newarray (java.lang.String)[1];

        $r7 = r0.buffer;

        $r8 = $r7.getName();

        $r6[0] = $r8;

        r2 = org.gjt.sp.jedit.jEdit.getProperty("print.headerText", $r6);

        r3 = r1.getFontRenderContext();

        $r9 = r0.font;

        $r10 = $r9.getLineMetrics(r2, r3);

        r0.lm = $r10;

        $r11 = r0.font;

        r4 = $r11.getStringBounds(r2, r3);

        $r12 = new java.awt.geom.Rectangle2D$Double;

        $d3 = r4.getHeight();

        specialinvoke $r12.<init>(d0, d1, d2, $d3);

        r5 = $r12;

        if z0 == 0 goto label1;

        $r13 = org.gjt.sp.jedit.print.BufferPrintable.headerColor;

        r1.setColor($r13);

        r1.fill(r5);

        $r14 = org.gjt.sp.jedit.print.BufferPrintable.headerTextColor;

        r1.setColor($r14);

        $d5 = r4.getWidth();

        $d6 = d2 - $d5;

        $d7 = $d6 / 2.0;

        $d8 = d0 + $d7;

        $f0 = (float) $d8;

        $r15 = r0.lm;

        $f1 = $r15.getAscent();

        $d9 = (double) $f1;

        $d10 = d1 + $d9;

        $f2 = (float) $d10;

        r1.drawString(r2, $f0, $f2);

     label1:
        $d4 = r5.getHeight();

        return $d4;
    }

    private double paintFooter(java.awt.Graphics2D, double, double, double, double, int, boolean)
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        java.awt.Graphics2D r1;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        int i0, $i1;
        boolean z0;
        java.lang.String r2;
        java.awt.font.FontRenderContext r3;
        java.awt.geom.Rectangle2D r4;
        java.awt.geom.Rectangle2D$Double r5, $r12;
        java.lang.Object[] $r6;
        java.util.Date $r7;
        java.lang.Integer $r8;
        java.awt.Font $r9, $r11;
        java.awt.font.LineMetrics $r10, $r15;
        java.awt.Color $r13, $r14;
        float $f0, $f1, $f2;

        r0 := @this;

        r1 := @parameter0;

        d0 := @parameter1;

        d1 := @parameter2;

        d2 := @parameter3;

        d3 := @parameter4;

        i0 := @parameter5;

        z0 := @parameter6;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = new java.util.Date;

        specialinvoke $r7.<init>();

        $r6[0] = $r7;

        $i1 = i0 + 1;

        $r8 = java.lang.Integer.valueOf($i1);

        $r6[1] = $r8;

        r2 = org.gjt.sp.jedit.jEdit.getProperty("print.footerText", $r6);

        r3 = r1.getFontRenderContext();

        $r9 = r0.font;

        $r10 = $r9.getLineMetrics(r2, r3);

        r0.lm = $r10;

        $r11 = r0.font;

        r4 = $r11.getStringBounds(r2, r3);

        $r12 = new java.awt.geom.Rectangle2D$Double;

        $d4 = d1 + d3;

        $d5 = r4.getHeight();

        $d6 = $d4 - $d5;

        $d7 = r4.getHeight();

        specialinvoke $r12.<init>(d0, $d6, d2, $d7);

        r5 = $r12;

        if z0 == 0 goto label1;

        $r13 = org.gjt.sp.jedit.print.BufferPrintable.footerColor;

        r1.setColor($r13);

        r1.fill(r5);

        $r14 = org.gjt.sp.jedit.print.BufferPrintable.footerTextColor;

        r1.setColor($r14);

        $d9 = r4.getWidth();

        $d10 = d2 - $d9;

        $d11 = $d10 / 2.0;

        $d12 = d0 + $d11;

        $f0 = (float) $d12;

        $d13 = d1 + d3;

        $d14 = r4.getHeight();

        $d15 = $d13 - $d14;

        $r15 = r0.lm;

        $f1 = $r15.getAscent();

        $d16 = (double) $f1;

        $d17 = $d15 + $d16;

        $f2 = (float) $d17;

        r1.drawString(r2, $f0, $f2);

     label1:
        $d8 = r5.getHeight();

        return $d8;
    }

    static org.gjt.sp.jedit.View access$000(org.gjt.sp.jedit.print.BufferPrintable)
    {
        org.gjt.sp.jedit.print.BufferPrintable r0;
        org.gjt.sp.jedit.View $r1;

        r0 := @parameter0;

        $r1 = r0.view;

        return $r1;
    }

    static void <clinit>()
    {
        java.awt.Color $r0, $r1, $r2, $r3, $r4, $r5;

        $r0 = java.awt.Color.lightGray;

        org.gjt.sp.jedit.print.BufferPrintable.headerColor = $r0;

        $r1 = java.awt.Color.black;

        org.gjt.sp.jedit.print.BufferPrintable.headerTextColor = $r1;

        $r2 = java.awt.Color.lightGray;

        org.gjt.sp.jedit.print.BufferPrintable.footerColor = $r2;

        $r3 = java.awt.Color.black;

        org.gjt.sp.jedit.print.BufferPrintable.footerTextColor = $r3;

        $r4 = java.awt.Color.gray;

        org.gjt.sp.jedit.print.BufferPrintable.lineNumberColor = $r4;

        $r5 = java.awt.Color.black;

        org.gjt.sp.jedit.print.BufferPrintable.textColor = $r5;

        return;
    }
}
