public class org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource extends org.gjt.sp.jedit.bsh.classpath.BshClassPath$ClassSource
{

    void <init>(java.io.File)
    {
        org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource r0;
        java.io.File r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.source = r1;

        return;
    }

    public java.io.File getDir()
    {
        org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource r0;
        java.lang.Object $r1;
        java.io.File $r2;

        r0 := @this;

        $r1 = r0.source;

        $r2 = (java.io.File) $r1;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object $r3;
        java.lang.String $r5;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("Dir: ");

        $r3 = r0.source;

        $r4 = $r2.append($r3);

        $r5 = $r4.toString();

        return $r5;
    }

    public byte[] getCode(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource r0;
        java.lang.String r1;
        java.io.File $r2;
        byte[] $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.getDir();

        $r3 = org.gjt.sp.jedit.bsh.classpath.BshClassPath$DirClassSource.readBytesFromFile($r2, r1);

        return $r3;
    }

    public static byte[] readBytesFromFile(java.io.File, java.lang.String)
    {
        java.io.File r0, r3, $r10;
        java.lang.String r1, r2, $r7, $r18;
        byte[] r4;
        java.io.DataInputStream r5, $r12;
        java.lang.StringBuilder $r6, $r8, $r9, $r15, $r16, $r17;
        char $c0;
        boolean $z0;
        java.io.FileInputStream $r11, r19;
        long $l1;
        int $i2;
        java.io.IOException $r13, r20;
        java.lang.RuntimeException $r14;

        r0 := @parameter0;

        r1 := @parameter1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $c0 = java.io.File.separatorChar;

        $r7 = r1.replace(46, $c0);

        $r8 = $r6.append($r7);

        $r9 = $r8.append(".class");

        r2 = $r9.toString();

        $r10 = new java.io.File;

        specialinvoke $r10.<init>(r0, r2);

        r3 = $r10;

        if r3 == null goto label1;

        $z0 = r3.exists();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        $r11 = new java.io.FileInputStream;

        specialinvoke $r11.<init>(r3);

        r19 = $r11;

        $r12 = new java.io.DataInputStream;

        specialinvoke $r12.<init>(r19);

        r5 = $r12;

        $l1 = r3.length();

        $i2 = (int) $l1;

        r4 = newarray (byte)[$i2];

        r5.readFully(r4);

        r5.close();

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r20 = $r13;

        $r14 = new java.lang.RuntimeException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<init>();

        $r16 = $r15.append("Couldn\'t load file: ");

        $r17 = $r16.append(r3);

        $r18 = $r17.toString();

        specialinvoke $r14.<init>($r18);

        throw $r14;

     label5:
        return r4;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
