public abstract class org.gjt.sp.jedit.bsh.ReflectManager extends java.lang.Object
{
    private static org.gjt.sp.jedit.bsh.ReflectManager rfm;

    public void <init>()
    {
        org.gjt.sp.jedit.bsh.ReflectManager r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static org.gjt.sp.jedit.bsh.ReflectManager getReflectManager() throws org.gjt.sp.jedit.bsh.Capabilities$Unavailable
    {
        java.lang.Class r0;
        java.lang.Exception r1, $r6;
        org.gjt.sp.jedit.bsh.ReflectManager $r2, $r3, $r5;
        java.lang.Object $r4;
        org.gjt.sp.jedit.bsh.Capabilities$Unavailable $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;

        $r2 = org.gjt.sp.jedit.bsh.ReflectManager.rfm;

        if $r2 != null goto label4;

     label1:
        r0 = java.lang.Class.forName("org.gjt.sp.jedit.bsh.reflect.ReflectManagerImpl");

        $r4 = r0.newInstance();

        $r5 = (org.gjt.sp.jedit.bsh.ReflectManager) $r4;

        org.gjt.sp.jedit.bsh.ReflectManager.rfm = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r1 = $r6;

        $r7 = new org.gjt.sp.jedit.bsh.Capabilities$Unavailable;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = $r8.append("Reflect Manager unavailable: ");

        $r10 = $r9.append(r1);

        $r11 = $r10.toString();

        specialinvoke $r7.<init>($r11);

        throw $r7;

     label4:
        $r3 = org.gjt.sp.jedit.bsh.ReflectManager.rfm;

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean RMSetAccessible(java.lang.Object) throws org.gjt.sp.jedit.bsh.Capabilities$Unavailable
    {
        java.lang.Object r0;
        org.gjt.sp.jedit.bsh.ReflectManager $r1;
        boolean $z0;

        r0 := @parameter0;

        $r1 = org.gjt.sp.jedit.bsh.ReflectManager.getReflectManager();

        $z0 = $r1.setAccessible(r0);

        return $z0;
    }

    public abstract boolean setAccessible(java.lang.Object);
}
