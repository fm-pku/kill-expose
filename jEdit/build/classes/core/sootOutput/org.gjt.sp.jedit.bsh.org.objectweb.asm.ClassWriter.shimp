public class org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter extends java.lang.Object implements org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassVisitor
{
    static final int CLASS;
    static final int FIELD;
    static final int METH;
    static final int IMETH;
    static final int STR;
    static final int INT;
    static final int FLOAT;
    static final int LONG;
    static final int DOUBLE;
    static final int NAME_TYPE;
    static final int UTF8;
    private short index;
    private org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector pool;
    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item[] table;
    private int threshold;
    private int access;
    private int name;
    private int superName;
    private int interfaceCount;
    private int[] interfaces;
    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item sourceFile;
    private int fieldCount;
    private org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector fields;
    private boolean computeMaxs;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter firstMethod;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter lastMethod;
    private int innerClassesCount;
    private org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector innerClasses;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item key;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item key2;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item key3;
    static final int NOARG_INSN;
    static final int SBYTE_INSN;
    static final int SHORT_INSN;
    static final int VAR_INSN;
    static final int IMPLVAR_INSN;
    static final int TYPE_INSN;
    static final int FIELDORMETH_INSN;
    static final int ITFMETH_INSN;
    static final int LABEL_INSN;
    static final int LABELW_INSN;
    static final int LDC_INSN;
    static final int LDCW_INSN;
    static final int IINC_INSN;
    static final int TABL_INSN;
    static final int LOOK_INSN;
    static final int MANA_INSN;
    static final int WIDE_INSN;
    static byte[] TYPE;

    public void <init>(boolean)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        boolean z0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item[] $r2, $r3;
        int $i0, $i1;
        double $d0, $d1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r4, $r5, $r6;

        r0 := @this;

        z0 := @parameter0;

        specialinvoke r0.<init>();

        r0.index = 1;

        $r1 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector;

        specialinvoke $r1.<init>();

        r0.pool = $r1;

        $r2 = newarray (org.gjt.sp.jedit.bsh.org.objectweb.asm.Item)[64];

        r0.table = $r2;

        $r3 = r0.table;

        $i0 = lengthof $r3;

        $d0 = (double) $i0;

        $d1 = 0.75 * $d0;

        $i1 = (int) $d1;

        r0.threshold = $i1;

        $r4 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        specialinvoke $r4.<init>();

        r0.key = $r4;

        $r5 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        specialinvoke $r5.<init>();

        r0.key2 = $r5;

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        specialinvoke $r6.<init>();

        r0.key3 = $r6;

        r0.computeMaxs = z0;

        return;
    }

    public void visit(int, java.lang.String, java.lang.String, java.lang.String[], java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        int i0, $i2, $i3, $i4, $i5, $i6, i9;
        java.lang.String r1, r2, r4, $r11;
        java.lang.String[] r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r5, $r6, $r9, $r13;
        short $s1, $s7, $s8, $s8_1, $s8_2;
        int[] $r10, $r12;

        r0 := @this;

        i0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        r4 := @parameter4;

        r0.access = i0;

        $r5 = r0.newClass(r1);

        $s1 = $r5.index;

        r0.name = $s1;

        if r2 != null goto label1;

        $s8 = 0;

(0)     goto label2;

     label1:
        $r6 = r0.newClass(r2);

(1)     $s8_1 = $r6.index;

     label2:
        $s8_2 = Phi($s8 #0, $s8_1 #1);

        r0.superName = $s8_2;

(2)     if r3 == null goto label4;

        $i3 = lengthof r3;

(3)     if $i3 <= 0 goto label4;

        $i4 = lengthof r3;

        r0.interfaceCount = $i4;

        $i5 = r0.interfaceCount;

        $r10 = newarray (int)[$i5];

        r0.interfaces = $r10;

(4)     i9 = 0;

     label3:
        i9 = Phi(i9 #4, i9 #6);

        $s8 = Phi($s8_2 #4, $s8 #6);

        $i6 = r0.interfaceCount;

(5)     if i9 >= $i6 goto label4;

        $r12 = r0.interfaces;

        $r11 = r3[i9];

        $r13 = r0.newClass($r11);

        $s7 = $r13.index;

        $r12[i9] = $s7;

        i9 = i9 + 1;

(6)     goto label3;

     label4:
        i9 = Phi(i9 #2, i9 #3, i9 #5);

        $s8 = Phi($s8_2 #2, $s8_2 #3, $s8 #5);

        if r4 == null goto label5;

        r0.newUTF8("SourceFile");

        $r9 = r0.newUTF8(r4);

        r0.sourceFile = $r9;

     label5:
        $i2 = i0 & 131072;

        if $i2 == 0 goto label6;

        r0.newUTF8("Deprecated");

     label6:
        return;
    }

    public void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        int i0, $i1, $i2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r4, $r5, $r8, $r11, $r14, $r17;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r6, $r9, $r12;
        short $s3, $s4, $s5, $s3_1, $s3_2, $s4_1, $s4_2, $s5_1, $s5_2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        i0 := @parameter3;

        $r4 = r0.innerClasses;

        if $r4 != null goto label1;

        r0.newUTF8("InnerClasses");

        $r17 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector;

        specialinvoke $r17.<init>();

        r0.innerClasses = $r17;

     label1:
        $i1 = r0.innerClassesCount;

        $i2 = $i1 + 1;

        r0.innerClassesCount = $i2;

        $r5 = r0.innerClasses;

        if r1 != null goto label2;

        $s3 = 0;

(0)     goto label3;

     label2:
        $r6 = r0.newClass(r1);

(1)     $s3_1 = $r6.index;

     label3:
        $s3_2 = Phi($s3 #0, $s3_1 #1);

        $r5.put2($s3_2);

        $r8 = r0.innerClasses;

        if r2 != null goto label4;

        $s4 = 0;

(2)     goto label5;

     label4:
        $r9 = r0.newClass(r2);

(3)     $s4_1 = $r9.index;

     label5:
        $s4_2 = Phi($s4 #2, $s4_1 #3);

        $r8.put2($s4_2);

        $r11 = r0.innerClasses;

        if r3 != null goto label6;

        $s5 = 0;

(4)     goto label7;

     label6:
        $r12 = r0.newUTF8(r3);

(5)     $s5_1 = $r12.index;

     label7:
        $s5_2 = Phi($s5 #4, $s5_1 #5);

        $r11.put2($s5_2);

        $r14 = r0.innerClasses;

        $r14.put2(i0);

        return;
    }

    public void visitField(int, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        int i0, $i1, $i2, $i5, $i6, $i7, $i8, i13, i13_1, i13_2, i13_3, i13_4, i13_5, i13_6;
        java.lang.String r1, r2;
        java.lang.Object r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r4, $r5, $r6, $r8, $r11, $r13, $r15, $r17, $r19, $r21, $r24, $r25, $r28;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r7, $r9, $r14, $r18, $r22, $r26;
        short $s3, $s4, $s9, $s10, $s11, $s12;

        r0 := @this;

        i0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        $i1 = r0.fieldCount;

        $i2 = $i1 + 1;

        r0.fieldCount = $i2;

        $r4 = r0.fields;

        if $r4 != null goto label1;

        $r28 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector;

        specialinvoke $r28.<init>();

        r0.fields = $r28;

     label1:
        $r5 = r0.fields;

        $r6 = $r5.put2(i0);

        $r7 = r0.newUTF8(r1);

        $s3 = $r7.index;

        $r8 = $r6.put2($s3);

        $r9 = r0.newUTF8(r2);

        $s4 = $r9.index;

        $r8.put2($s4);

        i13 = 0;

(0)     if r3 == null goto label2;

(1)     i13_1 = i13 + 1;

     label2:
        i13_2 = Phi(i13 #0, i13_1 #1);

        $i5 = i0 & 65536;

(2)     if $i5 == 0 goto label3;

(3)     i13_3 = i13_2 + 1;

     label3:
        i13_4 = Phi(i13_2 #2, i13_3 #3);

        $i6 = i0 & 131072;

(4)     if $i6 == 0 goto label4;

(5)     i13_5 = i13_4 + 1;

     label4:
        i13_6 = Phi(i13_4 #4, i13_5 #5);

        $r11 = r0.fields;

        $r11.put2(i13_6);

        if r3 == null goto label5;

        $r21 = r0.fields;

        $r22 = r0.newUTF8("ConstantValue");

        $s11 = $r22.index;

        $r21.put2($s11);

        $r24 = r0.fields;

        $r25 = $r24.put4(2);

        $r26 = r0.newCst(r3);

        $s12 = $r26.index;

        $r25.put2($s12);

     label5:
        $i7 = i0 & 65536;

        if $i7 == 0 goto label6;

        $r17 = r0.fields;

        $r18 = r0.newUTF8("Synthetic");

        $s10 = $r18.index;

        $r19 = $r17.put2($s10);

        $r19.put4(0);

     label6:
        $i8 = i0 & 131072;

        if $i8 == 0 goto label7;

        $r13 = r0.fields;

        $r14 = r0.newUTF8("Deprecated");

        $s9 = $r14.index;

        $r15 = $r13.put2($s9);

        $r15.put4(0);

     label7:
        return;
    }

    public org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String[])
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        int i0;
        java.lang.String r1, r2;
        java.lang.String[] r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter r4, $r5;
        boolean $z0;

        r0 := @this;

        i0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        $r5 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter;

        $z0 = r0.computeMaxs;

        specialinvoke $r5.<init>(r0, $z0);

        r4 = $r5;

        r4.init(i0, r1, r2, r3);

        return r4;
    }

    public void visitEnd()
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;

        r0 := @this;

        return;
    }

    public byte[] toByteArray()
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r15, $r16, $r20, $r24, $r28, $r29, $r31, $r32, $r36, $r39, $r40, $r43, $r44, $r49, $r50;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30, i31, i32, i33, i29_1, i29_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r4, $r23, $r26, $r35, $r38, $r41;
        short $s5, $s15, $s20, $s21, $s22;
        byte[] $r13, $r25, $r33, $r45;
        int[] $r47;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter r51, r52;

        r0 := @this;

        $i0 = r0.interfaceCount;

        $i1 = 2 * $i0;

        i29 = 24 + $i1;

        $r2 = r0.fields;

(0)     if $r2 == null goto label01;

        $r50 = r0.fields;

        $i28 = $r50.length;

(1)     i29_1 = i29 + $i28;

     label01:
        i29_2 = Phi(i29 #0, i29_1 #1);

        i30 = 0;

(2)     r51 = r0.firstMethod;

     label02:
        i29 = Phi(i29_2 #2, i29 #3);

        i30 = Phi(i30 #2, i30 #3);

        r51 = Phi(r51 #2, r51 #3);

        if r51 == null goto label03;

        i30 = i30 + 1;

        $i27 = r51.getSize();

        i29 = i29 + $i27;

        r51 = r51.next;

(3)     goto label02;

     label03:
        $r3 = r0.pool;

        $i2 = $r3.length;

        i31 = i29 + $i2;

        i32 = 0;

        $r4 = r0.sourceFile;

(4)     if $r4 == null goto label04;

        i32 = i32 + 1;

(5)     i31 = i31 + 8;

     label04:
        i31 = Phi(i31 #4, i31 #5);

        i32 = Phi(i32 #4, i32 #5);

        $i3 = r0.access;

        $i4 = $i3 & 131072;

(6)     if $i4 == 0 goto label05;

        i32 = i32 + 1;

(7)     i31 = i31 + 6;

     label05:
        i31 = Phi(i31 #6, i31 #7);

        i32 = Phi(i32 #6, i32 #7);

        $r5 = r0.innerClasses;

(8)     if $r5 == null goto label06;

        i32 = i32 + 1;

        $r49 = r0.innerClasses;

        $i25 = $r49.length;

        $i26 = 8 + $i25;

(9)     i31 = i31 + $i26;

     label06:
        i31 = Phi(i31 #8, i31 #9);

        i32 = Phi(i32 #8, i32 #9);

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector;

        specialinvoke $r6.<init>(i31);

        r1 = $r6;

        $r7 = r1.put4(-889275714);

        $r8 = $r7.put2(3);

        $r8.put2(45);

        $s5 = r0.index;

        $r10 = r1.put2($s5);

        $r11 = r0.pool;

        $r13 = $r11.data;

        $r12 = r0.pool;

        $i6 = $r12.length;

        $r10.putByteArray($r13, 0, $i6);

        $i7 = r0.access;

        $r15 = r1.put2($i7);

        $i8 = r0.name;

        $r16 = $r15.put2($i8);

        $i9 = r0.superName;

        $r16.put2($i9);

        $i10 = r0.interfaceCount;

        r1.put2($i10);

(10)    i33 = 0;

     label07:
        i29 = Phi(i29 #10, i29 #11);

        i33 = Phi(i33 #10, i33 #11);

        i31 = Phi(i31 #10, i31 #11);

        i30 = Phi(i30 #10, i30 #11);

        i32 = Phi(i32 #10, i32 #11);

        r51 = Phi(r51 #10, r51 #11);

        $i11 = r0.interfaceCount;

        if i33 >= $i11 goto label08;

        $r47 = r0.interfaces;

        $i24 = $r47[i33];

        r1.put2($i24);

        i33 = i33 + 1;

(11)    goto label07;

     label08:
        $i12 = r0.fieldCount;

        r1.put2($i12);

        $r20 = r0.fields;

        if $r20 == null goto label09;

        $r43 = r0.fields;

        $r45 = $r43.data;

        $r44 = r0.fields;

        $i23 = $r44.length;

        r1.putByteArray($r45, 0, $i23);

     label09:
        r1.put2(i30);

(12)    r52 = r0.firstMethod;

     label10:
        r52 = Phi(r52 #12, r52 #13);

        i29 = Phi(i29 #12, i29 #13);

        i33 = Phi(i33 #12, i33 #13);

        i31 = Phi(i31 #12, i31 #13);

        i30 = Phi(i30 #12, i30 #13);

        i32 = Phi(i32 #12, i32 #13);

        r51 = Phi(r51 #12, r51 #13);

        if r52 == null goto label11;

        r52.put(r1);

        r52 = r52.next;

(13)    goto label10;

     label11:
        r1.put2(i32);

        $r23 = r0.sourceFile;

        if $r23 == null goto label12;

        $r38 = r0.newUTF8("SourceFile");

        $s21 = $r38.index;

        $r39 = r1.put2($s21);

        $r40 = $r39.put4(2);

        $r41 = r0.sourceFile;

        $s22 = $r41.index;

        $r40.put2($s22);

     label12:
        $i13 = r0.access;

        $i14 = $i13 & 131072;

        if $i14 == 0 goto label13;

        $r35 = r0.newUTF8("Deprecated");

        $s20 = $r35.index;

        $r36 = r1.put2($s20);

        $r36.put4(0);

     label13:
        $r24 = r0.innerClasses;

        if $r24 == null goto label14;

        $r26 = r0.newUTF8("InnerClasses");

        $s15 = $r26.index;

        r1.put2($s15);

        $r28 = r0.innerClasses;

        $i16 = $r28.length;

        $i17 = $i16 + 2;

        $r29 = r1.put4($i17);

        $i18 = r0.innerClassesCount;

        $r29.put2($i18);

        $r31 = r0.innerClasses;

        $r33 = $r31.data;

        $r32 = r0.innerClasses;

        $i19 = $r32.length;

        r1.putByteArray($r33, 0, $i19);

     label14:
        $r25 = r1.data;

        return $r25;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newCst(java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r7;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r8, $r10, $r12, $r14, $r16;
        java.lang.Double $r9;
        java.lang.Long $r11;
        java.lang.Float $r13;
        java.lang.Integer $r15;
        int i0;
        float f0;
        long l1;
        double d0;

        r0 := @this;

        r1 := @parameter0;

        $z0 = r1 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r15 = (java.lang.Integer) r1;

        i0 = $r15.intValue();

        $r16 = specialinvoke r0.newInteger(i0);

        return $r16;

     label1:
        $z1 = r1 instanceof java.lang.Float;

        if $z1 == 0 goto label2;

        $r13 = (java.lang.Float) r1;

        f0 = $r13.floatValue();

        $r14 = specialinvoke r0.newFloat(f0);

        return $r14;

     label2:
        $z2 = r1 instanceof java.lang.Long;

        if $z2 == 0 goto label3;

        $r11 = (java.lang.Long) r1;

        l1 = $r11.longValue();

        $r12 = specialinvoke r0.newLong(l1);

        return $r12;

     label3:
        $z3 = r1 instanceof java.lang.Double;

        if $z3 == 0 goto label4;

        $r9 = (java.lang.Double) r1;

        d0 = $r9.doubleValue();

        $r10 = specialinvoke r0.newDouble(d0);

        return $r10;

     label4:
        $z4 = r1 instanceof java.lang.String;

        if $z4 == 0 goto label5;

        $r7 = (java.lang.String) r1;

        $r8 = specialinvoke r0.newString($r7);

        return $r8;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append("value ");

        $r5 = $r4.append(r1);

        $r6 = $r5.toString();

        specialinvoke $r2.<init>($r6);

        throw $r2;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newUTF8(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r2, $r3, $r7, $r8, r9, r9_1, r9_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r4, $r5;
        short $s0, $s2;
        int $i1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.key;

        $r2.set(1, r1, null, null);

        $r3 = r0.key;

        r9 = specialinvoke r0.get($r3);

(0)     if r9 != null goto label1;

        $r4 = r0.pool;

        $r5 = $r4.put1(1);

        $r5.putUTF(r1);

        $r7 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s0 = r0.index;

        $i1 = $s0 + 1;

        $s2 = (short) $i1;

        r0.index = $s2;

        $r8 = r0.key;

        specialinvoke $r7.<init>($s0, $r8);

        r9_1 = $r7;

(1)     specialinvoke r0.put(r9_1);

     label1:
        r9_2 = Phi(r9 #0, r9_1 #1);

        return r9_2;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newClass(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r2, $r3, $r5, $r7, $r8, r9, r9_1, r9_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r4;
        short $s0, $s1, $s3;
        int $i2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.key2;

        $r2.set(7, r1, null, null);

        $r3 = r0.key2;

        r9 = specialinvoke r0.get($r3);

(0)     if r9 != null goto label1;

        $r4 = r0.pool;

        $r5 = r0.newUTF8(r1);

        $s0 = $r5.index;

        $r4.put12(7, $s0);

        $r7 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $i2 = $s1 + 1;

        $s3 = (short) $i2;

        r0.index = $s3;

        $r8 = r0.key2;

        specialinvoke $r7.<init>($s1, $r8);

        r9_1 = $r7;

(1)     specialinvoke r0.put(r9_1);

     label1:
        r9_2 = Phi(r9 #0, r9_1 #1);

        return r9_2;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newField(java.lang.String, java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r4, $r5, $r6, $r7, $r8, $r9, r10, r10_1, r10_2;
        short $s0, $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = r0.key3;

        $r4.set(9, r1, r2, r3);

        $r5 = r0.key3;

        r10 = specialinvoke r0.get($r5);

(0)     if r10 != null goto label1;

        $r6 = r0.newClass(r1);

        $s0 = $r6.index;

        $r7 = specialinvoke r0.newNameType(r2, r3);

        $s1 = $r7.index;

        specialinvoke r0.put122(9, $s0, $s1);

        $r8 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s2 = r0.index;

        $i3 = $s2 + 1;

        $s4 = (short) $i3;

        r0.index = $s4;

        $r9 = r0.key3;

        specialinvoke $r8.<init>($s2, $r9);

        r10_1 = $r8;

(1)     specialinvoke r0.put(r10_1);

     label1:
        r10_2 = Phi(r10 #0, r10_1 #1);

        return r10_2;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newMethod(java.lang.String, java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r4, $r5, $r6, $r7, $r8, $r9, r10, r10_1, r10_2;
        short $s0, $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = r0.key3;

        $r4.set(10, r1, r2, r3);

        $r5 = r0.key3;

        r10 = specialinvoke r0.get($r5);

(0)     if r10 != null goto label1;

        $r6 = r0.newClass(r1);

        $s0 = $r6.index;

        $r7 = specialinvoke r0.newNameType(r2, r3);

        $s1 = $r7.index;

        specialinvoke r0.put122(10, $s0, $s1);

        $r8 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s2 = r0.index;

        $i3 = $s2 + 1;

        $s4 = (short) $i3;

        r0.index = $s4;

        $r9 = r0.key3;

        specialinvoke $r8.<init>($s2, $r9);

        r10_1 = $r8;

(1)     specialinvoke r0.put(r10_1);

     label1:
        r10_2 = Phi(r10 #0, r10_1 #1);

        return r10_2;
    }

    org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newItfMethod(java.lang.String, java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2, r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r4, $r5, $r6, $r7, $r8, $r9, r10, r10_1, r10_2;
        short $s0, $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = r0.key3;

        $r4.set(11, r1, r2, r3);

        $r5 = r0.key3;

        r10 = specialinvoke r0.get($r5);

(0)     if r10 != null goto label1;

        $r6 = r0.newClass(r1);

        $s0 = $r6.index;

        $r7 = specialinvoke r0.newNameType(r2, r3);

        $s1 = $r7.index;

        specialinvoke r0.put122(11, $s0, $s1);

        $r8 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s2 = r0.index;

        $i3 = $s2 + 1;

        $s4 = (short) $i3;

        r0.index = $s4;

        $r9 = r0.key3;

        specialinvoke $r8.<init>($s2, $r9);

        r10_1 = $r8;

(1)     specialinvoke r0.put(r10_1);

     label1:
        r10_2 = Phi(r10 #0, r10_1 #1);

        return r10_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newInteger(int)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        int i0, $i2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r1, $r2, $r6, $r7, r8, r8_1, r8_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r3, $r4;
        short $s1, $s3;

        r0 := @this;

        i0 := @parameter0;

        $r1 = r0.key;

        $r1.set(i0);

        $r2 = r0.key;

        r8 = specialinvoke r0.get($r2);

(0)     if r8 != null goto label1;

        $r3 = r0.pool;

        $r4 = $r3.put1(3);

        $r4.put4(i0);

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $i2 = $s1 + 1;

        $s3 = (short) $i2;

        r0.index = $s3;

        $r7 = r0.key;

        specialinvoke $r6.<init>($s1, $r7);

        r8_1 = $r6;

(1)     specialinvoke r0.put(r8_1);

     label1:
        r8_2 = Phi(r8 #0, r8_1 #1);

        return r8_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newFloat(float)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        float f0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r1, $r2, $r6, $r7, r8, r8_1, r8_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r3, $r4;
        int $i0, $i2;
        short $s1, $s3;

        r0 := @this;

        f0 := @parameter0;

        $r1 = r0.key;

        $r1.set(f0);

        $r2 = r0.key;

        r8 = specialinvoke r0.get($r2);

(0)     if r8 != null goto label1;

        $r3 = r0.pool;

        $r4 = $r3.put1(4);

        $i0 = java.lang.Float.floatToIntBits(f0);

        $r4.put4($i0);

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $i2 = $s1 + 1;

        $s3 = (short) $i2;

        r0.index = $s3;

        $r7 = r0.key;

        specialinvoke $r6.<init>($s1, $r7);

        r8_1 = $r6;

(1)     specialinvoke r0.put(r8_1);

     label1:
        r8_2 = Phi(r8 #0, r8_1 #1);

        return r8_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newLong(long)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        long l0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r1, $r2, $r6, $r7, r8, r8_1, r8_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r3, $r4;
        short $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        l0 := @parameter0;

        $r1 = r0.key;

        $r1.set(l0);

        $r2 = r0.key;

        r8 = specialinvoke r0.get($r2);

(0)     if r8 != null goto label1;

        $r3 = r0.pool;

        $r4 = $r3.put1(5);

        $r4.put8(l0);

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $r7 = r0.key;

        specialinvoke $r6.<init>($s1, $r7);

        r8_1 = $r6;

        specialinvoke r0.put(r8_1);

        $s2 = r0.index;

        $i3 = $s2 + 2;

        $s4 = (short) $i3;

(1)     r0.index = $s4;

     label1:
        r8_2 = Phi(r8 #0, r8_1 #1);

        return r8_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newDouble(double)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        double d0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r1, $r2, $r6, $r7, r8, r8_1, r8_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r3, $r4;
        long $l0;
        short $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        d0 := @parameter0;

        $r1 = r0.key;

        $r1.set(d0);

        $r2 = r0.key;

        r8 = specialinvoke r0.get($r2);

(0)     if r8 != null goto label1;

        $r3 = r0.pool;

        $r4 = $r3.put1(6);

        $l0 = java.lang.Double.doubleToLongBits(d0);

        $r4.put8($l0);

        $r6 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $r7 = r0.key;

        specialinvoke $r6.<init>($s1, $r7);

        r8_1 = $r6;

        specialinvoke r0.put(r8_1);

        $s2 = r0.index;

        $i3 = $s2 + 2;

        $s4 = (short) $i3;

(1)     r0.index = $s4;

     label1:
        r8_2 = Phi(r8 #0, r8_1 #1);

        return r8_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newString(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r2, $r3, $r5, $r7, $r8, r9, r9_1, r9_2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r4;
        short $s0, $s1, $s3;
        int $i2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.key2;

        $r2.set(8, r1, null, null);

        $r3 = r0.key2;

        r9 = specialinvoke r0.get($r3);

(0)     if r9 != null goto label1;

        $r4 = r0.pool;

        $r5 = r0.newUTF8(r1);

        $s0 = $r5.index;

        $r4.put12(8, $s0);

        $r7 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s1 = r0.index;

        $i2 = $s1 + 1;

        $s3 = (short) $i2;

        r0.index = $s3;

        $r8 = r0.key2;

        specialinvoke $r7.<init>($s1, $r8);

        r9_1 = $r7;

(1)     specialinvoke r0.put(r9_1);

     label1:
        r9_2 = Phi(r9 #0, r9_1 #1);

        return r9_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item newNameType(java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        java.lang.String r1, r2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item $r3, $r4, $r5, $r6, $r7, $r8, r9, r9_1, r9_2;
        short $s0, $s1, $s2, $s4;
        int $i3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = r0.key2;

        $r3.set(12, r1, r2, null);

        $r4 = r0.key2;

        r9 = specialinvoke r0.get($r4);

(0)     if r9 != null goto label1;

        $r5 = r0.newUTF8(r1);

        $s0 = $r5.index;

        $r6 = r0.newUTF8(r2);

        $s1 = $r6.index;

        specialinvoke r0.put122(12, $s0, $s1);

        $r7 = new org.gjt.sp.jedit.bsh.org.objectweb.asm.Item;

        $s2 = r0.index;

        $i3 = $s2 + 1;

        $s4 = (short) $i3;

        r0.index = $s4;

        $r8 = r0.key2;

        specialinvoke $r7.<init>($s2, $r8);

        r9_1 = $r7;

(1)     specialinvoke r0.put(r9_1);

     label1:
        r9_2 = Phi(r9 #0, r9_1 #1);

        return r9_2;
    }

    private org.gjt.sp.jedit.bsh.org.objectweb.asm.Item get(org.gjt.sp.jedit.bsh.org.objectweb.asm.Item)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item r1, r3;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item[] r2;
        int i0, i1, $i2, $i3, $i4;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 = r0.table;

        i0 = r1.hashCode;

        $i3 = i0 & 2147483647;

        $i2 = lengthof r2;

        i1 = $i3 % $i2;

(0)     r3 = r2[i1];

     label1:
        r3 = Phi(r3 #0, r3 #1);

        if r3 == null goto label3;

        $i4 = r3.hashCode;

        if $i4 != i0 goto label2;

        $z0 = r1.isEqualTo(r3);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        r3 = r3.next;

(1)     goto label1;

     label3:
        return null;
    }

    private void put(org.gjt.sp.jedit.bsh.org.objectweb.asm.Item)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item r1, r4, $r7, $r10, r11;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Item[] r2, r3, $r5, $r6, $r8, $r9;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        short $s3;
        double $d0, $d1;

        r0 := @this;

        r1 := @parameter0;

        $s3 = r0.index;

        $i2 = r0.threshold;

(0)     if $s3 <= $i2 goto label4;

        $r9 = r0.table;

        i12 = lengthof $r9;

        r2 = r0.table;

        $i7 = i12 * 2;

        i0 = $i7 + 1;

        r3 = newarray (org.gjt.sp.jedit.bsh.org.objectweb.asm.Item)[i0];

        $d0 = (double) i0;

        $d1 = $d0 * 0.75;

        $i8 = (int) $d1;

        r0.threshold = $i8;

        r0.table = r3;

(1)     i13 = i12;

     label1:
        i13 = Phi(i13 #1, i13 #5);

        r11 = Phi(r11 #1, r11 #5);

        $i9 = i13;

        i13 = i13 + -1;

(2)     if $i9 <= 0 goto label4;

(3)     r11 = r2[i13];

     label2:
        i13 = Phi(i13 #3, i13 #4);

        r11 = Phi(r11 #3, r11 #4);

        if r11 == null goto label3;

        r4 = r11;

        r11 = r11.next;

        $i10 = r4.hashCode;

        $i11 = $i10 & 2147483647;

        i1 = $i11 % i0;

        $r10 = r3[i1];

        r4.next = $r10;

        r3[i1] = r4;

(4)     goto label2;

     label3:
(5)     goto label1;

     label4:
        i13 = Phi(i13 #0, i13 #2);

        r11 = Phi(r11 #0, r11 #2);

        $i4 = r1.hashCode;

        $i6 = $i4 & 2147483647;

        $r5 = r0.table;

        $i5 = lengthof $r5;

        i14 = $i6 % $i5;

        $r6 = r0.table;

        $r7 = $r6[i14];

        r1.next = $r7;

        $r8 = r0.table;

        $r8[i14] = r1;

        return;
    }

    private void put122(int, int, int)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter r0;
        int i0, i1, i2;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector $r1, $r2;

        r0 := @this;

        i0 := @parameter0;

        i1 := @parameter1;

        i2 := @parameter2;

        $r1 = r0.pool;

        $r2 = $r1.put12(i0, i1);

        $r2.put2(i2);

        return;
    }

    static void <clinit>()
    {
        byte[] r0;
        java.lang.String r1;
        int $i0, $i2, i4;
        char $c1;
        byte $b3;

        r0 = newarray (byte)[220];

        r1 = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";

(0)     i4 = 0;

     label1:
        i4 = Phi(i4 #0, i4 #1);

        $i0 = lengthof r0;

        if i4 >= $i0 goto label2;

        $c1 = r1.charAt(i4);

        $i2 = $c1 - 65;

        $b3 = (byte) $i2;

        r0[i4] = $b3;

        i4 = i4 + 1;

(1)     goto label1;

     label2:
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ClassWriter.TYPE = r0;

        return;
    }
}
