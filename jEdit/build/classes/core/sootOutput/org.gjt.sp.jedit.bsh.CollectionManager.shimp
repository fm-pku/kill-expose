public class org.gjt.sp.jedit.bsh.CollectionManager extends java.lang.Object
{
    private static org.gjt.sp.jedit.bsh.CollectionManager manager;

    public void <init>()
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static synchronized org.gjt.sp.jedit.bsh.CollectionManager getCollectionManager()
    {
        java.lang.Class r0;
        java.lang.Exception r1, $r8;
        org.gjt.sp.jedit.bsh.CollectionManager $r2, $r3, $r4, $r5, $r7;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        $r2 = org.gjt.sp.jedit.bsh.CollectionManager.manager;

        if $r2 != null goto label4;

        $z0 = org.gjt.sp.jedit.bsh.Capabilities.classExists("java.util.Collection");

        if $z0 == 0 goto label4;

     label1:
        r0 = java.lang.Class.forName("org.gjt.sp.jedit.bsh.collection.CollectionManagerImpl");

        $r6 = r0.newInstance();

        $r7 = (org.gjt.sp.jedit.bsh.CollectionManager) $r6;

        org.gjt.sp.jedit.bsh.CollectionManager.manager = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r10 = $r9.append("unable to load CollectionManagerImpl: ");

        $r11 = $r10.append(r1);

        $r12 = $r11.toString();

        org.gjt.sp.jedit.bsh.Interpreter.debug($r12);

     label4:
        $r3 = org.gjt.sp.jedit.bsh.CollectionManager.manager;

        if $r3 != null goto label5;

        $r5 = new org.gjt.sp.jedit.bsh.CollectionManager;

        specialinvoke $r5.<init>();

        org.gjt.sp.jedit.bsh.CollectionManager.manager = $r5;

     label5:
        $r4 = org.gjt.sp.jedit.bsh.CollectionManager.manager;

        return $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public boolean isBshIterable(java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;
        java.lang.Object r1;
        java.lang.IllegalArgumentException r2, $r4;

        r0 := @this;

        r1 := @parameter0;

     label1:
        r0.getBshIterator(r1);

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public org.gjt.sp.jedit.bsh.BshIterator getBshIterator(java.lang.Object) throws java.lang.IllegalArgumentException
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;
        java.lang.Object r1;
        org.gjt.sp.jedit.bsh.CollectionManager$BasicBshIterator $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new org.gjt.sp.jedit.bsh.CollectionManager$BasicBshIterator;

        specialinvoke $r2.<init>(r1);

        return $r2;
    }

    public boolean isMap(java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $z0 = r1 instanceof java.util.Hashtable;

        return $z0;
    }

    public java.lang.Object getFromMap(java.lang.Object, java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;
        java.lang.Object r1, r2, $r4;
        java.util.Hashtable $r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = (java.util.Hashtable) r1;

        $r4 = $r3.get(r2);

        return $r4;
    }

    public java.lang.Object putInMap(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.CollectionManager r0;
        java.lang.Object r1, r2, r3, $r5;
        java.util.Hashtable $r4;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = (java.util.Hashtable) r1;

        $r5 = $r4.put(r2, r3);

        return $r5;
    }
}
