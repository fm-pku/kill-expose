public class org.gjt.sp.jedit.bsh.collection.CollectionIterator extends java.lang.Object implements org.gjt.sp.jedit.bsh.BshIterator
{
    private java.util.Iterator iterator;

    public void <init>(java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.collection.CollectionIterator r0;
        java.lang.Object r1;
        java.util.Iterator $r2;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = r0.createIterator(r1);

        r0.iterator = $r2;

        return;
    }

    protected java.util.Iterator createIterator(java.lang.Object)
    {
        org.gjt.sp.jedit.bsh.collection.CollectionIterator r0;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.Class $r5;
        java.lang.String $r7;
        java.util.Collection $r8;
        java.util.Iterator $r9, $r10;
        java.lang.NullPointerException $r11;

        r0 := @this;

        r1 := @parameter0;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<init>("Object arguments passed to the CollectionIterator constructor cannot be null.");

        throw $r11;

     label1:
        $z0 = r1 instanceof java.util.Iterator;

        if $z0 == 0 goto label2;

        $r10 = (java.util.Iterator) r1;

        return $r10;

     label2:
        $z1 = r1 instanceof java.util.Collection;

        if $z1 == 0 goto label3;

        $r8 = (java.util.Collection) r1;

        $r9 = $r8.iterator();

        return $r9;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append("Cannot enumerate object of type ");

        $r5 = r1.getClass();

        $r6 = $r4.append($r5);

        $r7 = $r6.toString();

        specialinvoke $r2.<init>($r7);

        throw $r2;
    }

    public java.lang.Object next()
    {
        org.gjt.sp.jedit.bsh.collection.CollectionIterator r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;

        r0 := @this;

        $r1 = r0.iterator;

        $r2 = $r1.next();

        return $r2;
    }

    public boolean hasNext()
    {
        org.gjt.sp.jedit.bsh.collection.CollectionIterator r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.iterator;

        $z0 = $r1.hasNext();

        return $z0;
    }
}
