public class org.gjt.sp.jedit.datatransfer.RichTextTransferable extends java.lang.Object implements java.awt.datatransfer.Transferable
{
    private static final java.awt.datatransfer.DataFlavor[] supportedDataFlavor;
    private final java.lang.String text;
    private final java.lang.String mode;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.datatransfer.RichTextTransferable r0;
        java.lang.String r1, r2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.text = r1;

        r0.mode = r2;

        return;
    }

    public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()
    {
        org.gjt.sp.jedit.datatransfer.RichTextTransferable r0;
        java.awt.datatransfer.DataFlavor[] $r1;

        r0 := @this;

        $r1 = org.gjt.sp.jedit.datatransfer.RichTextTransferable.supportedDataFlavor;

        return $r1;
    }

    public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
    {
        org.gjt.sp.jedit.datatransfer.RichTextTransferable r0;
        java.awt.datatransfer.DataFlavor r1, $r2;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = org.gjt.sp.jedit.datatransfer.JEditDataFlavor.jEditRichTextDataFlavor;

        $z0 = $r2.equals(r1);

        return $z0;
    }

    public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException
    {
        org.gjt.sp.jedit.datatransfer.RichTextTransferable r0;
        java.awt.datatransfer.DataFlavor r1;
        boolean $z0;
        org.gjt.sp.jedit.datatransfer.JEditRichText $r2;
        java.lang.String $r3, $r4;
        java.awt.datatransfer.UnsupportedFlavorException $r5;

        r0 := @this;

        r1 := @parameter0;

        $z0 = r0.isDataFlavorSupported(r1);

        if $z0 != 0 goto label1;

        $r5 = new java.awt.datatransfer.UnsupportedFlavorException;

        specialinvoke $r5.<init>(r1);

        throw $r5;

     label1:
        $r2 = new org.gjt.sp.jedit.datatransfer.JEditRichText;

        $r4 = r0.text;

        $r3 = r0.mode;

        specialinvoke $r2.<init>($r4, $r3);

        return $r2;
    }

    static void <clinit>()
    {
        java.awt.datatransfer.DataFlavor[] $r0;
        java.awt.datatransfer.DataFlavor $r1;

        $r0 = newarray (java.awt.datatransfer.DataFlavor)[1];

        $r1 = org.gjt.sp.jedit.datatransfer.JEditDataFlavor.jEditRichTextDataFlavor;

        $r0[0] = $r1;

        org.gjt.sp.jedit.datatransfer.RichTextTransferable.supportedDataFlavor = $r0;

        return;
    }
}
