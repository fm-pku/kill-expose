public class org.gjt.sp.jedit.pluginmgr.PluginManager extends javax.swing.JFrame
{
    private static org.gjt.sp.jedit.pluginmgr.PluginManager instance;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JButton done;
    private javax.swing.JButton mgrOptions;
    private javax.swing.JButton pluginOptions;
    private org.gjt.sp.jedit.pluginmgr.InstallPanel installer;
    private org.gjt.sp.jedit.pluginmgr.InstallPanel updater;
    private org.gjt.sp.jedit.pluginmgr.ManagePanel manager;
    private org.gjt.sp.jedit.pluginmgr.PluginList pluginList;
    private boolean queuedUpdate;
    private boolean downloadingPluginList;
    private final java.awt.Frame parent;
    public static final java.lang.String PROPERTY_PLUGINSET;

    public static org.gjt.sp.jedit.pluginmgr.PluginManager getInstance()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager $r0;

        $r0 = org.gjt.sp.jedit.pluginmgr.PluginManager.instance;

        return $r0;
    }

    public void dispose()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r1;

        r0 := @this;

        org.gjt.sp.jedit.pluginmgr.PluginManager.instance = null;

        org.gjt.sp.jedit.EditBus.removeFromBus(r0);

        $r1 = r0.installer;

        org.gjt.sp.jedit.EditBus.removeFromBus($r1);

        specialinvoke r0.dispose();

        return;
    }

    public void handlePropertiesChanged(org.gjt.sp.jedit.msg.PropertiesChanged)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.msg.PropertiesChanged r1;
        org.gjt.sp.jedit.pluginmgr.PluginList $r2;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.pluginList;

        if $r2 == null goto label1;

        $z0 = specialinvoke r0.shouldUpdatePluginList();

        if $z0 == 0 goto label1;

        r0.pluginList = null;

        specialinvoke r0.updatePluginList();

     label1:
        return;
    }

    public void handlePluginUpdate(org.gjt.sp.jedit.msg.PluginUpdate)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.msg.PluginUpdate r1;
        boolean $z0;
        org.gjt.sp.jedit.pluginmgr.PluginManager$1 $r2;

        r0 := @this;

        r1 := @parameter0;

        $z0 = r0.queuedUpdate;

        if $z0 != 0 goto label1;

        $r2 = new org.gjt.sp.jedit.pluginmgr.PluginManager$1;

        specialinvoke $r2.<init>(r0);

        javax.swing.SwingUtilities.invokeLater($r2);

        r0.queuedUpdate = 1;

     label1:
        return;
    }

    public static void showPluginManager(java.awt.Frame)
    {
        java.awt.Frame r0;
        org.gjt.sp.jedit.pluginmgr.PluginManager $r1, $r2, $r3;

        r0 := @parameter0;

        $r1 = org.gjt.sp.jedit.pluginmgr.PluginManager.instance;

        if $r1 != null goto label1;

        $r3 = new org.gjt.sp.jedit.pluginmgr.PluginManager;

        specialinvoke $r3.<init>(r0);

        org.gjt.sp.jedit.pluginmgr.PluginManager.instance = $r3;

     label1:
        $r2 = org.gjt.sp.jedit.pluginmgr.PluginManager.instance;

        $r2.toFront();

        return;
    }

    public void ok()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;

        r0 := @this;

        r0.dispose();

        return;
    }

    public void cancel()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;

        r0 := @this;

        r0.dispose();

        return;
    }

    org.gjt.sp.jedit.pluginmgr.PluginList getPluginList()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.PluginList $r1;

        r0 := @this;

        $r1 = r0.pluginList;

        return $r1;
    }

    void pluginRemoved()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r1, $r2;

        r0 := @this;

        $r1 = r0.updater;

        $r1.updateModel();

        $r2 = r0.installer;

        $r2.updateModel();

        return;
    }

    private void <init>(java.awt.Frame)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        java.awt.Frame r1;
        java.lang.String $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = org.gjt.sp.jedit.jEdit.getProperty("plugin-manager.title");

        specialinvoke r0.<init>($r2);

        r0.parent = r1;

        specialinvoke r0.init();

        return;
    }

    private void init()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        javax.swing.JPanel r1, $r4;
        javax.swing.Box r2, $r22;
        org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler r3, $r23;
        java.awt.BorderLayout $r5;
        javax.swing.border.EmptyBorder $r6;
        javax.swing.JTabbedPane $r7, $r8, $r11, $r14, $r18, $r21;
        java.lang.String $r9, $r12, $r15, $r25, $r28, $r31;
        org.gjt.sp.jedit.pluginmgr.ManagePanel $r10;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r13, $r16, $r17;
        org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater $r20;
        javax.swing.JButton $r24, $r26, $r27, $r29, $r30, $r32, $r35, $r39, $r43, $r48;
        java.awt.Component $r33, $r37, $r41, $r45;
        javax.swing.JRootPane $r47;
        java.awt.Image $r50;
        java.awt.Frame $r51, $r52;

        r0 := @this;

        org.gjt.sp.jedit.EditBus.addToBus(r0);

        $r4 = new javax.swing.JPanel;

        $r5 = new java.awt.BorderLayout;

        specialinvoke $r5.<init>(12, 12);

        specialinvoke $r4.<init>($r5);

        r1 = $r4;

        $r6 = new javax.swing.border.EmptyBorder;

        specialinvoke $r6.<init>(12, 12, 12, 12);

        r1.setBorder($r6);

        r0.setContentPane(r1);

        $r7 = new javax.swing.JTabbedPane;

        specialinvoke $r7.<init>();

        r0.tabPane = $r7;

        $r8 = r0.tabPane;

        $r9 = org.gjt.sp.jedit.jEdit.getProperty("manage-plugins.title");

        $r10 = new org.gjt.sp.jedit.pluginmgr.ManagePanel;

        specialinvoke $r10.<init>(r0);

        r0.manager = $r10;

        $r8.addTab($r9, $r10);

        $r11 = r0.tabPane;

        $r12 = org.gjt.sp.jedit.jEdit.getProperty("update-plugins.title");

        $r13 = new org.gjt.sp.jedit.pluginmgr.InstallPanel;

        specialinvoke $r13.<init>(r0, 1);

        r0.updater = $r13;

        $r11.addTab($r12, $r13);

        $r14 = r0.tabPane;

        $r15 = org.gjt.sp.jedit.jEdit.getProperty("install-plugins.title");

        $r16 = new org.gjt.sp.jedit.pluginmgr.InstallPanel;

        specialinvoke $r16.<init>(r0, 0);

        r0.installer = $r16;

        $r14.addTab($r15, $r16);

        $r17 = r0.installer;

        org.gjt.sp.jedit.EditBus.addToBus($r17);

        $r18 = r0.tabPane;

        r1.add("Center", $r18);

        $r21 = r0.tabPane;

        $r20 = new org.gjt.sp.jedit.pluginmgr.PluginManager$ListUpdater;

        specialinvoke $r20.<init>(r0);

        $r21.addChangeListener($r20);

        $r22 = new javax.swing.Box;

        specialinvoke $r22.<init>(0);

        r2 = $r22;

        $r23 = new org.gjt.sp.jedit.pluginmgr.PluginManager$ActionHandler;

        specialinvoke $r23.<init>(r0);

        r3 = $r23;

        $r24 = new javax.swing.JButton;

        $r25 = org.gjt.sp.jedit.jEdit.getProperty("plugin-manager.mgr-options");

        specialinvoke $r24.<init>($r25);

        r0.mgrOptions = $r24;

        $r26 = r0.mgrOptions;

        $r26.addActionListener(r3);

        $r27 = new javax.swing.JButton;

        $r28 = org.gjt.sp.jedit.jEdit.getProperty("plugin-manager.plugin-options");

        specialinvoke $r27.<init>($r28);

        r0.pluginOptions = $r27;

        $r29 = r0.pluginOptions;

        $r29.addActionListener(r3);

        $r30 = new javax.swing.JButton;

        $r31 = org.gjt.sp.jedit.jEdit.getProperty("plugin-manager.done");

        specialinvoke $r30.<init>($r31);

        r0.done = $r30;

        $r32 = r0.done;

        $r32.addActionListener(r3);

        $r33 = javax.swing.Box.createGlue();

        r2.add($r33);

        $r35 = r0.mgrOptions;

        r2.add($r35);

        $r37 = javax.swing.Box.createHorizontalStrut(6);

        r2.add($r37);

        $r39 = r0.pluginOptions;

        r2.add($r39);

        $r41 = javax.swing.Box.createHorizontalStrut(6);

        r2.add($r41);

        $r43 = r0.done;

        r2.add($r43);

        $r45 = javax.swing.Box.createGlue();

        r2.add($r45);

        $r47 = r0.getRootPane();

        $r48 = r0.done;

        $r47.setDefaultButton($r48);

        r1.add("South", r2);

        r0.setDefaultCloseOperation(2);

        $r50 = org.gjt.sp.jedit.GUIUtilities.getPluginIcon();

        r0.setIconImage($r50);

        r0.pack();

        $r51 = r0.parent;

        org.gjt.sp.jedit.GUIUtilities.loadGeometry(r0, $r51, "plugin-manager");

        $r52 = r0.parent;

        org.gjt.sp.jedit.GUIUtilities.addSizeSaver(r0, $r52, "plugin-manager");

        r0.setVisible(1);

        return;
    }

    private boolean shouldUpdatePluginList()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.PluginList $r1, $r2;
        boolean $z0, $z1, $z2, $z2_1, $z2_2;
        java.lang.String $r3, $r4;

        r0 := @this;

        $r1 = r0.pluginList;

        if $r1 == null goto label1;

        $r2 = r0.pluginList;

        $r3 = $r2.getMirrorId();

        $r4 = org.gjt.sp.jedit.jEdit.getProperty("plugin-manager.mirror.id");

        $z1 = $r3.equals($r4);

        if $z1 != 0 goto label2;

     label1:
        $z0 = r0.downloadingPluginList;

        if $z0 != 0 goto label2;

        $z2 = 1;

(0)     goto label3;

     label2:
(1)     $z2_1 = 0;

     label3:
        $z2_2 = Phi($z2 #0, $z2_1 #1);

        return $z2_2;
    }

    private void updatePluginList()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        java.lang.String $r1, $r5;
        boolean $z0;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r2, $r3;
        org.gjt.sp.jedit.pluginmgr.PluginManager$2 $r4;

        r0 := @this;

        $r1 = org.gjt.sp.jedit.jEdit.getSettingsDirectory();

        if $r1 != null goto label1;

        $r5 = org.gjt.sp.jedit.jEdit.getJEditHome();

        if $r5 != null goto label1;

        org.gjt.sp.jedit.GUIUtilities.error(r0, "no-settings", null);

        return;

     label1:
        $z0 = specialinvoke r0.shouldUpdatePluginList();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r2 = r0.installer;

        $r2.loading();

        $r3 = r0.updater;

        $r3.loading();

        $r4 = new org.gjt.sp.jedit.pluginmgr.PluginManager$2;

        specialinvoke $r4.<init>(r0);

        org.gjt.sp.util.ThreadUtilities.runInBackground($r4);

        return;
    }

    public void checkForObsoletePlugins()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.PluginJAR[] r1;
        int i0, $i1, $i2, $i3, i4;
        org.gjt.sp.jedit.PluginJAR r2;
        org.gjt.sp.jedit.EditPlugin r3;
        java.lang.String r4, $r12, $r15, $r19, $r20, $r21, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, r35;
        java.util.Iterator r5, r36, r38;
        org.gjt.sp.jedit.pluginmgr.PluginList$Plugin r6;
        org.gjt.sp.jedit.pluginmgr.PluginList $r7, $r8, $r16;
        java.util.List $r9, $r17, $r22, $r23;
        java.lang.StringBuilder $r10, $r11, $r13, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.Object $r18, $r24, $r31;
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r34, r37;
        org.gjt.sp.jedit.pluginmgr.PluginList$Dependency r39;

        r0 := @this;

        $r7 = r0.pluginList;

        if $r7 == null goto label01;

        $r8 = r0.pluginList;

        $r9 = $r8.plugins;

        if $r9 != null goto label02;

     label01:
        return;

     label02:
        r1 = org.gjt.sp.jedit.jEdit.getPluginJARs();

        i0 = lengthof r1;

(0)     i4 = 0;

     label03:
        r34 = Phi(r34 #0, r34 #16);

        r35 = Phi(r35 #0, r35 #16);

        i4 = Phi(i4 #0, i4 #16);

        if i4 >= i0 goto label14;

        r2 = r1[i4];

        r3 = r2.getPlugin();

        if r3 != null goto label04;

(1)     goto label13;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r11 = $r10.append("plugin.");

        $r12 = r3.getClassName();

        $r13 = $r11.append($r12);

        $r14 = $r13.append(".version");

        $r15 = $r14.toString();

        r4 = org.gjt.sp.jedit.jEdit.getProperty($r15);

        $r16 = r0.pluginList;

        $r17 = $r16.plugins;

(2)     r5 = $r17.iterator();

     label05:
        r34 = Phi(r34 #2, r34 #15);

        r35 = Phi(r35 #2, r35 #15);

        i4 = Phi(i4 #2, i4 #15);

        $z0 = r5.hasNext();

(3)     if $z0 == 0 goto label13;

        $r18 = r5.next();

        r6 = (org.gjt.sp.jedit.pluginmgr.PluginList$Plugin) $r18;

        $r19 = r6.jar;

        $r20 = r2.getPath();

        $r21 = org.gjt.sp.jedit.MiscUtilities.getFileName($r20);

        $z1 = org.gjt.sp.jedit.MiscUtilities.pathsEqual($r19, $r21);

(4)     if $z1 == 0 goto label12;

        r34 = null;

        r35 = "0";

        $r22 = r6.branches;

(5)     r36 = $r22.iterator();

     label06:
        r34 = Phi(r34 #5, r34 #9);

        r35 = Phi(r35 #5, r35 #9);

        i4 = Phi(i4 #5, i4 #9);

        $z2 = r36.hasNext();

        if $z2 == 0 goto label08;

        $r31 = r36.next();

        r37 = (org.gjt.sp.jedit.pluginmgr.PluginList$Branch) $r31;

        $r32 = r37.version;

        $i2 = org.gjt.sp.util.StandardUtilities.compareStrings($r32, r4, 0);

(6)     if $i2 < 0 goto label07;

        $r33 = r37.version;

        $i3 = org.gjt.sp.util.StandardUtilities.compareStrings($r33, r35, 0);

(7)     if $i3 < 0 goto label07;

        r35 = r37.version;

(8)     r34 = r37;

     label07:
        r34 = Phi(r34 #6, r34 #7, r34 #8);

        r35 = Phi(r35 #6, r35 #7, r35 #8);

(9)     goto label06;

     label08:
(10)    if r34 == null goto label12;

        $z3 = r34.obsolete;

        if $z3 == 0 goto label09;

        $r30 = r6.name;

        specialinvoke r0.disablePlugin(r2, $r30);

(11)    goto label12;

     label09:
        $r23 = r34.deps;

(12)    r38 = $r23.iterator();

     label10:
        r34 = Phi(r34 #12, r34 #14);

        r35 = Phi(r35 #12, r35 #14);

        i4 = Phi(i4 #12, i4 #14);

        $z4 = r38.hasNext();

(13)    if $z4 == 0 goto label12;

        $r24 = r38.next();

        r39 = (org.gjt.sp.jedit.pluginmgr.PluginList$Dependency) $r24;

        $r25 = r39.what;

        $z5 = $r25.equals("jedit");

        if $z5 == 0 goto label11;

        $r26 = r39.to;

        if $r26 == null goto label11;

        $r27 = org.gjt.sp.jedit.jEdit.getBuild();

        $r28 = r39.to;

        $i1 = org.gjt.sp.util.StandardUtilities.compareStrings($r27, $r28, 0);

        if $i1 <= 0 goto label11;

        $r29 = r6.name;

        specialinvoke r0.disablePlugin(r2, $r29);

     label11:
(14)    goto label10;

     label12:
        r34 = Phi(r34 #4, r34 #10, r34 #11, r34 #13);

        r35 = Phi(r35 #4, r35 #10, r35 #11, r35 #13);

        i4 = Phi(i4 #4, i4 #10, i4 #11, i4 #13);

(15)    goto label05;

     label13:
        r34 = Phi(r34 #1, r34 #3);

        r35 = Phi(r35 #1, r35 #3);

        i4 = Phi(i4 #1, i4 #3);

        i4 = i4 + 1;

(16)    goto label03;

     label14:
        return;
    }

    private void disablePlugin(org.gjt.sp.jedit.PluginJAR, java.lang.String)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.PluginJAR r1;
        java.lang.String r2, r3, $r8, $r9, $r13, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r14, $r15, $r16, $r17;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r5 = $r4.append("Plugin: ");

        $r6 = $r5.append(r2);

        $r7 = $r6.append(" is not supported on this version of jEdit! ");

        $r8 = $r7.toString();

        org.gjt.sp.util.Log.log(9, r0, $r8);

        $z0 = org.gjt.sp.jedit.jEdit.getBooleanProperty("plugin-manager.disable-obsolete", 1);

        if $z0 != 0 goto label1;

        return;

     label1:
        org.gjt.sp.jedit.jEdit.removePluginJAR(r1, 0);

        $r9 = r1.getPath();

        r3 = org.gjt.sp.jedit.MiscUtilities.getFileName($r9);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r11 = $r10.append("plugin-blacklist.");

        $r12 = $r11.append(r3);

        $r13 = $r12.toString();

        org.gjt.sp.jedit.jEdit.setBooleanProperty($r13, 1);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<init>();

        $r15 = $r14.append("plugin.");

        $r16 = $r15.append(r3);

        $r17 = $r16.append(".disabled");

        $r18 = $r17.toString();

        org.gjt.sp.jedit.jEdit.setBooleanProperty($r18, 1);

        org.gjt.sp.jedit.jEdit.propertiesChanged();

        return;
    }

    private void pluginListUpdated()
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        java.awt.Component r1;
        javax.swing.JTabbedPane $r2;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r3, $r4, $r5, $r6;

        r0 := @this;

        $r2 = r0.tabPane;

        r1 = $r2.getSelectedComponent();

        $r3 = r0.installer;

        if r1 == $r3 goto label1;

        $r6 = r0.updater;

        if r1 != $r6 goto label2;

     label1:
        $r4 = r0.installer;

        $r4.updateModel();

        $r5 = r0.updater;

        $r5.updateModel();

     label2:
        r0.checkForObsoletePlugins();

        return;
    }

    public void processKeyEvents(java.awt.event.KeyEvent)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        java.awt.event.KeyEvent r1;
        int $i0, $i1;

        r0 := @this;

        r1 := @parameter0;

        $i0 = r1.getID();

        if $i0 != 401 goto label1;

        $i1 = r1.getKeyCode();

        if $i1 != 27 goto label1;

        r0.cancel();

        r1.consume();

     label1:
        return;
    }

    static boolean access$002(org.gjt.sp.jedit.pluginmgr.PluginManager, boolean)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        boolean z0;

        r0 := @parameter0;

        z0 := @parameter1;

        r0.queuedUpdate = z0;

        return z0;
    }

    static org.gjt.sp.jedit.pluginmgr.ManagePanel access$100(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.ManagePanel $r1;

        r0 := @parameter0;

        $r1 = r0.manager;

        return $r1;
    }

    static boolean access$202(org.gjt.sp.jedit.pluginmgr.PluginManager, boolean)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        boolean z0;

        r0 := @parameter0;

        z0 := @parameter1;

        r0.downloadingPluginList = z0;

        return z0;
    }

    static org.gjt.sp.jedit.pluginmgr.PluginList access$302(org.gjt.sp.jedit.pluginmgr.PluginManager, org.gjt.sp.jedit.pluginmgr.PluginList)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.PluginList r1;

        r0 := @parameter0;

        r1 := @parameter1;

        r0.pluginList = r1;

        return r1;
    }

    static void access$400(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;

        r0 := @parameter0;

        specialinvoke r0.pluginListUpdated();

        return;
    }

    static javax.swing.JButton access$500(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        javax.swing.JButton $r1;

        r0 := @parameter0;

        $r1 = r0.done;

        return $r1;
    }

    static javax.swing.JButton access$600(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        javax.swing.JButton $r1;

        r0 := @parameter0;

        $r1 = r0.mgrOptions;

        return $r1;
    }

    static javax.swing.JButton access$700(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        javax.swing.JButton $r1;

        r0 := @parameter0;

        $r1 = r0.pluginOptions;

        return $r1;
    }

    static javax.swing.JTabbedPane access$800(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        javax.swing.JTabbedPane $r1;

        r0 := @parameter0;

        $r1 = r0.tabPane;

        return $r1;
    }

    static org.gjt.sp.jedit.pluginmgr.InstallPanel access$900(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r1;

        r0 := @parameter0;

        $r1 = r0.installer;

        return $r1;
    }

    static org.gjt.sp.jedit.pluginmgr.InstallPanel access$1000(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;
        org.gjt.sp.jedit.pluginmgr.InstallPanel $r1;

        r0 := @parameter0;

        $r1 = r0.updater;

        return $r1;
    }

    static void access$1100(org.gjt.sp.jedit.pluginmgr.PluginManager)
    {
        org.gjt.sp.jedit.pluginmgr.PluginManager r0;

        r0 := @parameter0;

        specialinvoke r0.updatePluginList();

        return;
    }
}
