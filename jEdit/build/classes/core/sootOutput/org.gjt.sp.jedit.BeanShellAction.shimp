public class org.gjt.sp.jedit.BeanShellAction extends org.gjt.sp.jedit.EditAction
{
    private boolean noRepeat;
    private boolean noRecord;
    private boolean noRememberLast;
    private org.gjt.sp.jedit.BeanShellAction$CachedBshMethod code;
    private org.gjt.sp.jedit.BeanShellAction$CachedBshMethod isSelected;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean)
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        java.lang.String r1, r2, r3, r4, $r5, $r10, $r14, $r19, $r20, $r20_1, $r20_2;
        boolean z0, z1, z2;
        org.gjt.sp.jedit.BeanShellAction$CachedBshMethod $r6, $r15;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r16, $r17, $r18;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        z0 := @parameter3;

        z1 := @parameter4;

        z2 := @parameter5;

        specialinvoke r0.<init>(r1);

        $r5 = r1.replace(46, 95);

        r4 = $r5.replace(45, 95);

        $r6 = new org.gjt.sp.jedit.BeanShellAction$CachedBshMethod;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r8 = $r7.append("action_");

        $r9 = $r8.append(r4);

        $r10 = $r9.toString();

        Packer.Unpack(r0);

        specialinvoke $r6.<init>($r10, r2);

        r0.code = $r6;

        Packer.Pack(r0);

        if r3 == null goto label1;

        Packer.Unpack(r0);

        $r15 = new org.gjt.sp.jedit.BeanShellAction$CachedBshMethod;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        $r17 = $r16.append("selected_");

        $r18 = $r17.append(r4);

        $r19 = $r18.toString();

        specialinvoke $r15.<init>($r19, r3);

        r0.isSelected = $r15;

     label1:
        Packer.Pack(r0);

        r0.noRepeat = z0;

        r0.noRecord = z1;

        r0.noRememberLast = z2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        $r12 = $r11.append(r1);

        $r13 = $r12.append(".toggle");

        $r14 = $r13.toString();

        if r3 == null goto label2;

        $r20 = "true";

(0)     goto label3;

     label2:
(1)     $r20_1 = "false";

     label3:
        $r20_2 = Phi($r20 #0, $r20_1 #1);

        org.gjt.sp.jedit.jEdit.setTemporaryProperty($r14, $r20_2);

        return;
    }

    public void invoke(org.gjt.sp.jedit.View)
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        org.gjt.sp.jedit.View r1;
        java.lang.Throwable r2, $r8;
        org.gjt.sp.jedit.BeanShellAction$CachedBshMethod $r3;
        org.gjt.sp.jedit.bsh.BshMethod $r4;
        org.gjt.sp.jedit.bsh.NameSpace $r5, $r6;
        org.gjt.sp.jedit.gui.BeanShellErrorDialog $r9;

        r0 := @this;

        r1 := @parameter0;

     label1:
        $r3 = r0.code;

        Packer.Unpack(r0);

        $r4 = $r3.get();

        Packer.Pack(r0);

        $r5 = new org.gjt.sp.jedit.bsh.NameSpace;

        $r6 = org.gjt.sp.jedit.BeanShell.getNameSpace();

        specialinvoke $r5.<init>($r6, "BeanShellAction.invoke()");

        org.gjt.sp.jedit.BeanShell.runCachedBlock($r4, r1, $r5);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        org.gjt.sp.util.Log.log(9, r0, r2);

        $r9 = new org.gjt.sp.jedit.gui.BeanShellErrorDialog;

        specialinvoke $r9.<init>(r1, r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean isSelected(java.awt.Component)
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        java.awt.Component r1;
        org.gjt.sp.jedit.bsh.NameSpace r2, $r9, $r10;
        java.lang.Throwable r3, $r13, $r16, r19;
        org.gjt.sp.jedit.bsh.UtilEvalError r4, $r12, $r14, $r15, r18, r20;
        org.gjt.sp.jedit.BeanShellAction$CachedBshMethod $r5, $r6;
        java.lang.Boolean $r7;
        org.gjt.sp.jedit.bsh.BshMethod $r8;
        java.lang.Object $r11;
        org.gjt.sp.jedit.View r17, r17_1, r17_2, r17_3;
        boolean z0, z1;

        r0 := @this;

        r1 := @parameter0;

        $r5 = r0.isSelected;

        if $r5 != null goto label01;

        return 0;

     label01:
(0)     r2 = org.gjt.sp.jedit.BeanShell.getNameSpace();

     label02:
        r17 = org.gjt.sp.jedit.GUIUtilities.getView(r1);

(1)     if r17 != null goto label03;

(2)     r17_1 = org.gjt.sp.jedit.jEdit.getActiveView();

     label03:
        r17_2 = Phi(r17 #1, r17_1 #2);

(3)     r2.setVariable("_comp", r1);

        $r7 = java.lang.Boolean.TRUE;

        $r6 = r0.isSelected;

        Packer.Unpack(r0);

        $r8 = $r6.get();

        Packer.Pack(r0);

        $r9 = new org.gjt.sp.jedit.bsh.NameSpace;

        $r10 = org.gjt.sp.jedit.BeanShell.getNameSpace();

        specialinvoke $r9.<init>($r10, "BeanShellAction.isSelected()");

        $r11 = org.gjt.sp.jedit.BeanShell.runCachedBlock($r8, r17_2, $r9);

        z0 = $r7.equals($r11);

     label04:
        r2.setVariable("_comp", null);

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        r18 = $r12;

        org.gjt.sp.util.Log.log(9, r0, r18);

     label07:
        return z0;

     label08:
        $r13 := @caughtexception;

(4)     r17_3 = Phi(r17 #0, r17_1 #2, r17_2 #3);

        r19 = $r13;

        org.gjt.sp.util.Log.log(9, r0, r19);

        Packer.Unpack(r0);

        r0.isSelected = null;

        Packer.Pack(r0);

        z1 = 0;

     label09:
        r2.setVariable("_comp", null);

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;

        r20 = $r15;

        org.gjt.sp.util.Log.log(9, r0, r20);

     label12:
        return z1;

     label13:
        $r16 := @caughtexception;

(5)     r17 = Phi(r17_3 #4, r17 #5, r17 #0, r17_1 #2, r17_2 #3);

        r3 = $r16;

     label14:
        r2.setVariable("_comp", null);

     label15:
        goto label17;

     label16:
        $r14 := @caughtexception;

        r4 = $r14;

        org.gjt.sp.util.Log.log(9, r0, r4);

     label17:
        throw r3;

        catch org.gjt.sp.jedit.bsh.UtilEvalError from label04 to label05 with label06;
        catch java.lang.Throwable from label02 to label04 with label08;
        catch org.gjt.sp.jedit.bsh.UtilEvalError from label09 to label10 with label11;
        catch java.lang.Throwable from label02 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch org.gjt.sp.jedit.bsh.UtilEvalError from label14 to label15 with label16;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean noRepeat()
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.noRepeat;

        return $z0;
    }

    public boolean noRecord()
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.noRecord;

        return $z0;
    }

    public boolean noRememberLast()
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.noRememberLast;

        return $z0;
    }

    public java.lang.String getCode()
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        org.gjt.sp.jedit.BeanShellAction$CachedBshMethod $r1;
        java.lang.String $r2, $r3;

        r0 := @this;

        $r1 = r0.code;

        Packer.Unpack(r0);

        $r2 = $r1.getSource();

        Packer.Pack(r0);

        $r3 = $r2.trim();

        return $r3;
    }

    public volatile void invoke(java.lang.Object)
    {
        org.gjt.sp.jedit.BeanShellAction r0;
        java.lang.Object r1;
        org.gjt.sp.jedit.View $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = (org.gjt.sp.jedit.View) r1;

        r0.invoke($r2);

        return;
    }
}
