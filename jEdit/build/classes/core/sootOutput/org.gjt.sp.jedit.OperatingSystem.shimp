public class org.gjt.sp.jedit.OperatingSystem extends java.lang.Object
{
    private static final int UNIX;
    private static final int WINDOWS_9x;
    private static final int WINDOWS_NT;
    private static final int OS2;
    private static final int MAC_OS_X;
    private static final int VMS;
    private static final int UNKNOWN;
    private static int os;
    private static int hasScreenMenuBar;

    public void <init>()
    {
        org.gjt.sp.jedit.OperatingSystem r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static java.awt.Rectangle getScreenBounds()
    {
        int i0, i1, $i2, $i3, $i4, i7, i8, i7_1, i8_1, i7_2, i8_2, i7_3, i8_3;
        java.awt.Toolkit $r0, $r2;
        java.awt.Dimension $r1, $r3;
        double $d0, $d1;
        boolean $z0, $z1;
        java.awt.Rectangle $r4;
        byte b5, b6, b5_1, b6_1, b5_2, b6_2, b6_3, b5_3;

        $r0 = java.awt.Toolkit.getDefaultToolkit();

        $r1 = $r0.getScreenSize();

        $d0 = $r1.getWidth();

        i0 = (int) $d0;

        $r2 = java.awt.Toolkit.getDefaultToolkit();

        $r3 = $r2.getScreenSize();

        $d1 = $r3.getHeight();

        i1 = (int) $d1;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isMacOS();

        if $z0 == 0 goto label1;

        b5 = 0;

        b6 = 22;

        i7 = i0;

        $i4 = i1 - b6;

        i8 = $i4 - 4;

(0)     goto label3;

     label1:
        $z1 = org.gjt.sp.jedit.OperatingSystem.isWindows();

        if $z1 == 0 goto label2;

        b5_1 = -4;

        b6_1 = -4;

        $i2 = 2 * b5_1;

        i7_1 = i0 - $i2;

        $i3 = 2 * b6_1;

        i8_1 = i1 - $i3;

(1)     goto label3;

     label2:
        b5_2 = 0;

        b6_2 = 0;

        i7_2 = i0;

(2)     i8_2 = i1;

     label3:
        b6_3 = Phi(b6 #0, b6_1 #1, b6_2 #2);

        i7_3 = Phi(i7 #0, i7_1 #1, i7_2 #2);

        i8_3 = Phi(i8 #0, i8_1 #1, i8_2 #2);

        b5_3 = Phi(b5 #0, b5_1 #1, b5_2 #2);

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<init>(b5_3, b6_3, i7_3, i8_3);

        return $r4;
    }

    public static java.awt.Rectangle getScreenBounds(java.awt.Rectangle)
    {
        java.awt.Rectangle r0, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, r22, r23;
        java.awt.GraphicsDevice[] r1, r16;
        java.util.HashSet r2, $r4;
        java.awt.GraphicsEnvironment $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.GraphicsDevice $r6, r17;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16;
        java.lang.Object $r12;
        java.awt.GraphicsConfiguration r18, r19, r21;
        java.util.Iterator r20;

        r0 := @parameter0;

        $r3 = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();

        r1 = $r3.getScreenDevices();

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<init>();

        r2 = $r4;

        r16 = r1;

        i5 = lengthof r16;

(0)     i6 = 0;

     label01:
        i6 = Phi(i6 #0, i6 #1);

        if i6 >= i5 goto label03;

        r17 = r16[i6];

        r18 = r17.getDefaultConfiguration();

        $r15 = r18.getBounds();

        $z3 = r0.intersects($r15);

        if $z3 == 0 goto label02;

        $z4 = r2.contains(r18);

        if $z4 != 0 goto label02;

        r2.add(r18);

     label02:
        i6 = i6 + 1;

(1)     goto label01;

     label03:
        r19 = null;

        $z0 = r2.isEmpty();

        if $z0 != 0 goto label08;

(2)     r20 = r2.iterator();

     label04:
        i6 = Phi(i6 #2, i6 #6);

        r19 = Phi(r19 #2, r19 #6);

        $z2 = r20.hasNext();

        if $z2 == 0 goto label07;

        $r12 = r20.next();

        r21 = (java.awt.GraphicsConfiguration) $r12;

        if r19 != null goto label05;

        r19 = r21;

(3)     goto label06;

     label05:
        $r13 = r19.getBounds();

        r22 = $r13.intersection(r0);

        $r14 = r21.getBounds();

        r23 = $r14.intersection(r0);

        $i2 = r22.width;

        $i1 = r22.height;

        i7 = $i2 * $i1;

        $i4 = r23.width;

        $i3 = r23.height;

        i8 = $i4 * $i3;

(4)     if i8 <= i7 goto label06;

(5)     r19 = r21;

     label06:
        r19 = Phi(r19 #3, r19 #4, r19 #5);

(6)     goto label04;

     label07:
(7)     goto label09;

     label08:
        $r5 = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();

        $r6 = $r5.getDefaultScreenDevice();

(8)     r19 = $r6.getDefaultConfiguration();

     label09:
        i6 = Phi(i6 #7, i6 #8);

        r19 = Phi(r19 #7, r19 #8);

        $r7 = r19.getBounds();

        i9 = $r7.x;

        $r8 = r19.getBounds();

        i10 = $r8.y;

        $r9 = r19.getBounds();

        i11 = $r9.width;

        $r10 = r19.getBounds();

        i12 = $r10.height;

        $z1 = org.gjt.sp.jedit.OperatingSystem.isMacOS();

        if $z1 == 0 goto label10;

        i13 = i9;

        i14 = i10 + 22;

        i15 = i11;

        $i0 = i12 - i14;

        i16 = $i0 - 4;

(9)     goto label11;

     label10:
        i13 = i9;

        i14 = i10;

        i15 = i11;

(10)    i16 = i12;

     label11:
        i16 = Phi(i16 #9, i16 #10);

        i15 = Phi(i15 #9, i15 #10);

        i14 = Phi(i14 #9, i14 #10);

        i13 = Phi(i13 #9, i13 #10);

        $r11 = new java.awt.Rectangle;

        specialinvoke $r11.<init>(i13, i14, i15, i16);

        return $r11;
    }

    public static boolean isDOSDerived()
    {
        boolean $z0, $z1, $z2, $z2_1, $z2_2;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isWindows();

        if $z0 != 0 goto label1;

        $z1 = org.gjt.sp.jedit.OperatingSystem.isOS2();

        if $z1 == 0 goto label2;

     label1:
        $z2_1 = 1;

(0)     goto label3;

     label2:
(1)     $z2 = 0;

     label3:
        $z2_2 = Phi($z2_1 #0, $z2 #1);

        return $z2_2;
    }

    public static boolean isWindows()
    {
        int $i0, $i1;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 == 1600 goto label1;

        $i1 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i1 != 1638 goto label2;

     label1:
        $z0_1 = 1;

(0)     goto label3;

     label2:
(1)     $z0 = 0;

     label3:
        $z0_2 = Phi($z0_1 #0, $z0 #1);

        return $z0_2;
    }

    public static boolean isWindows9x()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 1600 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isWindowsNT()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 1638 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isOS2()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 57005 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isUnix()
    {
        int $i0, $i1;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 == 201527 goto label1;

        $i1 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i1 != 2748 goto label2;

     label1:
        $z0_1 = 1;

(0)     goto label3;

     label2:
(1)     $z0 = 0;

     label3:
        $z0_2 = Phi($z0_1 #0, $z0 #1);

        return $z0_2;
    }

    public static boolean isMacOS()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 2748 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isX11()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 201527 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isVMS()
    {
        int $i0;
        boolean $z0, $z0_1, $z0_2;

        $i0 = org.gjt.sp.jedit.OperatingSystem.os;

        if $i0 != 912082 goto label1;

        $z0 = 1;

(0)     goto label2;

     label1:
(1)     $z0_1 = 0;

     label2:
        $z0_2 = Phi($z0 #0, $z0_1 #1);

        return $z0_2;
    }

    public static boolean isMacOSLF()
    {
        boolean $z0, $z1, $z2, $z2_1, $z2_2;
        javax.swing.LookAndFeel $r0;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isMacOS();

        if $z0 == 0 goto label1;

        $r0 = javax.swing.UIManager.getLookAndFeel();

        $z1 = $r0.isNativeLookAndFeel();

        if $z1 == 0 goto label1;

        $z2 = 1;

(0)     goto label2;

     label1:
(1)     $z2_1 = 0;

     label2:
        $z2_2 = Phi($z2 #0, $z2_1 #1);

        return $z2_2;
    }

    public static boolean hasScreenMenuBar()
    {
        boolean $z0, $z1, $z2, $z2_1, $z2_2;
        int $i0, $i1;
        java.lang.String $r0, r1, r1_1, r1_2, r1_3;
        byte $b2, $b2_1, $b2_2, $b2_3;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isMacOS();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = org.gjt.sp.jedit.OperatingSystem.hasScreenMenuBar;

(0)     if $i0 != -1 goto label5;

        r1 = java.lang.System.getProperty("apple.laf.useScreenMenuBar");

(1)     if r1 != null goto label2;

(2)     r1_1 = java.lang.System.getProperty("com.apple.macos.useScreenMenuBar");

     label2:
        r1_2 = Phi(r1 #1, r1_1 #2);

        $r0 = "true";

        $z1 = $r0.equals(r1_2);

        if $z1 == 0 goto label3;

        $b2 = 1;

(3)     goto label4;

     label3:
(4)     $b2_1 = 0;

     label4:
        $b2_2 = Phi($b2 #3, $b2_1 #4);

(5)     org.gjt.sp.jedit.OperatingSystem.hasScreenMenuBar = $b2_2;

     label5:
        $b2_3 = Phi($b2 #0, $b2_2 #5);

        r1_3 = Phi(r1 #0, r1_2 #5);

        $i1 = org.gjt.sp.jedit.OperatingSystem.hasScreenMenuBar;

        if $i1 != 1 goto label6;

        $z2 = 1;

(6)     goto label7;

     label6:
(7)     $z2_1 = 0;

     label7:
        $z2_2 = Phi($z2 #6, $z2_1 #7);

        return $z2_2;
    }

    public static boolean hasJava17()
    {
        return 1;
    }

    public static boolean isCaseInsensitiveFS()
    {
        boolean $z0, $z1, $z2, $z2_1, $z2_2;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isWindows();

        if $z0 != 0 goto label1;

        $z1 = org.gjt.sp.jedit.OperatingSystem.isMacOS();

        if $z1 == 0 goto label2;

     label1:
        $z2_1 = 1;

(0)     goto label3;

     label2:
(1)     $z2 = 0;

     label3:
        $z2_2 = Phi($z2_1 #0, $z2 #1);

        return $z2_2;
    }

    static void <clinit>()
    {
        java.lang.String r0, $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        char $c0;
        java.lang.StringBuilder $r1, $r2, $r3;

        org.gjt.sp.jedit.OperatingSystem.hasScreenMenuBar = -1;

        r0 = java.lang.System.getProperty("os.name");

        $z0 = r0.contains("Windows 9");

        if $z0 != 0 goto label1;

        $z1 = r0.contains("Windows M");

        if $z1 == 0 goto label2;

     label1:
        org.gjt.sp.jedit.OperatingSystem.os = 1600;

        goto label8;

     label2:
        $z2 = r0.contains("Windows");

        if $z2 == 0 goto label3;

        org.gjt.sp.jedit.OperatingSystem.os = 1638;

        goto label8;

     label3:
        $z3 = r0.contains("VMS");

        if $z3 == 0 goto label4;

        org.gjt.sp.jedit.OperatingSystem.os = 912082;

        goto label8;

     label4:
        $z4 = r0.contains("OS X");

        if $z4 == 0 goto label5;

        org.gjt.sp.jedit.OperatingSystem.os = 2748;

        goto label8;

     label5:
        $c0 = java.io.File.separatorChar;

        if $c0 != 47 goto label6;

        org.gjt.sp.jedit.OperatingSystem.os = 201527;

        goto label8;

     label6:
        $z5 = r0.contains("OS/2");

        if $z5 == 0 goto label7;

        org.gjt.sp.jedit.OperatingSystem.os = 57005;

        goto label8;

     label7:
        org.gjt.sp.jedit.OperatingSystem.os = 2989;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("Unknown operating system: ");

        $r3 = $r2.append(r0);

        $r4 = $r3.toString();

        org.gjt.sp.util.Log.log(7, class "org/gjt/sp/jedit/OperatingSystem", $r4);

     label8:
        return;
    }
}
