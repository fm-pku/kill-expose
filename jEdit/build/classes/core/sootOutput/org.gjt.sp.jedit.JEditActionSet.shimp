public abstract class org.gjt.sp.jedit.JEditActionSet extends java.lang.Object implements org.gjt.sp.jedit.input.InputHandlerProvider
{
    org.gjt.sp.jedit.JEditActionContext context;
    protected java.util.Hashtable actions;
    protected java.net.URL uri;
    protected boolean loaded;
    protected static final java.lang.Object placeholder;

    protected void <init>()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.util.Hashtable $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.Hashtable;

        Packer.Unpack(r0);

        specialinvoke $r1.<init>();

        r0.actions = $r1;

        Packer.Pack(r0);

        r0.loaded = 1;

        return;
    }

    protected void <init>(java.lang.String[], java.net.URL)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String[] r1, r3;
        java.net.URL r2;
        int i0, i1;
        java.lang.String r4;
        java.lang.Object $r5;
        java.util.Hashtable $r6;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        Packer.Unpack(r0);

        r0.uri = r2;

        Packer.Pack(r0);

(0)     if r1 == null goto label2;

        r3 = r1;

        i0 = lengthof r3;

(1)     i1 = 0;

     label1:
        i1 = Phi(i1 #1, i1 #3);

(2)     if i1 >= i0 goto label2;

        Packer.Unpack(r0);

        r4 = r3[i1];

        $r6 = r0.actions;

        $r5 = org.gjt.sp.jedit.JEditActionSet.placeholder;

        $r6.put(r4, $r5);

        Packer.Pack(r0);

        i1 = i1 + 1;

(3)     goto label1;

     label2:
        i1 = Phi(i1 #0, i1 #2);

        r0.loaded = 0;

        return;
    }

    public void addAction(org.gjt.sp.jedit.JEditAbstractEditAction)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        org.gjt.sp.jedit.JEditAbstractEditAction r1;
        java.util.Hashtable $r2, $r8;
        java.lang.String $r3, $r9;
        org.gjt.sp.jedit.JEditActionContext $r5, $r6, $r7;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.actions;

        $r3 = r1.getName();

        Packer.Unpack(r0);

        $r2.put($r3, r1);

        Packer.Pack(r0);

        $r5 = r0.context;

        if $r5 == null goto label1;

        $r6 = r0.context;

        $r6.actionNames = null;

        $r7 = r0.context;

        $r8 = $r7.actionHash;

        $r9 = r1.getName();

        $r8.put($r9, r0);

     label1:
        return;
    }

    public void removeAction(java.lang.String)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String r1;
        java.util.Hashtable $r2, $r7;
        org.gjt.sp.jedit.JEditActionContext $r4, $r5, $r6;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.actions;

        Packer.Unpack(r0);

        $r2.remove(r1);

        Packer.Pack(r0);

        $r4 = r0.context;

        if $r4 == null goto label1;

        Packer.Unpack(r0);

        $r5 = r0.context;

        $r5.actionNames = null;

        $r6 = r0.context;

        $r7 = $r6.actionHash;

        Packer.Unpack($r6);

        $r7.remove(r1);

     label1:
        Packer.Pack($r6);

        Packer.Pack(r0);

        return;
    }

    public void removeAllActions()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3;
        org.gjt.sp.jedit.JEditActionContext $r4, $r6, $r7;
        java.util.Hashtable $r5, $r8;

        r0 := @this;

        $r4 = r0.context;

(0)     if $r4 == null goto label2;

        $r6 = r0.context;

        $r6.actionNames = null;

        r1 = r0.getActionNames();

        r2 = r1;

        i0 = lengthof r2;

(1)     i1 = 0;

     label1:
        Packer.Unpack(r0);

        i1 = Phi(i1 #1, i1 #3);

(2)     if i1 >= i0 goto label2;

        Packer.Unpack($r7);

        r3 = r2[i1];

        $r7 = r0.context;

        $r8 = $r7.actionHash;

        $r8.remove(r3);

        Packer.Pack($r7);

        i1 = i1 + 1;

(3)     goto label1;

     label2:
        Packer.Unpack(r0);

        i1 = Phi(i1 #0, i1 #2);

        $r5 = r0.actions;

        $r5.clear();

        Packer.Pack(r0);

        return;
    }

    public org.gjt.sp.jedit.JEditAbstractEditAction getAction(java.lang.String)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String r1;
        java.util.Hashtable $r2, $r5;
        java.lang.Object $r3, $r6, r7, r7_1, r7_2, r7_3;
        org.gjt.sp.jedit.JEditAbstractEditAction $r4;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.actions;

        Packer.Unpack(r0);

        r7 = $r2.get(r1);

        Packer.Pack(r0);

        $r3 = org.gjt.sp.jedit.JEditActionSet.placeholder;

(0)     if r7 != $r3 goto label1;

        r0.load();

        $r5 = r0.actions;

        Packer.Unpack(r0);

        r7_1 = $r5.get(r1);

        Packer.Pack(r0);

        $r6 = org.gjt.sp.jedit.JEditActionSet.placeholder;

(1)     if r7_1 != $r6 goto label1;

        org.gjt.sp.util.Log.log(7, r0, "Outdated cache");

(2)     r7_2 = null;

     label1:
        r7_3 = Phi(r7 #0, r7_1 #1, r7_2 #2);

        $r4 = (org.gjt.sp.jedit.JEditAbstractEditAction) r7_3;

        return $r4;
    }

    public int getActionCount()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this;

        $r1 = r0.actions;

        Packer.Unpack(r0);

        $i0 = $r1.size();

        Packer.Pack(r0);

        return $i0;
    }

    public java.lang.String[] getActionNames()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String[] r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.lang.String r4;
        java.util.Hashtable $r5, $r6;
        int $i0, $i1, i2;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this;

        $r5 = r0.actions;

        Packer.Unpack(r0);

        $i0 = $r5.size();

        r1 = newarray (java.lang.String)[$i0];

        $r6 = r0.actions;

        r2 = $r6.keySet();

        Packer.Pack(r0);

        i2 = 0;

(0)     r3 = r2.iterator();

     label1:
        i2 = Phi(i2 #0, i2 #1);

        $z0 = r3.hasNext();

        if $z0 == 0 goto label2;

        $r7 = r3.next();

        r4 = (java.lang.String) $r7;

        $i1 = i2;

        i2 = i2 + 1;

        r1[$i1] = r4;

(1)     goto label1;

     label2:
        return r1;
    }

    public java.lang.String[] getCacheableActionNames()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.util.LinkedList r1, $r4;
        java.util.Iterator r2;
        java.lang.Object r3, $r10;
        java.util.Hashtable $r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        int $i0;
        java.lang.String[] $r7, $r9;
        java.lang.Object[] $r8;
        org.gjt.sp.jedit.JEditBeanShellAction $r11;
        java.lang.String $r12;

        r0 := @this;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<init>();

        r1 = $r4;

        $r5 = r0.actions;

        Packer.Unpack(r0);

        $r6 = $r5.values();

        Packer.Pack(r0);

        r2 = $r6.iterator();

     label1:
        $z0 = r2.hasNext();

        if $z0 == 0 goto label4;

        r3 = r2.next();

        $r10 = org.gjt.sp.jedit.JEditActionSet.placeholder;

        if r3 != $r10 goto label2;

        org.gjt.sp.util.Log.log(7, r0, "Action set not up to date");

        goto label3;

     label2:
        $z1 = r3 instanceof org.gjt.sp.jedit.JEditBeanShellAction;

        if $z1 == 0 goto label3;

        $r11 = (org.gjt.sp.jedit.JEditBeanShellAction) r3;

        $r12 = $r11.getName();

        r1.add($r12);

     label3:
        goto label1;

     label4:
        $i0 = r1.size();

        $r7 = newarray (java.lang.String)[$i0];

        $r8 = r1.toArray($r7);

        $r9 = (java.lang.String[]) $r8;

        return $r9;
    }

    protected abstract org.gjt.sp.jedit.JEditAbstractEditAction[] getArray(int);

    public org.gjt.sp.jedit.JEditAbstractEditAction[] getActions()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        org.gjt.sp.jedit.JEditAbstractEditAction[] r1;
        java.util.Collection r2;
        java.util.Iterator r3;
        java.lang.Object r4;
        java.util.Hashtable $r5, $r6;
        int $i0, $i1, i2;
        boolean $z0;
        org.gjt.sp.jedit.JEditAbstractEditAction $r7;

        r0 := @this;

        r0.load();

        $r5 = r0.actions;

        Packer.Unpack(r0);

        $i0 = $r5.size();

        Packer.Pack(r0);

        r1 = r0.getArray($i0);

        $r6 = r0.actions;

        Packer.Unpack(r0);

        r2 = $r6.values();

        Packer.Pack(r0);

        i2 = 0;

(0)     r3 = r2.iterator();

     label1:
        i2 = Phi(i2 #0, i2 #1);

        $z0 = r3.hasNext();

        if $z0 == 0 goto label2;

        r4 = r3.next();

        $i1 = i2;

        i2 = i2 + 1;

        $r7 = (org.gjt.sp.jedit.JEditAbstractEditAction) r4;

        r1[$i1] = $r7;

(1)     goto label1;

     label2:
        return r1;
    }

    public boolean contains(java.lang.String)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.lang.String r1;
        boolean z0;
        java.util.Hashtable $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.actions;

        Packer.Unpack(r0);

        z0 = $r2.containsKey(r1);

        Packer.Pack(r0);

        return z0;
    }

    public int size()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.util.Hashtable $r1;
        int $i0;

        r0 := @this;

        $r1 = r0.actions;

        Packer.Unpack(r0);

        $i0 = $r1.size();

        Packer.Pack(r0);

        return $i0;
    }

    public void load()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.io.FileNotFoundException r1, $r17;
        boolean $z0, $z1;
        java.net.URL $r2, $r5, $r9, $r11, $r14, $r20, $r24;
        java.lang.StringBuilder $r3, $r4, $r6, $r12, $r13, $r15, $r18, $r19, $r21;
        java.lang.String $r7, $r10, $r16, $r22;
        org.gjt.sp.jedit.ActionListHandler $r8, r25;
        java.io.IOException $r23, r27;
        java.io.InputStream r26, r26_1, r26_2, r26_3, r26_4, r26_5;

        r0 := @this;

        $z0 = r0.loaded;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.loaded = 1;

        $r2 = r0.uri;

        if $r2 != null goto label2;

        return;

     label2:
(0)     $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append("Loading actions from ");

        $r5 = r0.uri;

        Packer.Unpack(r0);

        $r6 = $r4.append($r5);

        Packer.Pack(r0);

        $r7 = $r6.toString();

        org.gjt.sp.util.Log.log(1, r0, $r7);

        $r8 = new org.gjt.sp.jedit.ActionListHandler;

        $r9 = r0.uri;

        Packer.Unpack(r0);

        $r10 = $r9.toString();

        Packer.Pack(r0);

        specialinvoke $r8.<init>($r10, r0);

        r25 = $r8;

     label3:
(1)     $r11 = r0.uri;

        Packer.Unpack(r0);

        r26 = $r11.openStream();

     label4:
        Packer.Pack(r0);

(2)     goto label6;

     label5:
        $r17 := @caughtexception;

        r26_1 = Phi(r26 #1);

        r1 = $r17;

        r26_2 = null;

(3)     $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<init>();

        $r19 = $r18.append("Unable to open: ");

        $r20 = r0.uri;

        Packer.Unpack(r0);

        $r21 = $r19.append($r20);

        Packer.Pack(r0);

        $r22 = $r21.toString();

(4)     org.gjt.sp.util.Log.log(7, r0, $r22);

     label6:
        r26_3 = Phi(r26 #2, r26_2 #4);

(5)     if r26_3 == null goto label7;

        $z1 = org.gjt.sp.util.XMLUtilities.parseXML(r26_3, r25);

        if $z1 == 0 goto label7;

        Packer.Unpack(r0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r13 = $r12.append("Unable to parse: ");

        $r14 = r0.uri;

        $r15 = $r13.append($r14);

        Packer.Pack(r0);

        $r16 = $r15.toString();

        org.gjt.sp.util.Log.log(9, r0, $r16);

     label7:
(6)     goto label9;

     label8:
        $r23 := @caughtexception;

        r26_4 = Phi(r26 #0, r26_2 #3, r26_3 #5);

        r27 = $r23;

        $r24 = r0.uri;

        Packer.Unpack(r0);

(7)     org.gjt.sp.util.Log.log(9, r0, $r24, r27);

     label9:
        Packer.Pack(r0);

        r26_5 = Phi(r26_3 #6, r26_4 #7);

        return;

        catch java.io.FileNotFoundException from label3 to label4 with label5;
        catch java.io.IOException from label2 to label7 with label8;
    }

    protected abstract org.gjt.sp.jedit.JEditAbstractEditAction createBeanShellAction(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean);

    public void initKeyBindings()
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        org.gjt.sp.jedit.input.AbstractInputHandler r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, r6, r7, $r14, $r18;
        java.util.Hashtable $r8;
        boolean $z0;
        java.lang.Object $r9, $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r15, $r16, $r17;

        r0 := @this;

        r1 = r0.getInputHandler();

        $r8 = r0.actions;

        Packer.Unpack(r0);

        r2 = $r8.entrySet();

        Packer.Pack(r0);

        r3 = r2.iterator();

     label1:
        $z0 = r3.hasNext();

        if $z0 == 0 goto label4;

        $r9 = r3.next();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = r4.getKey();

        r5 = (java.lang.String) $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        $r12 = $r11.append(r5);

        $r13 = $r12.append(".shortcut");

        $r14 = $r13.toString();

        r6 = r0.getProperty($r14);

        if r6 == null goto label2;

        r1.addKeyBinding(r6, r5);

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<init>();

        $r16 = $r15.append(r5);

        $r17 = $r16.append(".shortcut2");

        $r18 = $r17.toString();

        r7 = r0.getProperty($r18);

        if r7 == null goto label3;

        r1.addKeyBinding(r7, r5);

     label3:
        goto label1;

     label4:
        return;
    }

    protected abstract java.lang.String getProperty(java.lang.String);

    void getActionNames(java.util.List)
    {
        org.gjt.sp.jedit.JEditActionSet r0;
        java.util.List r1;
        java.util.Hashtable $r2;
        java.util.Set $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.actions;

        Packer.Unpack(r0);

        $r3 = $r2.keySet();

        Packer.Pack(r0);

        r1.addAll($r3);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<init>();

        org.gjt.sp.jedit.JEditActionSet.placeholder = $r0;

        return;
    }
}
