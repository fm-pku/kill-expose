public class org.gjt.sp.jedit.bsh.Remote extends java.lang.Object
{

    public void <init>()
    {
        org.gjt.sp.jedit.bsh.Remote r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;
        java.lang.String r1, r2, $r3;
        int i0, $i1;
        java.io.PrintStream $r4;

        r0 := @parameter0;

        $i1 = lengthof r0;

        if $i1 >= 2 goto label1;

        $r4 = java.lang.System.out;

        $r4.println("usage: Remote URL(http|bsh) file [ file ] ... ");

        java.lang.System.exit(1);

     label1:
        r1 = r0[0];

        $r3 = r0[1];

        r2 = org.gjt.sp.jedit.bsh.Remote.getFile($r3);

        i0 = org.gjt.sp.jedit.bsh.Remote.eval(r1, r2);

        java.lang.System.exit(i0);

        return;
    }

    public static int eval(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r1, r4, r4_1, r4_2, r4_3;
        boolean $z0, $z1;
        java.io.IOException $r2;
        int $i0;
        java.lang.Exception $r3;

        r0 := @parameter0;

        r1 := @parameter1;

        $z0 = r0.startsWith("http:");

        if $z0 == 0 goto label1;

        r4 = org.gjt.sp.jedit.bsh.Remote.doHttp(r0, r1);

(0)     goto label3;

     label1:
        $z1 = r0.startsWith("bsh:");

        if $z1 == 0 goto label2;

        r4_1 = org.gjt.sp.jedit.bsh.Remote.doBsh(r0, r1);

(1)     goto label3;

     label2:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<init>("Unrecognized URL type.Scheme must be http:// or bsh://");

        throw $r2;

     label3:
        r4_2 = Phi(r4 #0, r4_1 #1);

(2)     $i0 = java.lang.Integer.parseInt(r4_2);

     label4:
        return $i0;

     label5:
        $r3 := @caughtexception;

        r4_3 = Phi(r4 #0, r4_1 #1, r4_2 #2);

        return 0;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    static java.lang.String doBsh(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r3, r5, $r12, $r16, $r23, $r31, r32, r33, r34, r35, r36, r37, r38, r41;
        java.io.OutputStream r1;
        java.io.InputStream r2;
        java.io.BufferedReader r4, $r14;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r6, $r8, $r9, $r10, $r11, $r19, $r21, $r22, $r25, $r27, $r28, $r29, $r30;
        java.io.PrintStream $r7, $r17, $r20, $r26;
        java.net.Socket $r13, r40;
        java.io.InputStreamReader $r15;
        java.lang.Exception $r18, $r24, r39, r42;

        r32 := @parameter0;

        r0 := @parameter1;

        r33 = "";

        r34 = "";

        r35 = "-1";

        r3 = r32;

     label1:
        r36 = r32.substring(6);

        i4 = r36.indexOf(":");

        r37 = r36.substring(0, i4);

        $i0 = i4 + 1;

        $i1 = r36.length();

        r38 = r36.substring($i0, $i1);

     label2:
        goto label4;

     label3:
        $r24 := @caughtexception;

        r39 = $r24;

        $r26 = java.lang.System.err;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<init>();

        $r27 = $r25.append("Bad URL: ");

        $r28 = $r27.append(r3);

        $r29 = $r28.append(": ");

        $r30 = $r29.append(r39);

        $r31 = $r30.toString();

        $r26.println($r31);

        return r35;

     label4:
        $r7 = java.lang.System.out;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r8 = $r6.append("Connecting to host : ");

        $r9 = $r8.append(r37);

        $r10 = $r9.append(" at port : ");

        $r11 = $r10.append(r38);

        $r12 = $r11.toString();

        $r7.println($r12);

        $r13 = new java.net.Socket;

        $i2 = java.lang.Integer.parseInt(r38);

        $i3 = $i2 + 1;

        specialinvoke $r13.<init>(r37, $i3);

        r40 = $r13;

        r1 = r40.getOutputStream();

        r2 = r40.getInputStream();

        org.gjt.sp.jedit.bsh.Remote.sendLine(r0, r1);

        $r14 = new java.io.BufferedReader;

        $r15 = new java.io.InputStreamReader;

        specialinvoke $r15.<init>(r2);

        specialinvoke $r14.<init>($r15);

        r4 = $r14;

     label5:
        $r16 = r4.readLine();

        r5 = $r16;

        if $r16 == null goto label6;

        $r17 = java.lang.System.out;

        $r17.println(r5);

        goto label5;

     label6:
        r41 = "1";

     label7:
        return r41;

     label8:
        $r18 := @caughtexception;

        r42 = $r18;

        $r20 = java.lang.System.err;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<init>();

        $r21 = $r19.append("Error communicating with server: ");

        $r22 = $r21.append(r42);

        $r23 = $r22.toString();

        $r20.println($r23);

        return r35;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label7 with label8;
    }

    private static void sendLine(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.String r0;
        java.io.OutputStream r1;
        byte[] $r2;

        r0 := @parameter0;

        r1 := @parameter1;

        $r2 = r0.getBytes();

        r1.write($r2);

        r1.flush();

        return;
    }

    static java.lang.String doHttp(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r3, r7, $r11, $r21, $r26, $r32, r37, r37_1;
        java.lang.StringBuilder r2, $r8, $r22, $r24, $r25, $r28, $r30, $r31;
        java.net.HttpURLConnection r4;
        java.io.PrintWriter r5, $r15;
        int i0;
        java.io.BufferedReader r6, $r18;
        java.net.URL $r13, r38;
        java.net.URLConnection $r14;
        java.io.OutputStreamWriter $r16;
        java.io.OutputStream $r17;
        java.io.InputStreamReader $r19;
        java.io.InputStream $r20;
        java.io.PrintStream $r23, $r27, $r29, $r34, $r36;
        java.io.IOException $r33, r40;
        java.net.MalformedURLException $r35, r39;

        r0 := @parameter0;

        r1 := @parameter1;

        r37 = null;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        r2 = $r8;

        r2.append("bsh.client=Remote");

        r2.append("&bsh.script=");

        $r11 = java.net.URLEncoder.encode(r1);

        r2.append($r11);

        r3 = r2.toString();

     label1:
(0)     $r13 = new java.net.URL;

        specialinvoke $r13.<init>(r0);

        r38 = $r13;

        $r14 = r38.openConnection();

        r4 = (java.net.HttpURLConnection) $r14;

        r4.setRequestMethod("POST");

        r4.setRequestProperty("Content-type", "application/x-www-form-urlencoded");

        r4.setDoOutput(1);

        r4.setDoInput(1);

        $r15 = new java.io.PrintWriter;

        $r16 = new java.io.OutputStreamWriter;

        $r17 = r4.getOutputStream();

        specialinvoke $r16.<init>($r17, "8859_1");

        specialinvoke $r15.<init>($r16, 1);

        r5 = $r15;

        r5.print(r3);

        r5.flush();

        i0 = r4.getResponseCode();

        if i0 == 200 goto label2;

        $r29 = java.lang.System.out;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        $r30 = $r28.append("Error, HTTP response: ");

        $r31 = $r30.append(i0);

        $r32 = $r31.toString();

        $r29.println($r32);

     label2:
(1)     r37_1 = r4.getHeaderField("Bsh-Return");

        $r18 = new java.io.BufferedReader;

        $r19 = new java.io.InputStreamReader;

        $r20 = r4.getInputStream();

        specialinvoke $r19.<init>($r20);

        specialinvoke $r18.<init>($r19);

(2)     r6 = $r18;

     label3:
        r37 = Phi(r37_1 #2, r37 #4);

(3)     $r21 = r6.readLine();

        r7 = $r21;

        if $r21 == null goto label4;

        $r27 = java.lang.System.out;

        $r27.println(r7);

(4)     goto label3;

     label4:
        $r23 = java.lang.System.out;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<init>();

        $r24 = $r22.append("Return Value: ");

        $r25 = $r24.append(r37);

        $r26 = $r25.toString();

        $r23.println($r26);

     label5:
(5)     goto label8;

     label6:
        $r35 := @caughtexception;

        r37 = Phi(r37 #0, r37_1 #1, r37 #3);

        r39 = $r35;

        $r36 = java.lang.System.out;

        $r36.println(r39);

(6)     goto label8;

     label7:
        $r33 := @caughtexception;

        r37 = Phi(r37 #0, r37_1 #1, r37 #3);

        r40 = $r33;

        $r34 = java.lang.System.out;

(7)     $r34.println(r40);

     label8:
        r37 = Phi(r37 #5, r37 #6, r37 #7);

        return r37;

        catch java.net.MalformedURLException from label1 to label5 with label6;
        catch java.io.IOException from label1 to label5 with label7;
    }

    static java.lang.String getFile(java.lang.String) throws java.io.FileNotFoundException, java.io.IOException
    {
        java.lang.String r0, r3, $r7, $r8;
        java.lang.StringBuilder r1, $r4, $r9;
        java.io.BufferedReader r2, $r5;
        java.io.FileReader $r6;

        r0 := @parameter0;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        r1 = $r4;

        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.FileReader;

        specialinvoke $r6.<init>(r0);

        specialinvoke $r5.<init>($r6);

        r2 = $r5;

     label1:
        $r7 = r2.readLine();

        r3 = $r7;

        if $r7 == null goto label2;

        $r9 = r1.append(r3);

        $r9.append("\n");

        goto label1;

     label2:
        $r8 = r1.toString();

        return $r8;
    }
}
