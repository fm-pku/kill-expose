public class org.gjt.sp.jedit.menu.ReloadWithEncodingProvider extends java.lang.Object implements java.awt.event.ActionListener, org.gjt.sp.jedit.menu.DynamicMenuProvider
{
    private org.gjt.sp.jedit.View view;

    public void <init>()
    {
        org.gjt.sp.jedit.menu.ReloadWithEncodingProvider r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public boolean updateEveryTime()
    {
        org.gjt.sp.jedit.menu.ReloadWithEncodingProvider r0;

        r0 := @this;

        return 0;
    }

    public void update(javax.swing.JMenu)
    {
        org.gjt.sp.jedit.menu.ReloadWithEncodingProvider r0;
        javax.swing.JMenuItem r1, r3, $r6, $r9, $r12, r26;
        java.lang.String r2, $r7, $r10, $r13, $r16, $r18, $r21;
        javax.swing.JMenu r4, $r20, r23;
        org.gjt.sp.jedit.View $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        java.lang.StringBuilder $r14, $r15, $r17;
        java.lang.String[] r24, r25, r24_1, r24_2;

        r0 := @this;

        r23 := @parameter0;

        $r5 = org.gjt.sp.jedit.GUIUtilities.getView(r23);

        r0.view = $r5;

        $r6 = new javax.swing.JMenuItem;

        $r7 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.commands.encoding.auto-detect");

        specialinvoke $r6.<init>($r7);

        r1 = $r6;

        r1.setActionCommand("auto-detect");

        r1.addActionListener(r0);

        r23.add(r1);

        r23.addSeparator();

        r24 = org.gjt.sp.jedit.MiscUtilities.getEncodings(1);

        r2 = java.lang.System.getProperty("file.encoding");

        $i0 = java.util.Arrays.binarySearch(r24, r2);

(0)     if $i0 >= 0 goto label1;

        $i4 = lengthof r24;

        $i5 = $i4 + 1;

        r25 = newarray (java.lang.String)[$i5];

        $i6 = lengthof r24;

        java.lang.System.arraycopy(r24, 0, r25, 0, $i6);

        $i7 = lengthof r24;

        r25[$i7] = r2;

(1)     r24_1 = r25;

     label1:
        r24_2 = Phi(r24 #0, r24_1 #1);

        java.util.Arrays.sort(r24_2);

        i8 = org.gjt.sp.jedit.jEdit.getIntegerProperty("menu.spillover", 20);

(2)     i9 = 0;

     label2:
        r23 = Phi(r23 #2, r23 #6);

        i9 = Phi(i9 #2, i9 #6);

        r24 = Phi(r24_2 #2, r24 #6);

        $i1 = lengthof r24;

        if i9 >= $i1 goto label4;

        $r12 = new javax.swing.JMenuItem;

        $r13 = r24[i9];

        specialinvoke $r12.<init>($r13);

        r3 = $r12;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<init>();

        $r15 = $r14.append("encoding@");

        $r16 = r24[i9];

        $r17 = $r15.append($r16);

        $r18 = $r17.toString();

        r3.setActionCommand($r18);

        r3.addActionListener(r0);

        $i2 = r23.getMenuComponentCount();

(3)     if $i2 < i8 goto label3;

        $i3 = lengthof r24;

(4)     if i9 >= $i3 goto label3;

        $r20 = new javax.swing.JMenu;

        $r21 = org.gjt.sp.jedit.jEdit.getProperty("common.more");

        specialinvoke $r20.<init>($r21);

        r4 = $r20;

        r23.add(r4);

(5)     r23 = r4;

     label3:
        r23 = Phi(r23 #3, r23 #4, r23 #5);

        r23.add(r3);

        i9 = i9 + 1;

(6)     goto label2;

     label4:
        r23.addSeparator();

        $r9 = new javax.swing.JMenuItem;

        $r10 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.other-encoding.label");

        specialinvoke $r9.<init>($r10);

        r26 = $r9;

        r26.setActionCommand("other-encoding");

        r26.addActionListener(r0);

        r23.add(r26);

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.gjt.sp.jedit.menu.ReloadWithEncodingProvider r0;
        java.awt.event.ActionEvent r1;
        javax.swing.JMenuItem r2;
        java.lang.String r3, $r5, $r20, $r21, $r24, r25, r27, r28, r25_1, r25_2, r25_3;
        java.lang.Object $r4;
        boolean $z0, $z1, $z3;
        org.gjt.sp.jedit.View $r6, $r8, $r9, $r11, $r17, $r19, $r23;
        org.gjt.sp.jedit.Buffer $r7, $r10, $r18;
        java.util.Hashtable $r13, r26, r26_1, r26_2;
        java.lang.Boolean $r15;
        java.lang.Object[] $r22;

        r0 := @this;

        r1 := @parameter0;

        $r4 = r1.getSource();

        r2 = (javax.swing.JMenuItem) $r4;

        r3 = r2.getActionCommand();

        r25 = null;

        r26 = null;

        $z0 = r3.startsWith("encoding@");

        if $z0 == 0 goto label1;

        r25_1 = r3.substring(9);

(0)     goto label3;

     label1:
        $r5 = "other-encoding";

        $z1 = $r5.equals(r3);

(1)     if $z1 == 0 goto label3;

        $r19 = r0.view;

        $r20 = org.gjt.sp.jedit.jEdit.getProperty("encoding-prompt.message");

        $r21 = org.gjt.sp.jedit.jEdit.getProperty("encoding-prompt.title");

        r25_2 = javax.swing.JOptionPane.showInputDialog($r19, $r20, $r21, 3);

        if r25_2 != null goto label2;

        return;

     label2:
        $z3 = org.gjt.sp.jedit.io.EncodingServer.hasEncoding(r25_2);

(2)     if $z3 != 0 goto label3;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r25_2;

        r27 = org.gjt.sp.jedit.jEdit.getProperty("reload-encoding.error", $r22);

        $r23 = r0.view;

        $r24 = org.gjt.sp.jedit.jEdit.getProperty("common.error");

        javax.swing.JOptionPane.showMessageDialog($r23, r27, $r24, 0);

        return;

     label3:
        r25_3 = Phi(r25_1 #0, r25 #1, r25_2 #2);

(3)     if r25_3 == null goto label4;

        $r13 = new java.util.Hashtable;

        specialinvoke $r13.<init>();

        r26_1 = $r13;

        r26_1.put("encoding", r25_3);

        $r15 = java.lang.Boolean.valueOf(0);

        r26_1.put("encodingAutodetect", $r15);

        $r17 = r0.view;

        $r18 = $r17.getBuffer();

(4)     $r18.setStringProperty("encoding", r25_3);

     label4:
        r26_2 = Phi(r26 #3, r26_1 #4);

        $r6 = r0.view;

        $r7 = $r6.getBuffer();

        r28 = $r7.getPath();

        $r9 = r0.view;

        $r8 = r0.view;

        $r10 = $r8.getBuffer();

        org.gjt.sp.jedit.jEdit.closeBuffer($r9, $r10);

        $r11 = r0.view;

        org.gjt.sp.jedit.jEdit.openFile($r11, null, r28, 0, r26_2);

        return;
    }
}
