public class org.gjt.sp.jedit.bsh.TokenMgrError extends java.lang.Error
{
    static final int LEXICAL_ERROR;
    static final int STATIC_LEXER_ERROR;
    static final int INVALID_LEXICAL_STATE;
    static final int LOOP_DETECTED;
    int errorCode;

    protected static final java.lang.String addEscapes(java.lang.String)
    {
        java.lang.String r0, r2, $r4, $r15, $r19, $r21;
        java.lang.StringBuilder r1, $r3, $r13, $r14, $r16, $r17, $r18, $r20;
        char c0, $c2, $c3;
        int $i1, $i4, $i5, $i6, i7;

        r0 := @parameter0;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        r1 = $r3;

(0)     i7 = 0;

     label01:
        i7 = Phi(i7 #0, i7 #1);

        $i1 = r0.length();

        if i7 >= $i1 goto label15;

        $c2 = r0.charAt(i7);

        lookupswitch($c2)
        {
            case 0: goto label02;
            case 8: goto label03;
            case 9: goto label04;
            case 10: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 34: goto label08;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label02:
        goto label14;

     label03:
        r1.append("\\b");

        goto label14;

     label04:
        r1.append("\\t");

        goto label14;

     label05:
        r1.append("\\n");

        goto label14;

     label06:
        r1.append("\\f");

        goto label14;

     label07:
        r1.append("\\r");

        goto label14;

     label08:
        r1.append("\\\"");

        goto label14;

     label09:
        r1.append("\\\'");

        goto label14;

     label10:
        r1.append("\\\\");

        goto label14;

     label11:
        $c3 = r0.charAt(i7);

        c0 = $c3;

        if $c3 < 32 goto label12;

        if c0 <= 126 goto label13;

     label12:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r14 = $r13.append("0000");

        $r15 = java.lang.Integer.toString(c0, 16);

        $r16 = $r14.append($r15);

        r2 = $r16.toString();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r18 = $r17.append("\\u");

        $i4 = r2.length();

        $i5 = $i4 - 4;

        $i6 = r2.length();

        $r19 = r2.substring($i5, $i6);

        $r20 = $r18.append($r19);

        $r21 = $r20.toString();

        r1.append($r21);

        goto label14;

     label13:
        r1.append(c0);

     label14:
        i7 = i7 + 1;

(1)     goto label01;

     label15:
        $r4 = r1.toString();

        return $r4;
    }

    protected static java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char)
    {
        boolean z0;
        int i0, i1, i2;
        java.lang.String r0, $r9, $r10, $r18, $r21, $r22, $r22_1, $r22_2;
        char c3;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20;

        z0 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        i2 := @parameter3;

        r0 := @parameter4;

        c3 := @parameter5;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("Lexical error at line ");

        $r3 = $r2.append(i1);

        $r4 = $r3.append(", column ");

        $r5 = $r4.append(i2);

        $r6 = $r5.append(".  Encountered: ");

        if z0 == 0 goto label1;

        $r22 = "<EOF> ";

(0)     goto label2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r8 = $r7.append("\"");

        $r9 = java.lang.String.valueOf(c3);

        $r10 = org.gjt.sp.jedit.bsh.TokenMgrError.addEscapes($r9);

        $r11 = $r8.append($r10);

        $r12 = $r11.append("\"");

        $r13 = $r12.append(" (");

        $r14 = $r13.append(c3);

        $r15 = $r14.append("), ");

(1)     $r22_1 = $r15.toString();

     label2:
        $r22_2 = Phi($r22 #0, $r22_1 #1);

        $r16 = $r6.append($r22_2);

        $r17 = $r16.append("after : \"");

        $r18 = org.gjt.sp.jedit.bsh.TokenMgrError.addEscapes(r0);

        $r19 = $r17.append($r18);

        $r20 = $r19.append("\"");

        $r21 = $r20.toString();

        return $r21;
    }

    public java.lang.String getMessage()
    {
        org.gjt.sp.jedit.bsh.TokenMgrError r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = specialinvoke r0.getMessage();

        return $r1;
    }

    public void <init>()
    {
        org.gjt.sp.jedit.bsh.TokenMgrError r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void <init>(java.lang.String, int)
    {
        org.gjt.sp.jedit.bsh.TokenMgrError r0;
        java.lang.String r1;
        int i0;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        specialinvoke r0.<init>(r1);

        r0.errorCode = i0;

        return;
    }

    public void <init>(boolean, int, int, int, java.lang.String, char, int)
    {
        org.gjt.sp.jedit.bsh.TokenMgrError r0;
        boolean z0;
        int i0, i1, i2, i4;
        java.lang.String r1, $r2;
        char c3;

        r0 := @this;

        z0 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        i2 := @parameter3;

        r1 := @parameter4;

        c3 := @parameter5;

        i4 := @parameter6;

        $r2 = org.gjt.sp.jedit.bsh.TokenMgrError.LexicalError(z0, i0, i1, i2, r1, c3);

        specialinvoke r0.<init>($r2, i4);

        return;
    }
}
