public abstract class org.gjt.sp.jedit.indent.BracketIndentRule extends java.lang.Object implements org.gjt.sp.jedit.indent.IndentRule
{
    protected char openBracket;
    protected char closeBracket;

    public void <init>(char, char)
    {
        org.gjt.sp.jedit.indent.BracketIndentRule r0;
        char c0, c1;

        r0 := @this;

        c0 := @parameter0;

        c1 := @parameter1;

        specialinvoke r0.<init>();

        r0.openBracket = c0;

        r0.closeBracket = c1;

        return;
    }

    public org.gjt.sp.jedit.indent.BracketIndentRule$Brackets getBrackets(org.gjt.sp.jedit.buffer.JEditBuffer, int)
    {
        org.gjt.sp.jedit.indent.BracketIndentRule r0;
        org.gjt.sp.jedit.buffer.JEditBuffer r1;
        int i0, $i1;
        org.gjt.sp.jedit.indent.BracketIndentRule$Brackets $r2;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        $i1 = r1.getLineLength(i0);

        $r2 = r0.getBrackets(r1, i0, 0, $i1);

        return $r2;
    }

    public org.gjt.sp.jedit.indent.BracketIndentRule$Brackets getBrackets(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int)
    {
        org.gjt.sp.jedit.indent.BracketIndentRule r0;
        org.gjt.sp.jedit.buffer.JEditBuffer r1;
        int i0, i1, i2;
        org.gjt.sp.jedit.indent.BracketIndentRule$LineScanner r2, $r3;
        org.gjt.sp.jedit.indent.BracketIndentRule$Brackets $r4;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        i2 := @parameter3;

        $r3 = new org.gjt.sp.jedit.indent.BracketIndentRule$LineScanner;

        specialinvoke $r3.<init>(r0, i1, i2);

        r2 = $r3;

        r1.markTokens(i0, r2);

        $r4 = r2.result;

        return $r4;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.indent.BracketIndentRule r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.Class $r2;
        java.lang.String $r3, $r10;
        char $c0, $c1;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = r0.getClass();

        $r3 = $r2.getName();

        $r4 = $r1.append($r3);

        $r5 = $r4.append("[");

        $c0 = r0.openBracket;

        $r6 = $r5.append($c0);

        $r7 = $r6.append(",");

        $c1 = r0.closeBracket;

        $r8 = $r7.append($c1);

        $r9 = $r8.append("]");

        $r10 = $r9.toString();

        return $r10;
    }
}
