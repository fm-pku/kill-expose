public class org.gjt.sp.jedit.bsh.UtilEvalError extends java.lang.Exception
{

    protected void <init>()
    {
        org.gjt.sp.jedit.bsh.UtilEvalError r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.gjt.sp.jedit.bsh.UtilEvalError r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>(r1);

        return;
    }

    public org.gjt.sp.jedit.bsh.EvalError toEvalError(java.lang.String, org.gjt.sp.jedit.bsh.SimpleNode, org.gjt.sp.jedit.bsh.CallStack)
    {
        org.gjt.sp.jedit.bsh.UtilEvalError r0;
        org.gjt.sp.jedit.bsh.SimpleNode r1;
        org.gjt.sp.jedit.bsh.CallStack r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r10;
        org.gjt.sp.jedit.bsh.EvalError $r6;
        java.lang.String $r9, $r11, r12, r13, r13_1, r13_2;

        r0 := @this;

        r12 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        $z0 = org.gjt.sp.jedit.bsh.Interpreter.DEBUG;

        if $z0 == 0 goto label1;

        r0.printStackTrace();

     label1:
        if r12 != null goto label2;

        r13 = "";

(0)     goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append(r12);

        $r5 = $r4.append(": ");

(1)     r13_1 = $r5.toString();

     label3:
        r13_2 = Phi(r13 #0, r13_1 #1);

        $r6 = new org.gjt.sp.jedit.bsh.EvalError;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r8 = $r7.append(r13_2);

        $r9 = r0.getMessage();

        $r10 = $r8.append($r9);

        $r11 = $r10.toString();

        specialinvoke $r6.<init>($r11, r1, r2);

        return $r6;
    }

    public org.gjt.sp.jedit.bsh.EvalError toEvalError(org.gjt.sp.jedit.bsh.SimpleNode, org.gjt.sp.jedit.bsh.CallStack)
    {
        org.gjt.sp.jedit.bsh.UtilEvalError r0;
        org.gjt.sp.jedit.bsh.SimpleNode r1;
        org.gjt.sp.jedit.bsh.CallStack r2;
        org.gjt.sp.jedit.bsh.EvalError $r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = r0.toEvalError(null, r1, r2);

        return $r3;
    }
}
