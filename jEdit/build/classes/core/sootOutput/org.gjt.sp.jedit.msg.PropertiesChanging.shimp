public class org.gjt.sp.jedit.msg.PropertiesChanging extends org.gjt.sp.jedit.EBMessage
{
    private final org.gjt.sp.jedit.msg.PropertiesChanging$State state;
    static final boolean $assertionsDisabled;

    public void <init>(org.gjt.sp.jedit.EBComponent, org.gjt.sp.jedit.msg.PropertiesChanging$State)
    {
        org.gjt.sp.jedit.msg.PropertiesChanging r0;
        org.gjt.sp.jedit.EBComponent r1;
        org.gjt.sp.jedit.msg.PropertiesChanging$State r2;
        boolean $z0;
        java.lang.AssertionError $r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>(r1);

        $z0 = org.gjt.sp.jedit.msg.PropertiesChanging.$assertionsDisabled;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<init>("state shouldn\'t be null");

        throw $r3;

     label1:
        r0.state = r2;

        return;
    }

    public org.gjt.sp.jedit.msg.PropertiesChanging$State getState()
    {
        org.gjt.sp.jedit.msg.PropertiesChanging r0;
        org.gjt.sp.jedit.msg.PropertiesChanging$State $r1;

        r0 := @this;

        $r1 = r0.state;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1, $z1_1, $z1_2;

        $r0 = class "org/gjt/sp/jedit/msg/PropertiesChanging";

        $z0 = $r0.desiredAssertionStatus();

        if $z0 != 0 goto label1;

        $z1 = 1;

(0)     goto label2;

     label1:
(1)     $z1_1 = 0;

     label2:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        org.gjt.sp.jedit.msg.PropertiesChanging.$assertionsDisabled = $z1_2;

        return;
    }
}
