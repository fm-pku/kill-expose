public class org.gjt.sp.jedit.search.BoyerMooreSearchMatcher extends org.gjt.sp.jedit.search.SearchMatcher
{
    private char[] pattern;
    private int pattern_end;
    private boolean ignoreCase;
    private int[] fwd_skip;
    private int[] fwd_suffix;
    private int[] back_skip;
    private int[] back_suffix;

    public void <init>(java.lang.String, boolean)
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        specialinvoke r0.<init>(r1, z0, 0);

        return;
    }

    public void <init>(java.lang.String, boolean, boolean)
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        java.lang.String r1;
        boolean z0, z1;
        char[] $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, i5;
        char $c3, $c4;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        z1 := @parameter2;

        specialinvoke r0.<init>();

        $r2 = r1.toCharArray();

        r0.pattern = $r2;

(0)     if z0 == 0 goto label2;

(1)     i5 = 0;

     label1:
        i5 = Phi(i5 #1, i5 #3);

        $r4 = r0.pattern;

        $i2 = lengthof $r4;

(2)     if i5 >= $i2 goto label2;

        $r6 = r0.pattern;

        $r5 = r0.pattern;

        $c3 = $r5[i5];

        $c4 = java.lang.Character.toUpperCase($c3);

        $r6[i5] = $c4;

        i5 = i5 + 1;

(3)     goto label1;

     label2:
        i5 = Phi(i5 #0, i5 #2);

        r0.ignoreCase = z0;

        $r3 = r0.pattern;

        $i0 = lengthof $r3;

        $i1 = $i0 - 1;

        r0.pattern_end = $i1;

        r0.wholeWord = z1;

        return;
    }

    public org.gjt.sp.jedit.search.SearchMatcher$Match nextMatch(java.lang.CharSequence, boolean, boolean, boolean, boolean) throws java.lang.InterruptedException
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        java.lang.CharSequence r1, r2;
        boolean z0, z1, z2, z3, $z4, $z5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13;
        org.gjt.sp.jedit.search.SearchMatcher$Match r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        char[] $r5, $r12;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        z1 := @parameter2;

        z2 := @parameter3;

        z3 := @parameter4;

        i0 = r0.match(r1, z3);

        if i0 != -1 goto label1;

        return null;

     label1:
        $r4 = r0.returnValue;

        $r4.start = i0;

        $r6 = r0.returnValue;

        $r5 = r0.pattern;

        $i1 = lengthof $r5;

        $i2 = i0 + $i1;

        $r6.end = $i2;

        $r7 = r0.returnValue;

        i13 = $r7.end;

        $z4 = r0.wholeWord;

(0)     if $z4 == 0 goto label4;

     label2:
        i13 = Phi(i13 #0, i13 #2);

        $r9 = r0.returnValue;

        $i4 = $r9.start;

        $r10 = r0.returnValue;

        $i3 = $r10.end;

        $z5 = r0.isWholeWord(r1, $i4, $i3);

(1)     if $z5 != 0 goto label4;

        $r11 = r0.returnValue;

        $i5 = $r11.end;

        $i6 = r1.length();

        r2 = r1.subSequence($i5, $i6);

        r3 = r0.nextMatch(r2, z0, z1, z2, z3);

        if r3 != null goto label3;

        return null;

     label3:
        $i7 = r3.start;

        $i8 = $i7 + i13;

        r3.start = $i8;

        $i9 = r3.end;

        i13 = i13 + $i9;

        $i11 = r3.start;

        $r12 = r0.pattern;

        $i10 = lengthof $r12;

        $i12 = $i11 + $i10;

        r3.end = $i12;

(2)     goto label2;

     label4:
        i13 = Phi(i13 #0, i13 #1);

        $r8 = r0.returnValue;

        return $r8;
    }

    public int match(java.lang.CharSequence, boolean) throws java.lang.InterruptedException
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        java.lang.CharSequence r1;
        boolean z0, $z1, $z2, $z3, z4;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, i13, i14, $i16;
        int[] $r2, $r6, $r7, $r8, $r9, $r10, r12, r13, r12_1, r13_1, r13_2, r12_2;
        char[] $r3, $r4;
        char $c7, $c12, c15;
        java.lang.InterruptedException $r5, $r11;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        $z1 = java.lang.Thread.interrupted();

        if $z1 == 0 goto label01;

        $r11 = new java.lang.InterruptedException;

        specialinvoke $r11.<init>();

        throw $r11;

     label01:
        if z0 == 0 goto label03;

        $r8 = r0.back_skip;

        if $r8 != null goto label02;

        $r9 = specialinvoke r0.generateSkipArray(1);

        r0.back_skip = $r9;

        $r10 = specialinvoke r0.generateSuffixArray(1);

        r0.back_suffix = $r10;

     label02:
        r12 = r0.back_skip;

        r13 = r0.back_suffix;

(0)     goto label05;

     label03:
        $r2 = r0.fwd_skip;

        if $r2 != null goto label04;

        $r6 = specialinvoke r0.generateSkipArray(0);

        r0.fwd_skip = $r6;

        $r7 = specialinvoke r0.generateSuffixArray(0);

        r0.fwd_suffix = $r7;

     label04:
        r12_1 = r0.fwd_skip;

(1)     r13_1 = r0.fwd_suffix;

     label05:
        r13_2 = Phi(r13 #0, r13_1 #1);

        r12_2 = Phi(r12 #0, r12_1 #1);

        i13 = 0;

(2)     z4 = 0;

     label06:
        r13 = Phi(r13_2 #2, r13 #8);

        i13 = Phi(i13 #2, i13 #8);

        c15 = Phi(c15 #2, c15 #8);

        $i16 = Phi($i16 #2, $i16 #8);

        r12 = Phi(r12_2 #2, r12 #8);

        i14 = Phi(i14 #2, i14 #8);

        $i3 = r0.pattern_end;

        $i4 = i13 + $i3;

        $i5 = r1.length();

        if $i4 >= $i5 goto label16;

        $z2 = java.lang.Thread.interrupted();

        if $z2 == 0 goto label07;

        $r5 = new java.lang.InterruptedException;

        specialinvoke $r5.<init>();

        throw $r5;

     label07:
(3)     i14 = r0.pattern_end;

     label08:
        r13 = Phi(r13 #3, r13 #9);

        i13 = Phi(i13 #3, i13 #9);

        c15 = Phi(c15 #3, c15 #9);

        $i16 = Phi($i16 #3, $i16 #9);

        r12 = Phi(r12 #3, r12 #9);

        i14 = Phi(i14 #3, i14 #9);

        if i14 < 0 goto label15;

        $i6 = i14 + i13;

        c15 = r1.charAt($i6);

        $z3 = r0.ignoreCase;

(4)     if $z3 == 0 goto label09;

(5)     c15 = java.lang.Character.toUpperCase(c15);

     label09:
        c15 = Phi(c15 #4, c15 #5);

        if z0 == 0 goto label10;

        $r4 = r0.pattern;

        $i10 = r0.pattern_end;

        $i11 = $i10 - i14;

        $c12 = $r4[$i11];

        if c15 == $c12 goto label14;

        goto label11;

     label10:
        $r3 = r0.pattern;

        $c7 = $r3[i14];

        if c15 == $c7 goto label14;

     label11:
        $i8 = org.gjt.sp.jedit.search.BoyerMooreSearchMatcher.getSkipIndex(c15);

        $i9 = r12[$i8];

        i0 = i14 - $i9;

        i1 = r13[i14];

        if i0 <= i1 goto label12;

        $i16 = i0;

(6)     goto label13;

     label12:
(7)     $i16 = i1;

     label13:
        $i16 = Phi($i16 #6, $i16 #7);

        i2 = $i16;

        i13 = i13 + i2;

(8)     goto label06;

     label14:
        i14 = i14 + -1;

(9)     goto label08;

     label15:
        return i13;

     label16:
        return -1;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;
        char[] $r4;
        boolean $z0;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("BoyerMooreSearchMatcher[");

        $r3 = new java.lang.String;

        $r4 = r0.pattern;

        specialinvoke $r3.<init>($r4);

        $r5 = $r2.append($r3);

        $r6 = $r5.append(44);

        $z0 = r0.ignoreCase;

        $r7 = $r6.append($z0);

        $r8 = $r7.append(93);

        $r9 = $r8.toString();

        return $r9;
    }

    private int[] generateSkipArray(boolean)
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        boolean z0;
        int[] r1;
        char[] $r2, $r3, $r4;
        int $i0, $i2, $i3, $i4, i5, $i6;
        char $c1;

        r0 := @this;

        z0 := @parameter0;

        r1 = newarray (int)[256];

        $r2 = r0.pattern;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        return r1;

     label1:
(0)     i5 = 0;

     label2:
        $i6 = Phi($i6 #0, $i6 #3);

        i5 = Phi(i5 #0, i5 #3);

        $r3 = r0.pattern;

        if z0 == 0 goto label3;

        $i4 = r0.pattern_end;

        $i6 = $i4 - i5;

(1)     goto label4;

     label3:
(2)     $i6 = i5;

     label4:
        $i6 = Phi($i6 #1, $i6 #2);

        $c1 = $r3[$i6];

        $i2 = org.gjt.sp.jedit.search.BoyerMooreSearchMatcher.getSkipIndex($c1);

        r1[$i2] = i5;

        i5 = i5 + 1;

        $r4 = r0.pattern;

        $i3 = lengthof $r4;

(3)     if i5 < $i3 goto label2;

        return r1;
    }

    private static int getSkipIndex(char)
    {
        char c0, $c1;

        c0 := @parameter0;

        $c1 = c0 & 255;

        return $c1;
    }

    private int[] generateSuffixArray(boolean)
    {
        org.gjt.sp.jedit.search.BoyerMooreSearchMatcher r0;
        boolean z0;
        int i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, $i15, i16, i17, $i18;
        int[] r1, r2;
        char[] $r3, $r4, $r5;
        char $c4, $c5;

        r0 := @this;

        z0 := @parameter0;

        $r3 = r0.pattern;

        i0 = lengthof $r3;

        i12 = i0 + 1;

        r1 = newarray (int)[i12];

        r2 = newarray (int)[i12];

        r2[i0] = i12;

(0)     i13 = i0;

     label01:
        i13 = Phi(i13 #0, i13 #9);

        i12 = Phi(i12 #0, i12 #9);

        $i14 = Phi($i14 #0, $i14 #9);

        $i15 = Phi($i15 #0, $i15 #9);

(1)     if i13 <= 0 goto label09;

     label02:
        i13 = Phi(i13 #1, i13 #8);

        i12 = Phi(i12 #1, i12 #8);

        $i14 = Phi($i14 #1, $i14 #8);

        $i15 = Phi($i15 #1, $i15 #8);

(2)     if i12 > i0 goto label08;

        $r4 = r0.pattern;

        if z0 == 0 goto label03;

        $i10 = r0.pattern_end;

        $i11 = $i10 - i13;

        $i14 = $i11 + 1;

(3)     goto label04;

     label03:
(4)     $i14 = i13 - 1;

     label04:
        $i14 = Phi($i14 #3, $i14 #4);

        $c5 = $r4[$i14];

        $r5 = r0.pattern;

        if z0 == 0 goto label05;

        $i8 = r0.pattern_end;

        $i9 = $i8 - i12;

        $i15 = $i9 + 1;

(5)     goto label06;

     label05:
(6)     $i15 = i12 - 1;

     label06:
        $i15 = Phi($i15 #5, $i15 #6);

        $c4 = $r5[$i15];

(7)     if $c5 == $c4 goto label08;

        $i6 = r1[i12];

        if $i6 != 0 goto label07;

        $i7 = i12 - i13;

        r1[i12] = $i7;

     label07:
        i12 = r2[i12];

(8)     goto label02;

     label08:
        $i14 = Phi($i14 #2, $i14 #7);

        $i15 = Phi($i15 #2, $i15 #7);

        $i3 = i13 - 1;

        i12 = i12 + -1;

        r2[$i3] = i12;

        i13 = i13 + -1;

(9)     goto label01;

     label09:
        i16 = r2[0];

(10)    i17 = 0;

     label10:
        i13 = Phi(i13 #10, i13 #17);

        $i18 = Phi($i18 #10, $i18 #17);

        i17 = Phi(i17 #10, i17 #17);

        i12 = Phi(i12 #10, i12 #17);

        $i14 = Phi($i14 #10, $i14 #17);

        i16 = Phi(i16 #10, i16 #17);

        $i15 = Phi($i15 #10, $i15 #17);

        if i17 > i0 goto label15;

(11)    if i17 <= 0 goto label13;

        $i2 = i17 - 1;

        $i1 = r1[i17];

        if $i1 != 0 goto label11;

        $i18 = i16;

(12)    goto label12;

     label11:
(13)    $i18 = r1[i17];

     label12:
        $i18 = Phi($i18 #12, $i18 #13);

(14)    r1[$i2] = $i18;

     label13:
        $i18 = Phi($i18 #11, $i18 #14);

(15)    if i17 != i16 goto label14;

(16)    i16 = r2[i16];

     label14:
        i16 = Phi(i16 #15, i16 #16);

        i17 = i17 + 1;

(17)    goto label10;

     label15:
        return r1;
    }
}
