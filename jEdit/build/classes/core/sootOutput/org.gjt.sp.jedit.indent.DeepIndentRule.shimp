public class org.gjt.sp.jedit.indent.DeepIndentRule extends java.lang.Object implements org.gjt.sp.jedit.indent.IndentRule
{
    private final char openChar;
    private final char closeChar;

    public void <init>(char, char)
    {
        org.gjt.sp.jedit.indent.DeepIndentRule r0;
        char c0, c1;

        r0 := @this;

        c0 := @parameter0;

        c1 := @parameter1;

        specialinvoke r0.<init>();

        r0.openChar = c0;

        r0.closeChar = c1;

        return;
    }

    public void apply(org.gjt.sp.jedit.buffer.JEditBuffer, int, int, int, java.util.List)
    {
        org.gjt.sp.jedit.indent.DeepIndentRule r0;
        org.gjt.sp.jedit.buffer.JEditBuffer r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16, i17, i18;
        java.util.List r2;
        org.gjt.sp.jedit.indent.DeepIndentRule$Parens r3, $r4;
        org.gjt.sp.jedit.indent.IndentAction$AlignParameter $r5;
        java.lang.CharSequence r6;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        i13 := @parameter3;

        r2 := @parameter4;

        if i1 != -1 goto label1;

        return;

     label1:
        i14 = i1;

        i15 = i14;

        r6 = r1.getLineSegment(i14);

(0)     i16 = -1;

     label2:
        r6 = Phi(r6 #0, r6 #3, r6 #6);

        i14 = Phi(i14 #0, i14 #3, i14 #6);

        i16 = Phi(i16 #0, i16 #3, i16 #6);

        i15 = Phi(i15 #0, i15 #3, i15 #6);

        i13 = Phi(i13 #0, i13 #3, i13 #6);

(1)     if i14 == i15 goto label3;

        r6 = r1.getLineSegment(i14);

(2)     i15 = i14;

     label3:
        r6 = Phi(r6 #1, r6 #2);

        i15 = Phi(i15 #1, i15 #2);

        $r4 = new org.gjt.sp.jedit.indent.DeepIndentRule$Parens;

        specialinvoke $r4.<init>(r0, r1, i14, i16);

        r3 = $r4;

        $i2 = r3.openOffset;

        if $i2 != -1 goto label5;

        $i12 = r3.closeOffset;

        if $i12 != -1 goto label5;

        if i13 == -1 goto label4;

        i16 = -1;

        i14 = i13;

        i13 = -1;

(3)     goto label2;

     label4:
        return;

     label5:
        $i3 = r3.closeOffset;

        if $i3 != -1 goto label6;

        $i7 = r3.openOffset;

        $i8 = r1.getTabSize();

        $i9 = specialinvoke r0.getIndent(r6, $i8);

        $i10 = $i7 + $i9;

        $i11 = r6.length();

        i17 = $i10 - $i11;

        r2.clear();

        $r5 = new org.gjt.sp.jedit.indent.IndentAction$AlignParameter;

        specialinvoke $r5.<init>(i17);

        r2.add($r5);

        return;

     label6:
        $i4 = r3.closeOffset;

        i18 = org.gjt.sp.jedit.TextUtilities.findMatchingBracket(r1, i14, $i4);

(4)     if i18 < 0 goto label8;

        i13 = -1;

        i14 = r1.getLineOfOffset(i18);

        $i5 = r1.getLineStartOffset(i14);

        $i6 = i18 - $i5;

        i16 = $i6 - 1;

        if i16 >= 0 goto label7;

(5)     goto label8;

     label7:
(6)     goto label2;

     label8:
        i14 = Phi(i14 #4, i14 #5);

        i16 = Phi(i16 #4, i16 #5);

        i13 = Phi(i13 #4, i13 #5);

        return;
    }

    private int getIndent(java.lang.CharSequence, int)
    {
        org.gjt.sp.jedit.indent.DeepIndentRule r0;
        java.lang.CharSequence r1;
        int i0, $i1, $i4, $i5, i6, i7;
        char $c2, $c3;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        i6 = 0;

(0)     i7 = 0;

     label1:
        i7 = Phi(i7 #0, i7 #5);

        i6 = Phi(i6 #0, i6 #5);

        $i1 = r1.length();

(1)     if i7 >= $i1 goto label5;

        $c2 = r1.charAt(i7);

        if $c2 != 9 goto label2;

        i6 = i6 + i0;

(2)     goto label4;

     label2:
        $c3 = r1.charAt(i7);

        $z0 = java.lang.Character.isWhitespace($c3);

        if $z0 != 0 goto label3;

        $i4 = r1.length();

        $i5 = $i4 - i7;

        i6 = i6 + $i5;

(3)     goto label5;

     label3:
(4)     i6 = i6 + 1;

     label4:
        i6 = Phi(i6 #2, i6 #4);

        i7 = i7 + 1;

(5)     goto label1;

     label5:
        i6 = Phi(i6 #1, i6 #3);

        return i6;
    }

    static char access$000(org.gjt.sp.jedit.indent.DeepIndentRule)
    {
        org.gjt.sp.jedit.indent.DeepIndentRule r0;
        char $c0;

        r0 := @parameter0;

        $c0 = r0.openChar;

        return $c0;
    }

    static char access$100(org.gjt.sp.jedit.indent.DeepIndentRule)
    {
        org.gjt.sp.jedit.indent.DeepIndentRule r0;
        char $c0;

        r0 := @parameter0;

        $c0 = r0.closeChar;

        return $c0;
    }
}
