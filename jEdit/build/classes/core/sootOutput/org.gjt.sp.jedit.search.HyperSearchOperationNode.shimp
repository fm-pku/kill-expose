public class org.gjt.sp.jedit.search.HyperSearchOperationNode extends java.lang.Object
{
    private boolean treeViewDisplayed;
    private final java.lang.String searchString;
    private java.util.List resultNodes;
    private org.gjt.sp.jedit.search.SearchMatcher searchMatcher;
    private java.lang.String noWordSep;

    public void <init>(java.lang.String, org.gjt.sp.jedit.search.SearchMatcher)
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        java.lang.String r1, $r3;
        org.gjt.sp.jedit.search.SearchMatcher r2;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.searchString = r1;

        r0.searchMatcher = r2;

        $r3 = r2.getNoWordSep();

        r0.noWordSep = $r3;

        return;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.searchString;

        return $r1;
    }

    public boolean isTreeViewDisplayed()
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.treeViewDisplayed;

        return $z0;
    }

    public void setTreeViewDisplayed(boolean)
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        boolean z0;

        r0 := @this;

        z0 := @parameter0;

        r0.treeViewDisplayed = z0;

        return;
    }

    public void restoreFlatNodes(javax.swing.JTree, javax.swing.tree.DefaultMutableTreeNode)
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        javax.swing.JTree r1;
        javax.swing.tree.DefaultMutableTreeNode r2, r16, r18;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        javax.swing.tree.TreeModel $r4;
        javax.swing.tree.DefaultTreeModel $r5;
        javax.swing.tree.TreePath $r6, $r9;
        javax.swing.tree.TreeNode[] $r7, $r10;
        java.lang.Object $r8, $r11, $r12, $r13;
        int $i0;
        org.gjt.sp.jedit.search.HyperSearchFileNode $r14;
        java.util.Iterator r15;
        java.util.Enumeration r17;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = r0.resultNodes;

        r15 = $r3.iterator();

     label1:
        $z0 = r15.hasNext();

        if $z0 == 0 goto label3;

        $r11 = r15.next();

        r16 = (javax.swing.tree.DefaultMutableTreeNode) $r11;

        $r12 = r16.getUserObject();

        $z2 = $r12 instanceof org.gjt.sp.jedit.search.HyperSearchFileNode;

        if $z2 == 0 goto label2;

        $r13 = r16.getUserObject();

        $r14 = (org.gjt.sp.jedit.search.HyperSearchFileNode) $r13;

        $r14.showFullPath = 1;

     label2:
        $i0 = r2.getChildCount();

        r2.insert(r16, $i0);

        goto label1;

     label3:
        $r4 = r1.getModel();

        $r5 = (javax.swing.tree.DefaultTreeModel) $r4;

        $r5.nodeStructureChanged(r2);

        r17 = r2.children();

     label4:
        $z1 = r17.hasMoreElements();

        if $z1 == 0 goto label5;

        $r8 = r17.nextElement();

        r18 = (javax.swing.tree.DefaultMutableTreeNode) $r8;

        $r9 = new javax.swing.tree.TreePath;

        $r10 = r18.getPath();

        specialinvoke $r9.<init>($r10);

        r1.expandPath($r9);

        goto label4;

     label5:
        $r6 = new javax.swing.tree.TreePath;

        $r7 = r2.getPath();

        specialinvoke $r6.<init>($r7);

        r1.scrollPathToVisible($r6);

        return;
    }

    public void cacheResultNodes(javax.swing.tree.DefaultMutableTreeNode)
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        javax.swing.tree.DefaultMutableTreeNode r1, $r6;
        java.util.Enumeration r2;
        java.util.ArrayList $r3;
        int $i0;
        boolean $z0;
        java.util.List $r4;
        java.lang.Object $r5;

        r0 := @this;

        r1 := @parameter0;

        $r3 = new java.util.ArrayList;

        $i0 = r1.getChildCount();

        specialinvoke $r3.<init>($i0);

        r0.resultNodes = $r3;

        r2 = r1.children();

     label1:
        $z0 = r2.hasMoreElements();

        if $z0 == 0 goto label2;

        $r4 = r0.resultNodes;

        $r5 = r2.nextElement();

        $r6 = (javax.swing.tree.DefaultMutableTreeNode) $r5;

        $r4.add($r6);

        goto label1;

     label2:
        return;
    }

    public static void removeNodeFromCache(javax.swing.tree.MutableTreeNode)
    {
        javax.swing.tree.MutableTreeNode r0;
        javax.swing.tree.DefaultMutableTreeNode r1, $r5, r10;
        org.gjt.sp.jedit.search.HyperSearchOperationNode r2;
        java.lang.Object $r3, $r6, $r7;
        boolean $z0, $z1;
        javax.swing.tree.TreeNode $r4;
        java.util.List $r8, $r9;

        r0 := @parameter0;

        r1 = (javax.swing.tree.DefaultMutableTreeNode) r0;

        $r3 = r1.getUserObject();

        $z0 = $r3 instanceof org.gjt.sp.jedit.search.HyperSearchOperationNode;

        if $z0 == 0 goto label1;

        return;

     label1:
(0)     r10 = r1;

     label2:
        r10 = Phi(r10 #0, r10 #1);

        $r4 = r10.getParent();

        $r5 = (javax.swing.tree.DefaultMutableTreeNode) $r4;

        r10 = $r5;

        if $r5 == null goto label4;

        $r6 = r10.getUserObject();

        $z1 = $r6 instanceof org.gjt.sp.jedit.search.HyperSearchOperationNode;

        if $z1 != 0 goto label3;

(1)     goto label2;

     label3:
        $r7 = r10.getUserObject();

        r2 = (org.gjt.sp.jedit.search.HyperSearchOperationNode) $r7;

        $r8 = r2.resultNodes;

        if $r8 == null goto label4;

        $r9 = r2.resultNodes;

        $r9.remove(r1);

        goto label4;

     label4:
        return;
    }

    public void insertTreeNodes(javax.swing.JTree, javax.swing.tree.DefaultMutableTreeNode)
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        javax.swing.JTree r1;
        javax.swing.tree.DefaultMutableTreeNode r2, $r12, $r28, r44, r53, r55, r57, r59;
        java.lang.String r3, r5, $r16, $r17, $r18, $r21, $r24, $r30, $r32, $r35, $r37, $r38, $r39, $r40, r41, r47, r50, r58, r41_1, r41_2;
        org.gjt.sp.jedit.search.HyperSearchFileNode r4, r46;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10;
        java.lang.String[] r6, r42, r48, r49;
        org.gjt.sp.jedit.search.HyperSearchFolderNode r7, $r10, $r26, r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.List $r8, $r14;
        java.util.HashMap $r9, r51;
        java.io.File $r11, $r27;
        java.lang.Object $r15, $r25, $r36, r45, r56;
        java.lang.StringBuilder $r20, $r22, $r23, $r31, $r33, $r34;
        java.util.Iterator r43, r54;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 = java.lang.System.getProperty("file.separator");

        r41 = java.lang.System.getProperty("file.separator");

        $z0 = r3.equals("\\");

(0)     if $z0 == 0 goto label01;

(1)     r41_1 = "\\\\";

     label01:
        r41_2 = Phi(r41 #0, r41_1 #1);

        r42 = null;

        i6 = -1;

        $r8 = r0.resultNodes;

(2)     r43 = $r8.iterator();

     label02:
        r41 = Phi(r41_2 #2, r41 #3, r41 #10);

        i6 = Phi(i6 #2, i6 #3, i6 #10);

        r42 = Phi(r42 #2, r42 #3, r42 #10);

        i8 = Phi(i8 #2, i8 #3, i8 #10);

        $z1 = r43.hasNext();

        if $z1 == 0 goto label09;

        $r36 = r43.next();

        r44 = (javax.swing.tree.DefaultMutableTreeNode) $r36;

        r45 = r44.getUserObject();

        $z4 = r45 instanceof org.gjt.sp.jedit.search.HyperSearchFileNode;

        if $z4 != 0 goto label03;

(3)     goto label02;

     label03:
        r46 = (org.gjt.sp.jedit.search.HyperSearchFileNode) r45;

        $r37 = r46.path;

        i7 = $r37.lastIndexOf(r3);

        $r38 = r46.path;

        r47 = $r38.substring(0, i7);

        r48 = r47.split(r41);

        if i6 != -1 goto label04;

        i6 = lengthof r48;

        r42 = r48;

(4)     goto label08;

     label04:
        $i5 = lengthof r48;

        if $i5 >= i6 goto label05;

        i6 = lengthof r48;

        r42 = r48;

(5)     goto label08;

     label05:
(6)     i8 = 0;

     label06:
        r41 = Phi(r41 #6, r41 #9);

        i6 = Phi(i6 #6, i6 #9);

        r42 = Phi(r42 #6, r42 #9);

        i8 = Phi(i8 #6, i8 #9);

(7)     if i8 >= i6 goto label08;

        $r40 = r48[i8];

        $r39 = r42[i8];

        $z5 = $r40.equals($r39);

        if $z5 != 0 goto label07;

        i6 = i8;

(8)     goto label08;

     label07:
        i8 = i8 + 1;

(9)     goto label06;

     label08:
        r41 = Phi(r41 #4, r41 #5, r41 #7, r41 #8);

        i6 = Phi(i6 #4, i6 #5, i6 #7, i6 #8);

        r42 = Phi(r42 #4, r42 #5, r42 #7, r42 #8);

        i8 = Phi(i8 #4, i8 #5, i8 #7, i8 #8);

(10)    goto label02;

     label09:
        r49 = newarray (java.lang.String)[i6];

        r50 = "";

(11)    i9 = 0;

     label10:
        r41 = Phi(r41 #11, r41 #12);

        i6 = Phi(i6 #11, i6 #12);

        r42 = Phi(r42 #11, r42 #12);

        i8 = Phi(i8 #11, i8 #12);

        i9 = Phi(i9 #11, i9 #12);

        r50 = Phi(r50 #11, r50 #12);

        if i9 >= i6 goto label11;

        $r30 = r42[i9];

        r49[i9] = $r30;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<init>();

        $r32 = r49[i9];

        $r33 = $r31.append($r32);

        $r34 = $r33.append(r3);

        $r35 = $r34.toString();

        r50 = r50.concat($r35);

        i9 = i9 + 1;

(12)    goto label10;

     label11:
        $r9 = new java.util.HashMap;

        specialinvoke $r9.<init>();

        r51 = $r9;

        $r10 = new org.gjt.sp.jedit.search.HyperSearchFolderNode;

        $r11 = new java.io.File;

        specialinvoke $r11.<init>(r50);

        specialinvoke $r10.<init>($r11, 1);

        r52 = $r10;

        $r12 = new javax.swing.tree.DefaultMutableTreeNode;

        specialinvoke $r12.<init>(r52);

        r53 = $r12;

        $i1 = r2.getChildCount();

        r2.insert(r53, $i1);

        r51.put(r50, r53);

        $r14 = r0.resultNodes;

(13)    r54 = $r14.iterator();

     label12:
        r41 = Phi(r41 #13, r41 #14, r41 #19);

        i10 = Phi(i10 #13, i10 #14, i10 #19);

        r57 = Phi(r57 #13, r57 #14, r57 #19);

        i6 = Phi(i6 #13, i6 #14, i6 #19);

        r42 = Phi(r42 #13, r42 #14, r42 #19);

        i8 = Phi(i8 #13, i8 #14, i8 #19);

        i9 = Phi(i9 #13, i9 #14, i9 #19);

        r59 = Phi(r59 #13, r59 #14, r59 #19);

        r58 = Phi(r58 #13, r58 #14, r58 #19);

        r50 = Phi(r50 #13, r50 #14, r50 #19);

        $z2 = r54.hasNext();

        if $z2 == 0 goto label17;

        $r15 = r54.next();

        r55 = (javax.swing.tree.DefaultMutableTreeNode) $r15;

        r56 = r55.getUserObject();

        $z3 = r56 instanceof org.gjt.sp.jedit.search.HyperSearchFileNode;

        if $z3 != 0 goto label13;

(14)    goto label12;

     label13:
        r4 = (org.gjt.sp.jedit.search.HyperSearchFileNode) r56;

        r4.showFullPath = 0;

        $r16 = r4.path;

        i0 = $r16.lastIndexOf(r3);

        $r17 = r4.path;

        r5 = $r17.substring(0, i0);

        r6 = r5.split(r41);

        r57 = r53;

        r58 = r50;

(15)    i10 = i6;

     label14:
        r41 = Phi(r41 #15, r41 #18);

        i10 = Phi(i10 #15, i10 #18);

        r57 = Phi(r57 #15, r57 #18);

        i6 = Phi(i6 #15, i6 #18);

        r42 = Phi(r42 #15, r42 #18);

        i8 = Phi(i8 #15, i8 #18);

        i9 = Phi(i9 #15, i9 #18);

        r59 = Phi(r59 #15, r59 #18);

        r58 = Phi(r58 #15, r58 #18);

        r50 = Phi(r50 #15, r50 #18);

        $i2 = lengthof r6;

        if i10 >= $i2 goto label16;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<init>();

        $r21 = r6[i10];

        $r22 = $r20.append($r21);

        $r23 = $r22.append(r3);

        $r24 = $r23.toString();

        r58 = r58.concat($r24);

        $r25 = r51.get(r58);

        r59 = (javax.swing.tree.DefaultMutableTreeNode) $r25;

(16)    if r59 != null goto label15;

        $r26 = new org.gjt.sp.jedit.search.HyperSearchFolderNode;

        $r27 = new java.io.File;

        specialinvoke $r27.<init>(r58);

        specialinvoke $r26.<init>($r27, 0);

        r7 = $r26;

        $r28 = new javax.swing.tree.DefaultMutableTreeNode;

        specialinvoke $r28.<init>(r7);

        r59 = $r28;

        $i4 = r57.getChildCount();

        r57.insert(r59, $i4);

(17)    r51.put(r58, r59);

     label15:
        r59 = Phi(r59 #16, r59 #17);

        r57 = r59;

        i10 = i10 + 1;

(18)    goto label14;

     label16:
        $i3 = r57.getChildCount();

        r57.insert(r55, $i3);

        $r18 = r4.path;

        r51.put($r18, r57);

(19)    goto label12;

     label17:
        return;
    }

    public org.gjt.sp.jedit.search.SearchMatcher getSearchMatcher()
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        java.lang.String $r1;
        org.gjt.sp.jedit.search.SearchMatcher $r2, $r3;

        r0 := @this;

        $r2 = r0.searchMatcher;

        $r1 = r0.noWordSep;

        $r2.setNoWordSep($r1);

        $r3 = r0.searchMatcher;

        return $r3;
    }

    public java.lang.String getSearchString()
    {
        org.gjt.sp.jedit.search.HyperSearchOperationNode r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.searchString;

        return $r1;
    }
}
