public class org.gjt.sp.jedit.options.EncodingsOptionPane extends org.gjt.sp.jedit.AbstractOptionPane
{
    private javax.swing.JComboBox defaultEncoding;
    private javax.swing.JCheckBox encodingAutodetect;
    private javax.swing.JTextField encodingDetectors;
    private javax.swing.JTextField fallbackEncodings;
    private javax.swing.JComboBox lineSeparator;
    private org.gjt.sp.jedit.gui.PingPongList pingPongList;

    public void <init>()
    {
        org.gjt.sp.jedit.options.EncodingsOptionPane r0;

        r0 := @this;

        specialinvoke r0.<init>("encodings");

        return;
    }

    protected void _init()
    {
        org.gjt.sp.jedit.options.EncodingsOptionPane r0;
        java.lang.String[] r1, r5, $r7, r60, r61;
        java.lang.String r2, r6, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r22, $r23, $r24, $r27, $r31, $r32, $r35, $r37, $r38, $r45, $r47, $r49, $r51, $r56;
        java.util.ArrayList r3, r4, $r41, $r42;
        int i0, i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z8;
        javax.swing.JComboBox $r11, $r17, $r19, $r20, $r21, $r25, $r57, $r58, $r59;
        org.gjt.sp.util.StandardUtilities$StringCompare $r18, $r40;
        javax.swing.JCheckBox $r26, $r28, $r29;
        javax.swing.JTextField $r30, $r33, $r34, $r36, $r39;
        org.gjt.sp.jedit.gui.PingPongList $r43, $r44, $r46, $r48, $r50, $r52;
        java.lang.StringBuilder $r53, $r54, $r55;

        r0 := @this;

        $r7 = newarray (java.lang.String)[3];

        $r8 = org.gjt.sp.jedit.jEdit.getProperty("lineSep.unix");

        $r7[0] = $r8;

        $r9 = org.gjt.sp.jedit.jEdit.getProperty("lineSep.windows");

        $r7[1] = $r9;

        $r10 = org.gjt.sp.jedit.jEdit.getProperty("lineSep.mac");

        $r7[2] = $r10;

        r1 = $r7;

        $r11 = new javax.swing.JComboBox;

        specialinvoke $r11.<init>(r1);

        r0.lineSeparator = $r11;

        $r12 = java.lang.System.getProperty("line.separator");

        r2 = org.gjt.sp.jedit.jEdit.getProperty("buffer.lineSeparator", $r12);

        $r13 = "\n";

        $z1 = $r13.equals(r2);

        if $z1 == 0 goto label1;

        $r59 = r0.lineSeparator;

        $r59.setSelectedIndex(0);

        goto label3;

     label1:
        $r14 = "\r\n";

        $z2 = $r14.equals(r2);

        if $z2 == 0 goto label2;

        $r58 = r0.lineSeparator;

        $r58.setSelectedIndex(1);

        goto label3;

     label2:
        $r15 = "\r";

        $z3 = $r15.equals(r2);

        if $z3 == 0 goto label3;

        $r57 = r0.lineSeparator;

        $r57.setSelectedIndex(2);

     label3:
        $r16 = org.gjt.sp.jedit.jEdit.getProperty("options.general.lineSeparator");

        $r17 = r0.lineSeparator;

        r0.addComponent($r16, $r17);

        r60 = org.gjt.sp.jedit.MiscUtilities.getEncodings(1);

        $r18 = new org.gjt.sp.util.StandardUtilities$StringCompare;

        specialinvoke $r18.<init>(1);

        java.util.Arrays.sort(r60, $r18);

        $r19 = new javax.swing.JComboBox;

        specialinvoke $r19.<init>(r60);

        r0.defaultEncoding = $r19;

        $r20 = r0.defaultEncoding;

        $r20.setEditable(1);

        $r21 = r0.defaultEncoding;

        $r22 = java.lang.System.getProperty("file.encoding");

        $r23 = org.gjt.sp.jedit.jEdit.getProperty("buffer.encoding", $r22);

        $r21.setSelectedItem($r23);

        $r24 = org.gjt.sp.jedit.jEdit.getProperty("options.general.encoding");

        $r25 = r0.defaultEncoding;

        r0.addComponent($r24, $r25);

        $r26 = new javax.swing.JCheckBox;

        $r27 = org.gjt.sp.jedit.jEdit.getProperty("options.general.encodingAutodetect");

        specialinvoke $r26.<init>($r27);

        r0.encodingAutodetect = $r26;

        $r28 = r0.encodingAutodetect;

        $z4 = org.gjt.sp.jedit.jEdit.getBooleanProperty("buffer.encodingAutodetect");

        $r28.setSelected($z4);

        $r29 = r0.encodingAutodetect;

        r0.addComponent($r29, 1);

        $r30 = new javax.swing.JTextField;

        $r31 = org.gjt.sp.jedit.jEdit.getProperty("encodingDetectors", "");

        specialinvoke $r30.<init>($r31);

        r0.encodingDetectors = $r30;

        $r32 = org.gjt.sp.jedit.jEdit.getProperty("options.general.encodingDetectors");

        $r33 = r0.encodingDetectors;

        r0.addComponent($r32, $r33);

        $r34 = new javax.swing.JTextField;

        $r35 = org.gjt.sp.jedit.jEdit.getProperty("fallbackEncodings", "");

        specialinvoke $r34.<init>($r35);

        r0.fallbackEncodings = $r34;

        $r36 = r0.fallbackEncodings;

        $r37 = org.gjt.sp.jedit.jEdit.getProperty("options.general.fallbackEncodings.tooltip");

        $r36.setToolTipText($r37);

        $r38 = org.gjt.sp.jedit.jEdit.getProperty("options.general.fallbackEncodings");

        $r39 = r0.fallbackEncodings;

        r0.addComponent($r38, $r39);

        r61 = org.gjt.sp.jedit.MiscUtilities.getEncodings(0);

        $r40 = new org.gjt.sp.util.StandardUtilities$StringCompare;

        specialinvoke $r40.<init>(1);

        java.util.Arrays.sort(r61, $r40);

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<init>();

        r3 = $r41;

        $r42 = new java.util.ArrayList;

        specialinvoke $r42.<init>();

        r4 = $r42;

        r5 = r61;

        i0 = lengthof r5;

(0)     i1 = 0;

     label4:
        i1 = Phi(i1 #0, i1 #3);

        $z8 = Phi($z8 #0, $z8 #3);

        if i1 >= i0 goto label9;

        r6 = r5[i1];

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<init>();

        $r54 = $r53.append("encoding.opt-out.");

        $r55 = $r54.append(r6);

        $r56 = $r55.toString();

        $z5 = org.gjt.sp.jedit.jEdit.getBooleanProperty($r56, 0);

        if $z5 != 0 goto label5;

        $z8 = 1;

(1)     goto label6;

     label5:
(2)     $z8 = 0;

     label6:
        $z8 = Phi($z8 #1, $z8 #2);

        z0 = $z8;

        if z0 == 0 goto label7;

        r4.add(r6);

        goto label8;

     label7:
        r3.add(r6);

     label8:
        i1 = i1 + 1;

(3)     goto label4;

     label9:
        $r43 = new org.gjt.sp.jedit.gui.PingPongList;

        specialinvoke $r43.<init>(r3, r4);

        r0.pingPongList = $r43;

        $r44 = r0.pingPongList;

        $r45 = org.gjt.sp.jedit.jEdit.getProperty("options.encodings.available");

        $r44.setLeftTitle($r45);

        $r46 = r0.pingPongList;

        $r47 = org.gjt.sp.jedit.jEdit.getProperty("options.encodings.selected");

        $r46.setRightTitle($r47);

        $r48 = r0.pingPongList;

        $r49 = org.gjt.sp.jedit.jEdit.getProperty("options.encodings.available.tooltip");

        $r48.setLeftTooltip($r49);

        $r50 = r0.pingPongList;

        $r51 = org.gjt.sp.jedit.jEdit.getProperty("options.encodings.selected.tooltip");

        $r50.setRightTooltip($r51);

        $r52 = r0.pingPongList;

        r0.addComponent($r52, 1);

        return;
    }

    protected void _save()
    {
        org.gjt.sp.jedit.options.EncodingsOptionPane r0;
        java.util.Iterator r1, r26;
        java.lang.String r2, $r6, $r9, $r11, $r18, $r23, r24, r25, r24_1, r24_2, r24_3, r24_4;
        javax.swing.JComboBox $r3, $r4;
        int $i0;
        java.lang.Object $r5, $r14, $r19;
        javax.swing.JCheckBox $r7;
        boolean $z0, $z1, $z2;
        javax.swing.JTextField $r8, $r10;
        org.gjt.sp.jedit.gui.PingPongList $r12, $r13;
        java.lang.StringBuilder $r15, $r16, $r17, $r20, $r21, $r22;

        r0 := @this;

        r24 = null;

        $r3 = r0.lineSeparator;

        $i0 = $r3.getSelectedIndex();

(0)     tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        r24_1 = "\n";

(1)     goto label4;

     label2:
        r24_2 = "\r\n";

(2)     goto label4;

     label3:
(3)     r24_3 = "\r";

     label4:
        r24_4 = Phi(r24 #0, r24_1 #1, r24_2 #2, r24_3 #3);

        org.gjt.sp.jedit.jEdit.setProperty("buffer.lineSeparator", r24_4);

        $r4 = r0.defaultEncoding;

        $r5 = $r4.getSelectedItem();

        $r6 = (java.lang.String) $r5;

        org.gjt.sp.jedit.jEdit.setProperty("buffer.encoding", $r6);

        $r7 = r0.encodingAutodetect;

        $z0 = $r7.isSelected();

        org.gjt.sp.jedit.jEdit.setBooleanProperty("buffer.encodingAutodetect", $z0);

        $r8 = r0.encodingDetectors;

        $r9 = $r8.getText();

        org.gjt.sp.jedit.jEdit.setProperty("encodingDetectors", $r9);

        $r10 = r0.fallbackEncodings;

        $r11 = $r10.getText();

        org.gjt.sp.jedit.jEdit.setProperty("fallbackEncodings", $r11);

        $r12 = r0.pingPongList;

(4)     r1 = $r12.getLeftDataIterator();

     label5:
        r24 = Phi(r24_4 #4, r24 #5);

        $z1 = r1.hasNext();

        if $z1 == 0 goto label6;

        $r19 = r1.next();

        r25 = (java.lang.String) $r19;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<init>();

        $r21 = $r20.append("encoding.opt-out.");

        $r22 = $r21.append(r25);

        $r23 = $r22.toString();

        org.gjt.sp.jedit.jEdit.setBooleanProperty($r23, 1);

(5)     goto label5;

     label6:
        $r13 = r0.pingPongList;

(6)     r26 = $r13.getRightDataIterator();

     label7:
        r24 = Phi(r24 #6, r24 #7);

        $z2 = r26.hasNext();

        if $z2 == 0 goto label8;

        $r14 = r26.next();

        r2 = (java.lang.String) $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<init>();

        $r16 = $r15.append("encoding.opt-out.");

        $r17 = $r16.append(r2);

        $r18 = $r17.toString();

        org.gjt.sp.jedit.jEdit.unsetProperty($r18);

(7)     goto label7;

     label8:
        return;
    }
}
