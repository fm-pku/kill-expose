class org.gjt.sp.jedit.indent.RegexpIndentRule$TokenFilter extends java.lang.Object implements org.gjt.sp.jedit.syntax.TokenHandler
{
    public java.lang.StringBuilder result;

    public void <init>(int)
    {
        org.gjt.sp.jedit.indent.RegexpIndentRule$TokenFilter r0;
        int i0;
        java.lang.StringBuilder $r1;

        r0 := @this;

        i0 := @parameter0;

        specialinvoke r0.<init>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>(i0);

        r0.result = $r1;

        return;
    }

    public void handleToken(javax.swing.text.Segment, byte, int, int, org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
    {
        org.gjt.sp.jedit.indent.RegexpIndentRule$TokenFilter r0;
        javax.swing.text.Segment r1;
        byte b0;
        int i1, i2, $i3, $i4;
        org.gjt.sp.jedit.syntax.TokenMarker$LineContext r2;
        java.lang.StringBuilder $r3, $r5, $r8;
        char[] $r7;

        r0 := @this;

        r1 := @parameter0;

        b0 := @parameter1;

        i1 := @parameter2;

        i2 := @parameter3;

        r2 := @parameter4;

        if i2 > 0 goto label1;

        return;

     label1:
        tableswitch(b0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label4;
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label4;
            case 12: goto label4;
            case 13: goto label3;
            case 14: goto label3;
            case 15: goto label3;
            case 16: goto label3;
            default: goto label4;
        };

     label2:
        $r3 = r0.result;

        $r3.append(32);

        goto label5;

     label3:
        $r5 = r0.result;

        $r5.append(48);

        goto label5;

     label4:
        $r8 = r0.result;

        $r7 = r1.array;

        $i3 = r1.offset;

        $i4 = $i3 + i1;

        $r8.append($r7, $i4, i2);

     label5:
        return;
    }

    public void setLineContext(org.gjt.sp.jedit.syntax.TokenMarker$LineContext)
    {
        org.gjt.sp.jedit.indent.RegexpIndentRule$TokenFilter r0;
        org.gjt.sp.jedit.syntax.TokenMarker$LineContext r1;

        r0 := @this;

        r1 := @parameter0;

        return;
    }
}
