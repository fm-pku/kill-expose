class org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus extends javax.swing.JComponent implements java.awt.event.ActionListener
{
    private org.gjt.sp.jedit.View view;
    private static final java.lang.String memoryTestStr;
    private final java.awt.font.LineMetrics lm;
    private final java.awt.Color progressForeground;
    private final java.awt.Color progressBackground;
    private final java.lang.Integer[] args;
    private javax.swing.Timer timer;

    void <init>(org.gjt.sp.jedit.View)
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        org.gjt.sp.jedit.View r1;
        java.awt.Font r2;
        java.awt.font.FontRenderContext r3, $r8;
        java.awt.geom.Rectangle2D r4;
        java.awt.Dimension r5, $r9;
        java.lang.Integer[] $r6;
        javax.swing.JLabel $r7;
        double $d0, $d1;
        int $i0, $i1;
        java.awt.font.LineMetrics $r10;
        java.awt.Color $r11, $r12, $r13, $r14;
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus$MouseHandler $r15;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r6 = newarray (java.lang.Integer)[2];

        r0.args = $r6;

        r0.view = r1;

        $r7 = new javax.swing.JLabel;

        specialinvoke $r7.<init>();

        r2 = $r7.getFont();

        r0.setFont(r2);

        $r8 = new java.awt.font.FontRenderContext;

        specialinvoke $r8.<init>(null, 1, 0);

        r3 = $r8;

        r4 = r2.getStringBounds("9999/9999MB", r3);

        $r9 = new java.awt.Dimension;

        $d0 = r4.getWidth();

        $i0 = (int) $d0;

        $d1 = r4.getHeight();

        $i1 = (int) $d1;

        specialinvoke $r9.<init>($i0, $i1);

        r5 = $r9;

        r0.setPreferredSize(r5);

        r0.setMaximumSize(r5);

        $r10 = r2.getLineMetrics("9999/9999MB", r3);

        r0.lm = $r10;

        $r11 = org.gjt.sp.jedit.jEdit.getColorProperty("view.status.foreground");

        r0.setForeground($r11);

        $r12 = org.gjt.sp.jedit.jEdit.getColorProperty("view.status.background");

        r0.setBackground($r12);

        $r13 = org.gjt.sp.jedit.jEdit.getColorProperty("view.status.memory.foreground");

        r0.progressForeground = $r13;

        $r14 = org.gjt.sp.jedit.jEdit.getColorProperty("view.status.memory.background");

        r0.progressBackground = $r14;

        $r15 = new org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus$MouseHandler;

        specialinvoke $r15.<init>(r0);

        r0.addMouseListener($r15);

        return;
    }

    public void addNotify()
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        javax.swing.Timer $r1, $r2;
        javax.swing.ToolTipManager $r3;

        r0 := @this;

        specialinvoke r0.addNotify();

        $r1 = new javax.swing.Timer;

        specialinvoke $r1.<init>(2000, r0);

        r0.timer = $r1;

        $r2 = r0.timer;

        $r2.start();

        $r3 = javax.swing.ToolTipManager.sharedInstance();

        $r3.registerComponent(r0);

        return;
    }

    public void removeNotify()
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        javax.swing.Timer $r1;
        javax.swing.ToolTipManager $r2;

        r0 := @this;

        $r1 = r0.timer;

        $r1.stop();

        $r2 = javax.swing.ToolTipManager.sharedInstance();

        $r2.unregisterComponent(r0);

        specialinvoke r0.removeNotify();

        return;
    }

    public java.lang.String getToolTipText()
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        java.lang.Runtime r1;
        long l0, l1, l2, $l3, $l5;
        int $i4, $i6;
        java.lang.Integer[] $r2, $r4, $r6;
        java.lang.Integer $r3, $r5;
        java.lang.String $r7;

        r0 := @this;

        r1 = java.lang.Runtime.getRuntime();

        l0 = r1.freeMemory();

        l1 = r1.totalMemory();

        l2 = l1 - l0;

        $r2 = r0.args;

        $l3 = l2 / 1024L;

        $i4 = (int) $l3;

        $r3 = java.lang.Integer.valueOf($i4);

        $r2[0] = $r3;

        $r4 = r0.args;

        $l5 = l1 / 1024L;

        $i6 = (int) $l5;

        $r5 = java.lang.Integer.valueOf($i6);

        $r4[1] = $r5;

        $r6 = r0.args;

        $r7 = org.gjt.sp.jedit.jEdit.getProperty("view.status.memory-tooltip", $r6);

        return $r7;
    }

    public java.awt.Point getToolTipLocation(java.awt.event.MouseEvent)
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        java.awt.event.MouseEvent r1;
        java.awt.Point $r2;
        int $i0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new java.awt.Point;

        $i0 = r1.getX();

        specialinvoke $r2.<init>($i0, -20);

        return $r2;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        java.awt.event.ActionEvent r1;

        r0 := @this;

        r1 := @parameter0;

        r0.repaint();

        return;
    }

    public void paintComponent(java.awt.Graphics)
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        java.awt.Graphics r1;
        java.awt.Insets r2, $r8;
        java.lang.Runtime r3;
        long l0, l1, l2, $l17, $l18, $l19, $l20;
        int i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16;
        java.lang.String r4;
        java.awt.font.FontRenderContext r5, $r15;
        java.awt.geom.Rectangle2D r6;
        java.awt.Graphics2D r7;
        java.awt.Color $r9, $r19, $r21;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14;
        java.awt.Font $r16;
        java.lang.Object $r17;
        java.awt.RenderingHints$Key $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.awt.font.LineMetrics $r20, $r22;

        r0 := @this;

        r1 := @parameter0;

        $r8 = new java.awt.Insets;

        specialinvoke $r8.<init>(0, 0, 0, 0);

        r2 = $r8;

        r3 = java.lang.Runtime.getRuntime();

        l0 = r3.freeMemory();

        l1 = r3.totalMemory();

        l2 = l1 - l0;

        $i5 = r0.getWidth();

        $i6 = r2.left;

        $i8 = $i5 - $i6;

        $i7 = r2.right;

        i3 = $i8 - $i7;

        $i9 = r0.getHeight();

        $i10 = r2.top;

        $i12 = $i9 - $i10;

        $i11 = r2.bottom;

        $i13 = $i12 - $i11;

        i4 = $i13 - 1;

        $f2 = (float) l2;

        $f1 = (float) l1;

        f0 = $f2 / $f1;

        $r9 = r0.progressBackground;

        r1.setColor($r9);

        $i16 = r2.left;

        $i15 = r2.top;

        $f3 = (float) i3;

        $f4 = $f3 * f0;

        $i14 = (int) $f4;

        r1.fillRect($i16, $i15, $i14, i4);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $l17 = l2 / 1024L;

        $l18 = $l17 / 1024L;

        $r11 = $r10.append($l18);

        $r12 = $r11.append("/");

        $l19 = l1 / 1024L;

        $l20 = $l19 / 1024L;

        $r13 = $r12.append($l20);

        $r14 = $r13.append("MB");

        r4 = $r14.toString();

        $r15 = new java.awt.font.FontRenderContext;

        specialinvoke $r15.<init>(null, 1, 0);

        r5 = $r15;

        $r16 = r1.getFont();

        r6 = $r16.getStringBounds(r4, r5);

        r7 = (java.awt.Graphics2D) r1;

        $r18 = java.awt.RenderingHints.KEY_TEXT_ANTIALIASING;

        $r17 = java.awt.RenderingHints.VALUE_TEXT_ANTIALIAS_ON;

        r7.setRenderingHint($r18, $r17);

        $i23 = r2.left;

        $i22 = r2.top;

        $f5 = (float) i3;

        $f6 = $f5 * f0;

        $i21 = (int) $f6;

        r7.setClip($i23, $i22, $i21, i4);

        $r19 = r0.progressForeground;

        r7.setColor($r19);

        $i24 = r2.left;

        $d0 = (double) i3;

        $d1 = r6.getWidth();

        $d2 = $d0 - $d1;

        $i25 = (int) $d2;

        $i26 = $i25 / 2;

        $i28 = $i24 + $i26;

        $i27 = r2.top;

        $f7 = (float) $i27;

        $r20 = r0.lm;

        $f8 = $r20.getAscent();

        $f9 = $f7 + $f8;

        $i29 = (int) $f9;

        r7.drawString(r4, $i28, $i29);

        $i31 = r2.left;

        $f10 = (float) i3;

        $f11 = $f10 * f0;

        $i30 = (int) $f11;

        $i32 = $i31 + $i30;

        $i33 = r2.top;

        $i34 = r0.getWidth();

        $i35 = r2.left;

        $i37 = $i34 - $i35;

        $f12 = (float) i3;

        $f13 = $f12 * f0;

        $i36 = (int) $f13;

        $i38 = $i37 - $i36;

        r7.setClip($i32, $i33, $i38, i4);

        $r21 = r0.getForeground();

        r7.setColor($r21);

        $i39 = r2.left;

        $d3 = (double) i3;

        $d4 = r6.getWidth();

        $d5 = $d3 - $d4;

        $i40 = (int) $d5;

        $i41 = $i40 >> 1;

        $i43 = $i39 + $i41;

        $i42 = r2.top;

        $f14 = (float) $i42;

        $r22 = r0.lm;

        $f15 = $r22.getAscent();

        $f16 = $f14 + $f15;

        $i44 = (int) $f16;

        r7.drawString(r4, $i43, $i44);

        r7.dispose();

        return;
    }

    static org.gjt.sp.jedit.View access$000(org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus)
    {
        org.gjt.sp.jedit.gui.statusbar.MemoryStatusWidgetFactory$MemoryStatus r0;
        org.gjt.sp.jedit.View $r1;

        r0 := @parameter0;

        $r1 = r0.view;

        return $r1;
    }
}
