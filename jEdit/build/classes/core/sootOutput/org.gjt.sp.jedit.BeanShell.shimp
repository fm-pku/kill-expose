public class org.gjt.sp.jedit.BeanShell extends java.lang.Object
{
    private static final org.gjt.sp.jedit.BeanShellFacade bsh;
    private static boolean running;

    public void <init>()
    {
        org.gjt.sp.jedit.BeanShell r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    static void init()
    {
        org.gjt.sp.util.Log.log(3, class "org/gjt/sp/jedit/BeanShell", "Beanshell Init");

        return;
    }

    public static void evalSelection(org.gjt.sp.jedit.View, org.gjt.sp.jedit.textarea.JEditTextArea)
    {
        org.gjt.sp.jedit.View r0;
        org.gjt.sp.jedit.textarea.JEditTextArea r1;
        org.gjt.sp.jedit.BeanShellFacade $r2;

        r0 := @parameter0;

        r1 := @parameter1;

        $r2 = org.gjt.sp.jedit.BeanShell.bsh;

        $r2.evalSelection(r0, r1);

        return;
    }

    public static void showEvaluateDialog(org.gjt.sp.jedit.View)
    {
        org.gjt.sp.jedit.View r0;
        int i0, i1;
        boolean $z0;
        org.gjt.sp.jedit.gui.InputHandler $r1;
        org.gjt.sp.jedit.Macros$Recorder $r2, $r8;
        java.lang.String[] $r3, r17;
        java.lang.String $r4, r14, r14_1, r14_2;
        org.gjt.sp.jedit.BeanShellFacade $r5, $r6, $r13;
        org.gjt.sp.jedit.bsh.NameSpace $r7;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.Throwable $r12, r16;
        java.lang.Object r15;

        r0 := @parameter0;

        r14 = org.gjt.sp.jedit.GUIUtilities.input(r0, "beanshell-eval-input", null);

(0)     if r14 == null goto label8;

        $z0 = r14.endsWith(";");

(1)     if $z0 != 0 goto label1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r10 = $r9.append(r14);

        $r11 = $r10.append(";");

(2)     r14_1 = $r11.toString();

     label1:
        r14_2 = Phi(r14 #1, r14_1 #2);

        $r1 = r0.getInputHandler();

        i0 = $r1.getRepeatCount();

        $r2 = r0.getMacroRecorder();

        if $r2 == null goto label2;

        $r8 = r0.getMacroRecorder();

        $r8.record(i0, r14_2);

     label2:
(3)     r15 = null;

     label3:
(4)     i1 = 0;

     label4:
        r14 = Phi(r14_2 #4, r14 #6);

        r15 = Phi(r15 #4, r15 #6);

        i1 = Phi(i1 #4, i1 #6);

(5)     if i1 >= i0 goto label5;

        $r6 = org.gjt.sp.jedit.BeanShell.bsh;

        $r5 = org.gjt.sp.jedit.BeanShell.bsh;

        $r7 = $r5.getNameSpace();

        r15 = $r6._eval(r0, $r7, r14);

        i1 = i1 + 1;

(6)     goto label4;

     label5:
(7)     goto label7;

     label6:
        $r12 := @caughtexception;

        r14 = Phi(r14_2 #3, r14 #5);

        r15 = Phi(r15 #3, r15 #5);

        i1 = Phi(i1 #3, i1 #5);

        r16 = $r12;

        org.gjt.sp.util.Log.log(9, class "org/gjt/sp/jedit/BeanShell", r16);

        $r13 = org.gjt.sp.jedit.BeanShell.bsh;

(8)     $r13.handleException(r0, null, r16);

     label7:
        r14 = Phi(r14 #7, r14 #8);

        r15 = Phi(r15 #7, r15 #8);

        i1 = Phi(i1 #7, i1 #8);

(9)     if r15 == null goto label8;

        $r3 = newarray (java.lang.String)[1];

        $r4 = r15.toString();

        $r3[0] = $r4;

        r17 = $r3;

(10)    org.gjt.sp.jedit.GUIUtilities.message(r0, "beanshell-eval", r17);

     label8:
        r14 = Phi(r14 #0, r14 #9, r14 #10);

        r15 = Phi(r15 #0, r15 #9, r15 #10);

        i1 = Phi(i1 #0, i1 #9, i1 #10);

        return;

        catch java.lang.Throwable from label3 to label5 with label6;
    }

    public static void showEvaluateLinesDialog(org.gjt.sp.jedit.View)
    {
        org.gjt.sp.jedit.View r0;
        org.gjt.sp.jedit.textarea.JEditTextArea r1;
        org.gjt.sp.jedit.Buffer r2;
        org.gjt.sp.jedit.textarea.Selection[] r3;
        java.lang.String r4, r25, r25_1, r25_2;
        java.lang.Throwable r5, $r24;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r20, $r21, $r22;
        org.gjt.sp.jedit.Macros$Recorder $r16, $r19;
        org.gjt.sp.jedit.BeanShellFacade $r17;
        java.awt.Toolkit $r23;

        r0 := @parameter0;

        r25 = org.gjt.sp.jedit.GUIUtilities.input(r0, "beanshell-eval-line", null);

        r1 = r0.getTextArea();

        r2 = r0.getBuffer();

        if r25 == null goto label1;

        $i0 = r25.length();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        r3 = r1.getSelection();

        $i1 = lengthof r3;

        if $i1 != 0 goto label3;

        $r23 = r0.getToolkit();

        $r23.beep();

        return;

     label3:
        $z0 = r25.endsWith(";");

(0)     if $z0 != 0 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<init>();

        $r21 = $r20.append(r25);

        $r22 = $r21.append(";");

(1)     r25_1 = $r22.toString();

     label4:
        r25_2 = Phi(r25 #0, r25_1 #1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r7 = $r6.append("int[] lines = textArea.getSelectedLines();\nfor(int i = 0; i < lines.length; i++)\n{\nline = lines[i];\nindex = line - lines[0];\nstart = buffer.getLineStartOffset(line);\nend = buffer.getLineEndOffset(line);\ntext = buffer.getText(start,end - start - 1);\nnewText = ");

        $r8 = $r7.append(r25_2);

        $r9 = $r8.append("\n");

        $r10 = $r9.append("if(newText != null)\n");

        $r11 = $r10.append("{\n");

        $r12 = $r11.append("buffer.remove(start,end - start - 1);\n");

        $r13 = $r12.append("buffer.insert(start,String.valueOf(newText));\n");

        $r14 = $r13.append("}\n");

        $r15 = $r14.append("}\n");

        r4 = $r15.toString();

        $r16 = r0.getMacroRecorder();

(2)     if $r16 == null goto label5;

        $r19 = r0.getMacroRecorder();

        $r19.record(1, r4);

     label5:
        r2.beginCompoundEdit();

        $r17 = org.gjt.sp.jedit.BeanShell.bsh;

        $r17.eval(r0, r4);

     label6:
        r2.endCompoundEdit();

        goto label9;

     label7:
        $r24 := @caughtexception;

(3)     r25 = Phi(r25_2 #2, r25 #3);

        r5 = $r24;

     label8:
        r2.endCompoundEdit();

        throw r5;

     label9:
        r1.selectNone();

        return;

        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static void runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, boolean)
    {
        org.gjt.sp.jedit.View r0;
        java.lang.String r1;
        java.io.Reader r2;
        boolean z0;
        java.lang.Throwable r3, $r4;
        org.gjt.sp.jedit.BeanShellFacade $r5;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        z0 := @parameter3;

     label1:
        org.gjt.sp.jedit.BeanShell._runScript(r0, r1, r2, z0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

        org.gjt.sp.util.Log.log(9, class "org/gjt/sp/jedit/BeanShell", r3);

        $r5 = org.gjt.sp.jedit.BeanShell.bsh;

        $r5.handleException(r0, r1, r3);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, org.gjt.sp.jedit.bsh.NameSpace)
    {
        org.gjt.sp.jedit.View r0;
        java.lang.String r1;
        java.io.Reader r2;
        org.gjt.sp.jedit.bsh.NameSpace r3;
        java.lang.Throwable r4, $r5;
        org.gjt.sp.jedit.BeanShellFacade $r6;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

     label1:
        org.gjt.sp.jedit.BeanShell._runScript(r0, r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r4 = $r5;

        org.gjt.sp.util.Log.log(9, class "org/gjt/sp/jedit/BeanShell", r4);

        $r6 = org.gjt.sp.jedit.BeanShell.bsh;

        $r6.handleException(r0, r1, r4);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void _runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, boolean) throws java.lang.Exception
    {
        org.gjt.sp.jedit.View r0;
        java.lang.String r1;
        java.io.Reader r2;
        boolean z0;
        org.gjt.sp.jedit.BeanShellFacade $r3, $r4;
        org.gjt.sp.jedit.bsh.NameSpace $r5, $r6, $r6_1, $r6_2;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        z0 := @parameter3;

        if z0 == 0 goto label1;

        $r6 = new org.gjt.sp.jedit.bsh.NameSpace;

        $r4 = org.gjt.sp.jedit.BeanShell.bsh;

        $r5 = $r4.getNameSpace();

        specialinvoke $r6.<init>($r5, "namespace");

(0)     goto label2;

     label1:
        $r3 = org.gjt.sp.jedit.BeanShell.bsh;

(1)     $r6_1 = $r3.getNameSpace();

     label2:
        $r6_2 = Phi($r6 #0, $r6_1 #1);

        org.gjt.sp.jedit.BeanShell._runScript(r0, r1, r2, $r6_2);

        return;
    }

    public static void _runScript(org.gjt.sp.jedit.View, java.lang.String, java.io.Reader, org.gjt.sp.jedit.bsh.NameSpace) throws java.lang.Exception
    {
        org.gjt.sp.jedit.View r0;
        java.lang.String r1, $r9, $r16;
        org.gjt.sp.jedit.bsh.NameSpace r2, $r13, $r23, $r27;
        org.gjt.sp.jedit.bsh.Interpreter r3;
        java.lang.Throwable r4, $r21;
        org.gjt.sp.jedit.bsh.EvalError r5, $r18, $r19, $r20, r31, r33;
        java.lang.StringBuilder $r6, $r7, $r8;
        org.gjt.sp.jedit.BeanShellFacade $r10, $r12, $r14, $r22, $r24, $r26, $r28;
        boolean $z0;
        java.io.StringReader $r15;
        int $i0;
        org.gjt.sp.util.TaskManager $r17;
        java.lang.Exception $r25, r32;
        java.io.Reader r29, r29_1, r29_2, r29_3, r29_4;
        org.gjt.sp.jedit.Buffer r30;

        r0 := @parameter0;

        r1 := @parameter1;

        r29 := @parameter2;

        r2 := @parameter3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r7 = $r6.append("Running script ");

        $r8 = $r7.append(r1);

        $r9 = $r8.toString();

        org.gjt.sp.util.Log.log(3, class "org/gjt/sp/jedit/BeanShell", $r9);

(0)     r3 = org.gjt.sp.jedit.BeanShellFacade.createInterpreter(r2);

     label01:
(1)     if r29 != null goto label03;

        r30 = org.gjt.sp.jedit.jEdit.openTemporary(null, null, r1, 0);

        $z0 = r30.isLoaded();

        if $z0 != 0 goto label02;

        $r17 = org.gjt.sp.util.TaskManager.instance;

        $r17.waitForIoTasks();

     label02:
        $r15 = new java.io.StringReader;

        $i0 = r30.getLength();

        $r16 = r30.getText(0, $i0);

        specialinvoke $r15.<init>($r16);

(2)     r29_1 = $r15;

     label03:
        r29_2 = Phi(r29 #1, r29_1 #2);

(3)     $r10 = org.gjt.sp.jedit.BeanShell.bsh;

        $r10.setupDefaultVariables(r2, r0);

        r3.set("scriptPath", r1);

        org.gjt.sp.jedit.BeanShell.running = 1;

        r3.eval(r29_2, r2, r1);

     label04:
        org.gjt.sp.jedit.BeanShell.running = 0;

     label05:
        $r12 = org.gjt.sp.jedit.BeanShell.bsh;

        $r13 = $r12.getNameSpace();

        if r2 != $r13 goto label06;

        $r14 = org.gjt.sp.jedit.BeanShell.bsh;

        $r14.resetDefaultVariables(r2);

        r3.unset("scriptPath");

     label06:
(4)     goto label19;

     label07:
        $r20 := @caughtexception;

        r31 = $r20;

(5)     goto label19;

     label08:
(6)     $r25 := @caughtexception;

        r29_3 = Phi(r29 #1, r29_2 #3);

        r32 = $r25;

        org.gjt.sp.jedit.BeanShellFacade.unwrapException(r32);

     label09:
        org.gjt.sp.jedit.BeanShell.running = 0;

     label10:
        $r26 = org.gjt.sp.jedit.BeanShell.bsh;

        $r27 = $r26.getNameSpace();

        if r2 != $r27 goto label11;

        $r28 = org.gjt.sp.jedit.BeanShell.bsh;

        $r28.resetDefaultVariables(r2);

        r3.unset("scriptPath");

     label11:
(7)     goto label19;

     label12:
        $r18 := @caughtexception;

        r33 = $r18;

(8)     goto label19;

     label13:
        $r21 := @caughtexception;

(9)     r29 = Phi(r29_2 #3, r29 #0, r29_1 #2, r29_3 #6, r29 #9);

        r4 = $r21;

     label14:
        org.gjt.sp.jedit.BeanShell.running = 0;

     label15:
        $r22 = org.gjt.sp.jedit.BeanShell.bsh;

        $r23 = $r22.getNameSpace();

        if r2 != $r23 goto label16;

        $r24 = org.gjt.sp.jedit.BeanShell.bsh;

        $r24.resetDefaultVariables(r2);

        r3.unset("scriptPath");

     label16:
        goto label18;

     label17:
        $r19 := @caughtexception;

        r5 = $r19;

     label18:
        throw r4;

     label19:
        r29_4 = Phi(r29_2 #4, r29_2 #5, r29_3 #7, r29_3 #8);

        return;

        catch org.gjt.sp.jedit.bsh.EvalError from label05 to label06 with label07;
        catch java.lang.Exception from label01 to label04 with label08;
        catch org.gjt.sp.jedit.bsh.EvalError from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label04 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch org.gjt.sp.jedit.bsh.EvalError from label15 to label16 with label17;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static java.lang.Object eval(org.gjt.sp.jedit.View, org.gjt.sp.jedit.bsh.NameSpace, java.lang.String)
    {
        org.gjt.sp.jedit.View r0;
        org.gjt.sp.jedit.bsh.NameSpace r1;
        java.lang.String r2;
        org.gjt.sp.jedit.BeanShellFacade $r3;
        java.lang.Object $r4;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        $r3 = org.gjt.sp.jedit.BeanShell.bsh;

        $r4 = $r3.eval(r0, r1, r2);

        return $r4;
    }

    public static java.lang.Object _eval(org.gjt.sp.jedit.View, org.gjt.sp.jedit.bsh.NameSpace, java.lang.String) throws java.lang.Exception
    {
        org.gjt.sp.jedit.View r0;
        org.gjt.sp.jedit.bsh.NameSpace r1;
        java.lang.String r2;
        org.gjt.sp.jedit.BeanShellFacade $r3;
        java.lang.Object $r4;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        $r3 = org.gjt.sp.jedit.BeanShell.bsh;

        $r4 = $r3._eval(r0, r1, r2);

        return $r4;
    }

    public static org.gjt.sp.jedit.bsh.BshMethod cacheBlock(java.lang.String, java.lang.String, boolean) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        boolean z0;
        org.gjt.sp.jedit.BeanShellFacade $r2;
        org.gjt.sp.jedit.bsh.BshMethod $r3;

        r0 := @parameter0;

        r1 := @parameter1;

        z0 := @parameter2;

        $r2 = org.gjt.sp.jedit.BeanShell.bsh;

        $r3 = $r2.cacheBlock(r0, r1, z0);

        return $r3;
    }

    public static java.lang.Object runCachedBlock(org.gjt.sp.jedit.bsh.BshMethod, org.gjt.sp.jedit.View, org.gjt.sp.jedit.bsh.NameSpace) throws java.lang.Exception
    {
        org.gjt.sp.jedit.bsh.BshMethod r0;
        org.gjt.sp.jedit.View r1;
        org.gjt.sp.jedit.bsh.NameSpace r2;
        org.gjt.sp.jedit.BeanShellFacade $r3;
        java.lang.Object $r4;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        $r3 = org.gjt.sp.jedit.BeanShell.bsh;

        $r4 = $r3.runCachedBlock(r0, r1, r2);

        return $r4;
    }

    public static boolean isScriptRunning()
    {
        boolean $z0;

        $z0 = org.gjt.sp.jedit.BeanShell.running;

        return $z0;
    }

    public static org.gjt.sp.jedit.bsh.NameSpace getNameSpace()
    {
        org.gjt.sp.jedit.BeanShellFacade $r0;
        org.gjt.sp.jedit.bsh.NameSpace $r1;

        $r0 = org.gjt.sp.jedit.BeanShell.bsh;

        $r1 = $r0.getNameSpace();

        return $r1;
    }

    static void resetClassManager()
    {
        org.gjt.sp.jedit.BeanShellFacade $r0;

        $r0 = org.gjt.sp.jedit.BeanShell.bsh;

        $r0.resetClassManager();

        return;
    }

    static void <clinit>()
    {
        org.gjt.sp.jedit.BeanShell$MyBeanShellFacade $r0;

        $r0 = new org.gjt.sp.jedit.BeanShell$MyBeanShellFacade;

        specialinvoke $r0.<init>(null);

        org.gjt.sp.jedit.BeanShell.bsh = $r0;

        return;
    }
}
