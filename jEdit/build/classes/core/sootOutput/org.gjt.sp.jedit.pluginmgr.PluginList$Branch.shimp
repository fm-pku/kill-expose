class org.gjt.sp.jedit.pluginmgr.PluginList$Branch extends java.lang.Object
{
    java.lang.String version;
    java.lang.String date;
    int downloadSize;
    java.lang.String download;
    int downloadSourceSize;
    java.lang.String downloadSource;
    boolean obsolete;
    final java.util.List deps;

    void <init>()
    {
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r0;
        java.util.ArrayList $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.deps = $r1;

        return;
    }

    boolean canSatisfyDependencies()
    {
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r0;
        java.util.Iterator r1;
        org.gjt.sp.jedit.pluginmgr.PluginList$Dependency r2;
        java.util.List $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;

        r0 := @this;

        $r3 = r0.deps;

        r1 = $r3.iterator();

     label1:
        $z0 = r1.hasNext();

        if $z0 == 0 goto label3;

        $r4 = r1.next();

        r2 = (org.gjt.sp.jedit.pluginmgr.PluginList$Dependency) $r4;

        $z1 = r2.canSatisfy();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    void satisfyDependencies(org.gjt.sp.jedit.pluginmgr.Roster, java.lang.String, boolean)
    {
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r0;
        org.gjt.sp.jedit.pluginmgr.Roster r1;
        java.lang.String r2;
        boolean z0, $z1;
        java.util.Iterator r3;
        org.gjt.sp.jedit.pluginmgr.PluginList$Dependency r4;
        java.util.List $r5;
        java.lang.Object $r6;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        z0 := @parameter2;

        $r5 = r0.deps;

        r3 = $r5.iterator();

     label1:
        $z1 = r3.hasNext();

        if $z1 == 0 goto label2;

        $r6 = r3.next();

        r4 = (org.gjt.sp.jedit.pluginmgr.PluginList$Dependency) $r6;

        r4.satisfy(r1, r2, z0);

        goto label1;

     label2:
        return;
    }

    public java.lang.String depsToString()
    {
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r0;
        java.lang.StringBuilder r1, $r4, $r12;
        java.util.Iterator r2;
        org.gjt.sp.jedit.pluginmgr.PluginList$Dependency r3;
        java.util.List $r5;
        boolean $z0, $z1;
        java.lang.String $r6, $r8, $r9, $r10, $r11;
        java.lang.Object $r7;

        r0 := @this;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        r1 = $r4;

        $r5 = r0.deps;

        r2 = $r5.iterator();

     label1:
        $z0 = r2.hasNext();

        if $z0 == 0 goto label3;

        $r7 = r2.next();

        r3 = (org.gjt.sp.jedit.pluginmgr.PluginList$Dependency) $r7;

        $r9 = "plugin";

        $r8 = r3.what;

        $z1 = $r9.equals($r8);

        if $z1 == 0 goto label2;

        $r10 = r3.pluginName;

        if $r10 == null goto label2;

        $r11 = r3.pluginName;

        $r12 = r1.append($r11);

        $r12.append(10);

     label2:
        goto label1;

     label3:
        $r6 = r1.toString();

        return $r6;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.pluginmgr.PluginList$Branch r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13;
        java.lang.String $r3, $r6, $r14;
        boolean $z0;
        java.util.List $r11;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = $r1.append("[version=");

        $r3 = r0.version;

        $r4 = $r2.append($r3);

        $r5 = $r4.append(",download=");

        $r6 = r0.download;

        $r7 = $r5.append($r6);

        $r8 = $r7.append(",obsolete=");

        $z0 = r0.obsolete;

        $r9 = $r8.append($z0);

        $r10 = $r9.append(",deps=");

        $r11 = r0.deps;

        $r12 = $r10.append($r11);

        $r13 = $r12.append(93);

        $r14 = $r13.toString();

        return $r14;
    }
}
