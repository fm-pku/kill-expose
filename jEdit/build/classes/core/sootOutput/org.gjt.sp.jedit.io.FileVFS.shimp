public class org.gjt.sp.jedit.io.FileVFS extends org.gjt.sp.jedit.io.VFS
{
    public static final java.lang.String PERMISSIONS_PROPERTY;
    private static javax.swing.filechooser.FileSystemView fsView;

    public void <init>()
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        boolean $z0;
        java.lang.String[] $r2;
        short $s1, $s2, $s2_1, $s2_2;

        r0 := @this;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isCaseInsensitiveFS();

        if $z0 == 0 goto label1;

        $s2 = 128;

(0)     goto label2;

     label1:
(1)     $s2_1 = 0;

     label2:
        $s2_2 = Phi($s2 #0, $s2_1 #1);

        $s1 = 383 | $s2_2;

        $r2 = newarray (java.lang.String)[4];

        $r2[0] = "size";

        $r2[1] = "modified";

        $r2[2] = "status";

        $r2[3] = "type";

        specialinvoke r0.<init>("file", $s1, $r2);

        return;
    }

    public java.lang.String getParentOfPath(java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        char $c3;

        r0 := @this;

        r1 := @parameter0;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isWindows();

        if $z0 == 0 goto label3;

        $i0 = r1.length();

        if $i0 != 2 goto label1;

        $c3 = r1.charAt(1);

        if $c3 != 58 goto label1;

        return "roots:";

     label1:
        $i1 = r1.length();

        if $i1 != 3 goto label2;

        $z2 = r1.endsWith(":\\");

        if $z2 == 0 goto label2;

        return "roots:";

     label2:
        $z1 = r1.startsWith("\\\\");

        if $z1 == 0 goto label3;

        $i2 = r1.indexOf(92, 2);

        if $i2 != -1 goto label3;

        return r1;

     label3:
        $r2 = specialinvoke r0.getParentOfPath(r1);

        return $r2;
    }

    public java.lang.String constructPath(java.lang.String, java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.String r1, r2, $r3, $r7, $r10, $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r11, $r12;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = java.io.File.separator;

        $z0 = r1.endsWith($r3);

        if $z0 != 0 goto label1;

        $z1 = r1.endsWith("/");

        if $z1 == 0 goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r5 = $r4.append(r1);

        $r6 = $r5.append(r2);

        $r7 = $r6.toString();

        return $r7;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = $r8.append(r1);

        $r10 = java.io.File.separator;

        $r11 = $r9.append($r10);

        $r12 = $r11.append(r2);

        $r13 = $r12.toString();

        return $r13;
    }

    public char getFileSeparator()
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        char $c0;

        r0 := @this;

        $c0 = java.io.File.separatorChar;

        return $c0;
    }

    public java.lang.String getTwoStageSaveName(java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.String r1, $r4, $r5, $r5_1, $r5_2;
        java.io.File r2, $r3;
        boolean $z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        $r3 = new java.io.File;

        $r4 = r0.getParentOfPath(r1);

        specialinvoke $r3.<init>($r4);

        r2 = $r3;

        $z0 = r2.canWrite();

        if $z0 != 0 goto label1;

        $z1 = org.gjt.sp.jedit.OperatingSystem.isWindows();

        if $z1 == 0 goto label2;

     label1:
        $r5_1 = specialinvoke r0.getTwoStageSaveName(r1);

(0)     goto label3;

     label2:
(1)     $r5 = null;

     label3:
        $r5_2 = Phi($r5_1 #0, $r5 #1);

        return $r5_2;
    }

    public boolean save(org.gjt.sp.jedit.View, org.gjt.sp.jedit.Buffer, java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        org.gjt.sp.jedit.View r1;
        org.gjt.sp.jedit.Buffer r2;
        java.lang.String r3, $r4, $r6, $r9, $r11;
        int i0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r5, $r7, $r8, $r10;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isUnix();

        if $z0 == 0 goto label1;

        $r4 = r2.getPath();

        i0 = org.gjt.sp.jedit.io.FileVFS.getPermissions($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r6 = r2.getPath();

        $r7 = $r5.append($r6);

        $r8 = $r7.append(" has permissions 0");

        $r9 = java.lang.Integer.toString(i0, 8);

        $r10 = $r8.append($r9);

        $r11 = $r10.toString();

        org.gjt.sp.util.Log.log(1, r0, $r11);

        r2.setIntegerProperty("FileVFS__perms", i0);

     label1:
        $z1 = specialinvoke r0.save(r1, r2, r3);

        return $z1;
    }

    public boolean insert(org.gjt.sp.jedit.View, org.gjt.sp.jedit.Buffer, java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        org.gjt.sp.jedit.View r1;
        org.gjt.sp.jedit.Buffer r2;
        java.lang.String r3, $r6, $r7;
        java.io.File r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r5 = new java.io.File;

        specialinvoke $r5.<init>(r3);

        r4 = $r5;

        $z0 = r4.exists();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r4.isDirectory();

        if $z1 == 0 goto label2;

        $r7 = r4.getPath();

        org.gjt.sp.jedit.io.VFSManager.error(r1, $r7, "ioerror.open-directory", null);

        return 0;

     label2:
        $z2 = r4.canRead();

        if $z2 != 0 goto label3;

        $r6 = r4.getPath();

        org.gjt.sp.jedit.io.VFSManager.error(r1, $r6, "ioerror.no-read", null);

        return 0;

     label3:
        $z3 = specialinvoke r0.insert(r1, r2, r3);

        return $z3;
    }

    public static boolean recursiveDelete(java.io.File)
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0;

        $z0 = r0.exists();

(0)     if $z0 == 0 goto label4;

        r1 = r0.listFiles();

        r2 = r1;

        i0 = lengthof r2;

(1)     i1 = 0;

     label1:
        i1 = Phi(i1 #1, i1 #3);

(2)     if i1 >= i0 goto label4;

        r3 = r2[i1];

        $z2 = r3.isDirectory();

        if $z2 == 0 goto label2;

        org.gjt.sp.jedit.io.FileVFS.recursiveDelete(r3);

        goto label3;

     label2:
        r3.delete();

     label3:
        i1 = i1 + 1;

(3)     goto label1;

     label4:
        i1 = Phi(i1 #0, i1 #2);

        $z1 = r0.delete();

        return $z1;
    }

    public java.lang.String _canonPath(java.lang.Object, java.lang.String, java.awt.Component) throws java.io.IOException
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2, $r4;
        java.awt.Component r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = org.gjt.sp.jedit.MiscUtilities.canonPath(r2);

        return $r4;
    }

    public org.gjt.sp.jedit.io.VFSFile[] _listFiles(java.lang.Object, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.awt.Component r2;
        java.io.File r3, $r5, $r7;
        org.gjt.sp.jedit.io.VFSFile[] r4;
        boolean $z0, $z1;
        int $i0, $i1, $i2, i4;
        org.gjt.sp.jedit.io.FileVFS$LocalFile $r6;
        javax.swing.filechooser.FileSystemView $r8, $r9, $r10;
        char $c3;
        java.lang.String $r11, r12, r12_1, r12_2;
        java.io.File[] r13, r13_1, r13_2;

        r0 := @this;

        r1 := @parameter0;

        r12 := @parameter1;

        r2 := @parameter2;

        $z0 = org.gjt.sp.jedit.OperatingSystem.isWindows();

(0)     if $z0 == 0 goto label1;

        $i2 = r12.length();

(1)     if $i2 != 2 goto label1;

        $c3 = r12.charAt(1);

(2)     if $c3 != 58 goto label1;

        $r11 = java.io.File.separator;

(3)     r12_1 = r12.concat($r11);

     label1:
        r12_2 = Phi(r12 #0, r12 #1, r12 #2, r12_1 #3);

        $r5 = new java.io.File;

        specialinvoke $r5.<init>(r12_2);

        r3 = $r5;

        r13 = null;

        $z1 = r3.exists();

(4)     if $z1 == 0 goto label3;

        $r8 = org.gjt.sp.jedit.io.FileVFS.fsView;

        if $r8 != null goto label2;

        $r10 = javax.swing.filechooser.FileSystemView.getFileSystemView();

        org.gjt.sp.jedit.io.FileVFS.fsView = $r10;

     label2:
        $r9 = org.gjt.sp.jedit.io.FileVFS.fsView;

(5)     r13_1 = $r9.getFiles(r3, 0);

     label3:
        r13_2 = Phi(r13 #4, r13_1 #5);

        if r13_2 != null goto label4;

        org.gjt.sp.jedit.io.VFSManager.error(r2, r12_2, "ioerror.directory-error-nomsg", null);

        return null;

     label4:
        $i0 = lengthof r13_2;

        r4 = newarray (org.gjt.sp.jedit.io.VFSFile)[$i0];

(6)     i4 = 0;

     label5:
        r13 = Phi(r13_2 #6, r13 #7);

        i4 = Phi(i4 #6, i4 #7);

        r12 = Phi(r12_2 #6, r12 #7);

        $i1 = lengthof r13;

        if i4 >= $i1 goto label6;

        $r6 = new org.gjt.sp.jedit.io.FileVFS$LocalFile;

        $r7 = r13[i4];

        specialinvoke $r6.<init>($r7);

        r4[i4] = $r6;

        i4 = i4 + 1;

(7)     goto label5;

     label6:
        return r4;
    }

    public org.gjt.sp.jedit.io.VFSFile _getFile(java.lang.Object, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.awt.Component r3;
        java.io.File r4, $r5;
        boolean $z0, $z1, $z2;
        org.gjt.sp.jedit.io.FileVFS$LocalFile $r6;
        org.gjt.sp.jedit.io.VFSFile $r7;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $z0 = r2.equals("/");

        if $z0 == 0 goto label1;

        $z2 = org.gjt.sp.jedit.OperatingSystem.isUnix();

        if $z2 == 0 goto label1;

        $r7 = new org.gjt.sp.jedit.io.VFSFile;

        specialinvoke $r7.<init>(r2, r2, r2, 1, 0L, 0);

        return $r7;

     label1:
        $r5 = new java.io.File;

        specialinvoke $r5.<init>(r2);

        r4 = $r5;

        $z1 = r4.exists();

        if $z1 != 0 goto label2;

        return null;

     label2:
        $r6 = new org.gjt.sp.jedit.io.FileVFS$LocalFile;

        specialinvoke $r6.<init>(r4);

        return $r6;
    }

    public boolean _delete(java.lang.Object, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2, r7, r7_1, r7_2, r7_3;
        java.awt.Component r3;
        java.io.File r4, $r5;
        boolean $z0, z1, z1_1, z1_2;
        java.io.IOException $r6, r8;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r5 = new java.io.File;

        specialinvoke $r5.<init>(r2);

(0)     r4 = $r5;

     label1:
        r7 = r4.getCanonicalPath();

     label2:
(1)     goto label4;

     label3:
        $r6 := @caughtexception;

        r7_1 = Phi(r7 #0);

        r8 = $r6;

(2)     r7_2 = r2;

     label4:
        r7_3 = Phi(r7 #1, r7_2 #2);

        $z0 = r4.isDirectory();

        if $z0 != 0 goto label5;

        z1 = r4.delete();

(3)     goto label6;

     label5:
(4)     z1_1 = org.gjt.sp.jedit.io.FileVFS.recursiveDelete(r4);

     label6:
        z1_2 = Phi(z1 #3, z1_1 #4);

        if z1_2 == 0 goto label7;

        org.gjt.sp.jedit.io.VFSManager.sendVFSUpdate(r0, r7_3, 1);

     label7:
        return z1_2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean _rename(java.lang.Object, java.lang.String, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2, r3, $r9, r13, r16, r13_1, r13_2, r13_3, r16_1, r16_2, r16_3;
        java.awt.Component r4;
        java.io.File r5, r6, $r7, $r8, $r10, r15;
        boolean $z0, $z2, $z3, $z5, z6;
        java.io.IOException $r11, $r12, r14, r17;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        $r7 = new java.io.File;

        specialinvoke $r7.<init>(r3);

(0)     r5 = $r7;

     label01:
        r13 = r5.getCanonicalPath();

     label02:
(1)     goto label04;

     label03:
        $r12 := @caughtexception;

        r13_1 = Phi(r13 #0);

        r14 = $r12;

(2)     r13_2 = r3;

     label04:
        r13_3 = Phi(r13 #1, r13_2 #2);

        $r8 = new java.io.File;

        $r9 = r5.getParent();

        specialinvoke $r8.<init>($r9);

        r15 = $r8;

        $z0 = r15.exists();

        if $z0 == 0 goto label05;

        $z5 = r15.isDirectory();

        if $z5 != 0 goto label06;

        return 0;

     label05:
        r15.mkdirs();

        $z2 = r15.exists();

        if $z2 != 0 goto label06;

        return 0;

     label06:
        $r10 = new java.io.File;

        specialinvoke $r10.<init>(r2);

(3)     r6 = $r10;

     label07:
        r16 = r6.getCanonicalPath();

     label08:
(4)     goto label10;

     label09:
        $r11 := @caughtexception;

        r16_1 = Phi(r16 #3);

        r17 = $r11;

(5)     r16_2 = r2;

     label10:
        r16_3 = Phi(r16 #4, r16_2 #5);

        $z3 = r16_3.equalsIgnoreCase(r13_3);

        if $z3 != 0 goto label11;

        r5.delete();

     label11:
        z6 = r6.renameTo(r5);

        org.gjt.sp.jedit.io.VFSManager.sendVFSUpdate(r0, r16_3, 1);

        org.gjt.sp.jedit.io.VFSManager.sendVFSUpdate(r0, r13_3, 1);

        return z6;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.io.IOException from label07 to label08 with label09;
    }

    public boolean _mkdir(java.lang.Object, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2, r4, r10, r10_1, r10_2, r10_3;
        java.awt.Component r3;
        java.io.File r5, $r7, $r8;
        boolean z0, $z1, $z2;
        java.io.IOException r6, $r9;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 = r0.getParentOfPath(r2);

        $r7 = new java.io.File;

        specialinvoke $r7.<init>(r4);

        $z1 = $r7.exists();

        if $z1 != 0 goto label1;

        $z2 = r0._mkdir(r1, r4, r3);

        if $z2 != 0 goto label1;

        return 0;

     label1:
        $r8 = new java.io.File;

        specialinvoke $r8.<init>(r2);

        r5 = $r8;

(0)     z0 = r5.mkdir();

     label2:
        r10 = r5.getCanonicalPath();

     label3:
(1)     goto label5;

     label4:
        $r9 := @caughtexception;

        r10_1 = Phi(r10 #0);

        r6 = $r9;

(2)     r10_2 = r2;

     label5:
        r10_3 = Phi(r10 #1, r10_2 #2);

        org.gjt.sp.jedit.io.VFSManager.sendVFSUpdate(r0, r10_3, 1);

        return z0;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public java.io.InputStream _createInputStream(java.lang.Object, java.lang.String, boolean, java.awt.Component) throws java.io.IOException
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2;
        boolean z0;
        java.awt.Component r3;
        java.io.IOException r4, $r6;
        java.io.FileInputStream $r5;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        z0 := @parameter2;

        r3 := @parameter3;

     label1:
        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<init>(r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        if z0 == 0 goto label4;

        return null;

     label4:
        throw r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.io.OutputStream _createOutputStream(java.lang.Object, java.lang.String, java.awt.Component) throws java.io.IOException
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.awt.Component r3;
        java.io.FileOutputStream $r4;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<init>(r2);

        return $r4;
    }

    public void _saveComplete(java.lang.Object, org.gjt.sp.jedit.Buffer, java.lang.String, java.awt.Component)
    {
        org.gjt.sp.jedit.io.FileVFS r0;
        java.lang.Object r1;
        org.gjt.sp.jedit.Buffer r2;
        java.lang.String r3;
        java.awt.Component r4;
        int i0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        i0 = r2.getIntegerProperty("FileVFS__perms", 0);

        org.gjt.sp.jedit.io.FileVFS.setPermissions(r3, i0);

        return;
    }

    public static int getPermissions(java.lang.String)
    {
        java.lang.String r0, r2, r3;
        java.lang.String[] r1, $r5;
        java.lang.Throwable r4, $r10, $r11;
        boolean $z0, $z1;
        java.lang.Runtime $r6;
        java.io.InputStreamReader $r7, r14;
        java.io.InputStream $r8;
        java.io.BufferedReader $r9, r12, r12_1, r12_2, r12_3;
        int i0, i0_1, i0_2, i0_3, i0_4;
        java.lang.Process r13;

        r0 := @parameter0;

        i0 = 0;

        $z0 = org.gjt.sp.jedit.jEdit.getBooleanProperty("chmodDisabled");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = org.gjt.sp.jedit.OperatingSystem.isUnix();

(0)     if $z1 == 0 goto label8;

        $r5 = newarray (java.lang.String)[3];

        $r5[0] = "ls";

        $r5[1] = "-lLd";

        $r5[2] = r0;

        r1 = $r5;

(1)     r12 = null;

     label2:
        $r6 = java.lang.Runtime.getRuntime();

        r13 = $r6.exec(r1);

        $r7 = new java.io.InputStreamReader;

        $r8 = r13.getInputStream();

        specialinvoke $r7.<init>($r8);

        r14 = $r7;

        $r9 = new java.io.BufferedReader;

        specialinvoke $r9.<init>(r14);

(2)     r12_1 = $r9;

        r2 = r12_1.readLine();

(3)     if r2 == null goto label3;

        r3 = r2.substring(1, 10);

(4)     i0_1 = org.gjt.sp.jedit.MiscUtilities.parsePermissions(r3);

     label3:
        i0_2 = Phi(i0 #3, i0_1 #4);

        org.gjt.sp.util.IOUtilities.closeQuietly(r12_1);

(5)     goto label8;

     label4:
        $r10 := @caughtexception;

        r12_2 = Phi(r12 #1, r12_1 #2);

(6)     i0_3 = Phi(i0 #1, i0_1 #4);

     label5:
        org.gjt.sp.util.IOUtilities.closeQuietly(r12_2);

(7)     goto label8;

     label6:
        $r11 := @caughtexception;

        r12 = Phi(r12_2 #6, r12 #8, r12 #1, r12_1 #2);

(8)     i0 = Phi(i0_3 #6, i0 #8, i0 #1, i0_1 #4);

        r4 = $r11;

     label7:
        org.gjt.sp.util.IOUtilities.closeQuietly(r12);

        throw r4;

     label8:
        r12_3 = Phi(r12 #0, r12_1 #5, r12_2 #7);

        i0_4 = Phi(i0 #0, i0_2 #5, i0_3 #7);

        return i0_4;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void setPermissions(java.lang.String, int)
    {
        java.lang.String r0, $r3;
        int i0;
        java.lang.String[] r1, $r2;
        boolean $z0, $z1;
        java.lang.Runtime $r4;
        java.io.InputStream $r5, $r7;
        java.io.OutputStream $r6;
        java.lang.Throwable $r8, r10;
        java.lang.Process r9;

        r0 := @parameter0;

        i0 := @parameter1;

        $z0 = org.gjt.sp.jedit.jEdit.getBooleanProperty("chmodDisabled");

        if $z0 == 0 goto label1;

        return;

     label1:
        if i0 == 0 goto label5;

        $z1 = org.gjt.sp.jedit.OperatingSystem.isUnix();

        if $z1 == 0 goto label5;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "chmod";

        $r3 = java.lang.Integer.toString(i0, 8);

        $r2[1] = $r3;

        $r2[2] = r0;

        r1 = $r2;

     label2:
        $r4 = java.lang.Runtime.getRuntime();

        r9 = $r4.exec(r1);

        $r5 = r9.getInputStream();

        $r5.close();

        $r6 = r9.getOutputStream();

        $r6.close();

        $r7 = r9.getErrorStream();

        $r7.close();

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    static void <clinit>()
    {
        org.gjt.sp.jedit.io.FileVFS.fsView = null;

        return;
    }
}
