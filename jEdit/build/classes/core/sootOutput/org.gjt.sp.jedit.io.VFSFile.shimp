public class org.gjt.sp.jedit.io.VFSFile extends java.lang.Object implements java.io.Serializable
{
    public static final int FILE;
    public static final int DIRECTORY;
    public static final int FILESYSTEM;
    private java.lang.String name;
    private java.lang.String path;
    private java.lang.String symlinkPath;
    private java.lang.String deletePath;
    private int type;
    private long length;
    private boolean hidden;
    private boolean canRead;
    private boolean canWrite;
    protected boolean colorCalculated;
    protected java.awt.Color color;
    private boolean fetchedAttrs;

    public static int findCompletion(org.gjt.sp.jedit.io.VFSFile[], int, int, java.lang.String, boolean)
    {
        org.gjt.sp.jedit.io.VFSFile[] r0;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        java.lang.String r1, r3, $r4;
        boolean z0, z1, $z2, $z3, z4, $z5;
        org.gjt.sp.jedit.io.VFSFile r2;

        r0 := @parameter0;

        i0 := @parameter1;

        i1 := @parameter2;

        r1 := @parameter3;

        z0 := @parameter4;

        z1 = org.gjt.sp.jedit.MiscUtilities.isAbsolutePath(r1);

        i2 = r1.length();

        i5 = 0;

        i6 = -1;

        z4 = 0;

(0)     i7 = i0;

     label01:
        i6 = Phi(i6 #0, i6 #10);

        i7 = Phi(i7 #0, i7 #10);

        i5 = Phi(i5 #0, i5 #10);

        $z5 = Phi($z5 #0, $z5 #10);

        z4 = Phi(z4 #0, z4 #10);

        $r4 = Phi($r4 #0, $r4 #10);

        if i7 >= i1 goto label10;

        r2 = r0[i7];

        if z1 == 0 goto label02;

        $r4 = r2.getPath();

(1)     goto label03;

     label02:
(2)     $r4 = r2.getName();

     label03:
        $r4 = Phi($r4 #1, $r4 #2);

        r3 = $r4;

        if z0 == 0 goto label04;

        $i4 = r2.getType();

        if $i4 != 0 goto label04;

(3)     goto label09;

     label04:
        $z2 = r3.equals(r1);

        if $z2 == 0 goto label05;

        return i7;

     label05:
        $z3 = r3.regionMatches(1, 0, r1, 0, i2);

(4)     if $z3 == 0 goto label09;

        if i6 == -1 goto label06;

(5)     if z4 == 0 goto label09;

        $i3 = r3.length();

(6)     if $i3 <= i5 goto label09;

     label06:
        i5 = r3.length();

        i6 = i7;

        if i5 <= i2 goto label07;

        $z5 = 1;

(7)     goto label08;

     label07:
(8)     $z5 = 0;

     label08:
        $z5 = Phi($z5 #7, $z5 #8);

(9)     z4 = $z5;

     label09:
        i6 = Phi(i6 #3, i6 #4, i6 #5, i6 #6, i6 #9);

        i5 = Phi(i5 #3, i5 #4, i5 #5, i5 #6, i5 #9);

        $z5 = Phi($z5 #3, $z5 #4, $z5 #5, $z5 #6, $z5 #9);

        z4 = Phi(z4 #3, z4 #4, z4 #5, z4 #6, z4 #9);

        i7 = i7 + 1;

(10)    goto label01;

     label10:
        return i6;
    }

    public static java.lang.String findCompletion(java.lang.String, java.lang.String, org.gjt.sp.jedit.browser.VFSBrowser, boolean)
    {
        java.lang.String r0, r4, $r16, $r18, $r21, $r22, r29, r29_1, r29_2;
        org.gjt.sp.jedit.browser.VFSBrowser r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        org.gjt.sp.jedit.io.VFS r2;
        java.lang.Object r3;
        int i0, $i1, $i2, $i3;
        java.io.IOException r5, r7, $r23, $r24, $r25, $r26, $r27, r31, r32, r33;
        java.lang.Throwable r6, $r28;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        org.gjt.sp.jedit.io.VFSFile $r17;
        org.gjt.sp.jedit.View $r19;
        org.gjt.sp.jedit.Buffer $r20;
        org.gjt.sp.jedit.io.VFSFile[] r30;

        r29 := @parameter0;

        r0 := @parameter1;

        r1 := @parameter2;

        z0 := @parameter3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = $r8.append("findCompletion(");

        $r10 = $r9.append(r29);

        $r11 = $r10.append(44);

        $r12 = $r11.append(r0);

        $r13 = $r12.append(44);

        $r14 = $r13.append(z0);

        $r15 = $r14.append(41);

        $r16 = $r15.toString();

        org.gjt.sp.util.Log.log(1, class "org/gjt/sp/jedit/io/VFSFile", $r16);

        $z1 = r0.equals("~");

        if $z1 == 0 goto label01;

        $r22 = java.lang.System.getProperty("user.home");

        return $r22;

     label01:
        $z2 = r0.equals("-");

        if $z2 == 0 goto label02;

        $r19 = r1.getView();

        $r20 = $r19.getBuffer();

        $r21 = $r20.getDirectory();

        return $r21;

     label02:
        $z3 = r0.equals("..");

        if $z3 == 0 goto label03;

        $r18 = org.gjt.sp.jedit.MiscUtilities.getParentOfPath(r29);

        return $r18;

     label03:
        $z4 = org.gjt.sp.jedit.MiscUtilities.isAbsolutePath(r0);

(0)     if $z4 == 0 goto label05;

        $z5 = org.gjt.sp.jedit.MiscUtilities.isURL(r0);

        if $z5 == 0 goto label04;

        return r0;

     label04:
(1)     r29_1 = "roots:";

     label05:
        r29_2 = Phi(r29 #0, r29_1 #1);

        r2 = org.gjt.sp.jedit.io.VFSManager.getVFSForPath(r29_2);

        $i1 = r2.getCapabilities();

        $i2 = $i1 & 64;

        if $i2 != 0 goto label06;

        return null;

     label06:
        r3 = r2.createVFSSession(r29_2, r1);

(2)     if r3 != null goto label07;

        return null;

     label07:
        r30 = r2._listFiles(r3, r29_2, r1);

        $i3 = lengthof r30;

        i0 = org.gjt.sp.jedit.io.VFSFile.findCompletion(r30, 0, $i3, r0, z0);

        if i0 == -1 goto label12;

        $r17 = r30[i0];

        r4 = $r17.path;

     label08:
        r2._endVFSSession(r3, r1);

     label09:
        goto label11;

     label10:
        $r23 := @caughtexception;

        r5 = $r23;

        org.gjt.sp.jedit.io.VFSManager.error(r5, r29_2, r1);

     label11:
        return r4;

     label12:
        r2._endVFSSession(r3, r1);

     label13:
        goto label24;

     label14:
        $r25 := @caughtexception;

        r31 = $r25;

        org.gjt.sp.jedit.io.VFSManager.error(r31, r29_2, r1);

        goto label24;

     label15:
        $r24 := @caughtexception;

        r32 = $r24;

        org.gjt.sp.jedit.io.VFSManager.error(r32, r29_2, r1);

     label16:
        r2._endVFSSession(r3, r1);

     label17:
        goto label24;

     label18:
        $r26 := @caughtexception;

        r33 = $r26;

        org.gjt.sp.jedit.io.VFSManager.error(r33, r29_2, r1);

        goto label24;

     label19:
        $r28 := @caughtexception;

(3)     r29 = Phi(r29_2 #2, r29 #3);

        r6 = $r28;

     label20:
        r2._endVFSSession(r3, r1);

     label21:
        goto label23;

     label22:
        $r27 := @caughtexception;

        r7 = $r27;

        org.gjt.sp.jedit.io.VFSManager.error(r7, r29, r1);

     label23:
        throw r6;

     label24:
        return null;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public final javax.swing.Icon getIcon(boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0, $z1, $z1_1, $z1_2;
        java.lang.String $r1;
        org.gjt.sp.jedit.Buffer $r2;
        javax.swing.Icon $r3;

        r0 := @this;

        z0 := @parameter0;

        $r1 = r0.getSymlinkPath();

        $r2 = org.gjt.sp.jedit.jEdit._getBuffer($r1);

        if $r2 == null goto label1;

        $z1 = 1;

(0)     goto label2;

     label1:
(1)     $z1_1 = 0;

     label2:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        $r3 = r0.getIcon(z0, $z1_2);

        return $r3;
    }

    public javax.swing.Icon getIcon(boolean, boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0, z1;
        javax.swing.Icon $r1;

        r0 := @this;

        z0 := @parameter0;

        z1 := @parameter1;

        $r1 = r0.getDefaultIcon(z0, z1);

        return $r1;
    }

    public final javax.swing.Icon getDefaultIcon(boolean, boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0, z1;
        int $i0, $i1;
        javax.swing.Icon $r1, $r2, $r3, $r4, $r4_1, $r4_2;

        r0 := @this;

        z0 := @parameter0;

        z1 := @parameter1;

        $i0 = r0.getType();

        if $i0 != 1 goto label3;

        if z0 == 0 goto label1;

        $r4 = org.gjt.sp.jedit.browser.FileCellRenderer.openDirIcon;

(0)     goto label2;

     label1:
(1)     $r4_1 = org.gjt.sp.jedit.browser.FileCellRenderer.dirIcon;

     label2:
        $r4_2 = Phi($r4 #0, $r4_1 #1);

        return $r4_2;

     label3:
        $i1 = r0.getType();

        if $i1 != 2 goto label4;

        $r3 = org.gjt.sp.jedit.browser.FileCellRenderer.filesystemIcon;

        return $r3;

     label4:
        if z1 == 0 goto label5;

        $r2 = org.gjt.sp.jedit.browser.FileCellRenderer.openFileIcon;

        return $r2;

     label5:
        $r1 = org.gjt.sp.jedit.browser.FileCellRenderer.fileIcon;

        return $r1;
    }

    public final javax.swing.Icon getDefaultIcon(boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0, $z1, $z1_1, $z1_2;
        java.lang.String $r1;
        org.gjt.sp.jedit.Buffer $r2;
        javax.swing.Icon $r3;

        r0 := @this;

        z0 := @parameter0;

        $r1 = r0.getSymlinkPath();

        $r2 = org.gjt.sp.jedit.jEdit._getBuffer($r1);

        if $r2 == null goto label1;

        $z1 = 1;

(0)     goto label2;

     label1:
(1)     $z1_1 = 0;

     label2:
        $z1_2 = Phi($z1 #0, $z1_1 #1);

        $r3 = r0.getDefaultIcon(z0, $z1_2);

        return $r3;
    }

    public void <init>()
    {
        org.gjt.sp.jedit.io.VFSFile r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, long, boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1, r2, r3;
        int i0, $i2, $i3, $i4, $i5;
        long l1;
        boolean z0, $z1, $z2, $z1_1, $z1_2, $z2_1, $z2_2, $z1_3, $z2_3;
        org.gjt.sp.jedit.io.VFS r4;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        i0 := @parameter3;

        l1 := @parameter4;

        z0 := @parameter5;

        specialinvoke r0.<init>();

        r0.name = r1;

        r0.path = r2;

        r0.deletePath = r3;

        r0.symlinkPath = r2;

        r0.type = i0;

        r0.length = l1;

        r0.hidden = z0;

(0)     if r2 == null goto label5;

        r4 = org.gjt.sp.jedit.io.VFSManager.getVFSForPath(r2);

        $i2 = r4.getCapabilities();

        $i3 = $i2 & 1;

        if $i3 == 0 goto label1;

        $z1 = 1;

(1)     goto label2;

     label1:
(2)     $z1_1 = 0;

     label2:
        $z1_2 = Phi($z1 #1, $z1_1 #2);

        r0.canRead = $z1_2;

        $i4 = r4.getCapabilities();

        $i5 = $i4 & 2;

        if $i5 == 0 goto label3;

        $z2 = 1;

(3)     goto label4;

     label3:
(4)     $z2_1 = 0;

     label4:
        $z2_2 = Phi($z2 #3, $z2_1 #4);

(5)     r0.canWrite = $z2_2;

     label5:
        $z1_3 = Phi($z1 #0, $z1_2 #5);

        $z2_3 = Phi($z2 #0, $z2_2 #5);

        return;
    }

    public org.gjt.sp.jedit.io.VFS getVFS()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;
        org.gjt.sp.jedit.io.VFS $r2;

        r0 := @this;

        $r1 = r0.path;

        $r2 = org.gjt.sp.jedit.io.VFSManager.getVFSForPath($r1);

        return $r2;
    }

    public java.lang.String getName()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.name;

        return $r1;
    }

    public void setName(java.lang.String)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        r0.name = r1;

        return;
    }

    public boolean isBinary(java.lang.Object) throws java.io.IOException
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.Object r1;
        java.io.InputStream r2;
        boolean z0;
        java.lang.Throwable r3, $r12;
        org.gjt.sp.jedit.io.VFS $r4;
        java.lang.String $r5, $r11;
        org.gjt.sp.jedit.View $r6;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this;

        r1 := @parameter0;

        $r4 = r0.getVFS();

        $r5 = r0.getPath();

        $r6 = org.gjt.sp.jedit.jEdit.getActiveView();

        r2 = $r4._createInputStream(r1, $r5, 0, $r6);

        if r2 != null goto label1;

        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = $r8.append("Unable to get a Stream for this file ");

        $r10 = $r9.append(r0);

        $r11 = $r10.toString();

        specialinvoke $r7.<init>($r11);

        throw $r7;

     label1:
        z0 = org.gjt.sp.jedit.MiscUtilities.isBinary(r2);

     label2:
        org.gjt.sp.util.IOUtilities.closeQuietly(r2);

        return z0;

     label3:
        $r12 := @caughtexception;

        r3 = $r12;

     label4:
        org.gjt.sp.util.IOUtilities.closeQuietly(r2);

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getPath()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.path;

        return $r1;
    }

    public void setPath(java.lang.String)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        r0.path = r1;

        return;
    }

    public java.lang.String getSymlinkPath()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.symlinkPath;

        return $r1;
    }

    public void setSymlinkPath(java.lang.String)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        r0.symlinkPath = r1;

        return;
    }

    public java.lang.String getDeletePath()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.deletePath;

        return $r1;
    }

    public void setDeletePath(java.lang.String)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1;

        r0 := @this;

        r1 := @parameter0;

        r0.deletePath = r1;

        return;
    }

    public int getType()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        int $i0;

        r0 := @this;

        $i0 = r0.type;

        return $i0;
    }

    public void setType(int)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        int i0;

        r0 := @this;

        i0 := @parameter0;

        r0.type = i0;

        return;
    }

    public long getLength()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        long $l0;

        r0 := @this;

        $l0 = r0.length;

        return $l0;
    }

    public void setLength(long)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        long l0;

        r0 := @this;

        l0 := @parameter0;

        r0.length = l0;

        return;
    }

    public boolean isHidden()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.hidden;

        return $z0;
    }

    public void setHidden(boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0;

        r0 := @this;

        z0 := @parameter0;

        r0.hidden = z0;

        return;
    }

    public boolean isReadable()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.canRead;

        return $z0;
    }

    public void setReadable(boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0;

        r0 := @this;

        z0 := @parameter0;

        r0.canRead = z0;

        return;
    }

    public boolean isWriteable()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.canWrite;

        return $z0;
    }

    public void setWriteable(boolean)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean z0;

        r0 := @this;

        z0 := @parameter0;

        r0.canWrite = z0;

        return;
    }

    public java.lang.String getExtendedAttribute(java.lang.String)
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i2;
        long $l1;
        java.lang.IllegalArgumentException $r10;

        r0 := @this;

        r1 := @parameter0;

        $z0 = r1.equals("type");

        if $z0 == 0 goto label05;

        $i2 = r0.getType();

        tableswitch($i2)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            default: goto label04;
        };

     label01:
        $r7 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.type.file");

        return $r7;

     label02:
        $r9 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.type.directory");

        return $r9;

     label03:
        $r8 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.type.filesystem");

        return $r8;

     label04:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<init>();

        throw $r10;

     label05:
        $z1 = r1.equals("status");

        if $z1 == 0 goto label09;

        $z3 = r0.isReadable();

        if $z3 == 0 goto label07;

        $z5 = r0.isWriteable();

        if $z5 == 0 goto label06;

        $r6 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.status.rw");

        return $r6;

     label06:
        $r5 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.status.ro");

        return $r5;

     label07:
        $z4 = r0.isWriteable();

        if $z4 == 0 goto label08;

        $r4 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.status.append");

        return $r4;

     label08:
        $r3 = org.gjt.sp.jedit.jEdit.getProperty("vfs.browser.status.no");

        return $r3;

     label09:
        $z2 = r1.equals("size");

        if $z2 == 0 goto label11;

        $i0 = r0.getType();

        if $i0 == 0 goto label10;

        return null;

     label10:
        $l1 = r0.getLength();

        $r2 = org.gjt.sp.util.StandardUtilities.formatFileSize($l1);

        return $r2;

     label11:
        return null;
    }

    public java.awt.Color getColor()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean $z0;
        java.awt.Color $r1, $r3;
        java.lang.String $r2;

        r0 := @this;

        $z0 = r0.colorCalculated;

        if $z0 != 0 goto label1;

        r0.colorCalculated = 1;

        $r2 = r0.name;

        $r3 = org.gjt.sp.jedit.io.VFS.getDefaultColorFor($r2);

        r0.color = $r3;

     label1:
        $r1 = r0.color;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 = r0.name;

        return $r1;
    }

    protected boolean fetchedAttrs()
    {
        org.gjt.sp.jedit.io.VFSFile r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.fetchedAttrs;

        return $z0;
    }

    protected void fetchAttrs()
    {
        org.gjt.sp.jedit.io.VFSFile r0;

        r0 := @this;

        r0.fetchedAttrs = 1;

        return;
    }

    public long getModified()
    {
        org.gjt.sp.jedit.io.VFSFile r0;

        r0 := @this;

        return 0L;
    }
}
