public class org.gjt.sp.jedit.bsh.TargetError extends org.gjt.sp.jedit.bsh.EvalError
{
    java.lang.Throwable target;
    boolean inNativeCode;

    public void <init>(java.lang.String, java.lang.Throwable, org.gjt.sp.jedit.bsh.SimpleNode, org.gjt.sp.jedit.bsh.CallStack, boolean)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.String r1;
        java.lang.Throwable r2;
        org.gjt.sp.jedit.bsh.SimpleNode r3;
        org.gjt.sp.jedit.bsh.CallStack r4;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        r4 := @parameter3;

        z0 := @parameter4;

        specialinvoke r0.<init>(r1, r3, r4);

        r0.target = r2;

        r0.inNativeCode = z0;

        return;
    }

    public void <init>(java.lang.Throwable, org.gjt.sp.jedit.bsh.SimpleNode, org.gjt.sp.jedit.bsh.CallStack)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.Throwable r1;
        org.gjt.sp.jedit.bsh.SimpleNode r2;
        org.gjt.sp.jedit.bsh.CallStack r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        specialinvoke r0.<init>("TargetError", r1, r2, r3, 0);

        return;
    }

    public java.lang.Throwable getTarget()
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.Throwable $r1, $r2, $r3, $r5;
        boolean $z0;
        java.lang.reflect.InvocationTargetException $r4;

        r0 := @this;

        $r1 = r0.target;

        $z0 = $r1 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label1;

        $r3 = r0.target;

        $r4 = (java.lang.reflect.InvocationTargetException) $r3;

        $r5 = $r4.getTargetException();

        return $r5;

     label1:
        $r2 = r0.target;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r7;
        java.lang.String $r2, $r6, $r8;
        java.lang.Throwable $r5;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = specialinvoke r0.toString();

        $r3 = $r1.append($r2);

        $r4 = $r3.append("\nTarget exception: ");

        $r5 = r0.target;

        $r6 = r0.printTargetError($r5);

        $r7 = $r4.append($r6);

        $r8 = $r7.toString();

        return $r8;
    }

    public void printStackTrace()
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.io.PrintStream $r1;

        r0 := @this;

        $r1 = java.lang.System.err;

        r0.printStackTrace(0, $r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.io.PrintStream r1;

        r0 := @this;

        r1 := @parameter0;

        r0.printStackTrace(0, r1);

        return;
    }

    public void printStackTrace(boolean, java.io.PrintStream)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        boolean z0;
        java.io.PrintStream r1;
        java.lang.Throwable $r2;

        r0 := @this;

        z0 := @parameter0;

        r1 := @parameter1;

        if z0 == 0 goto label1;

        specialinvoke r0.printStackTrace(r1);

        r1.println("--- Target Stack Trace ---");

     label1:
        $r2 = r0.target;

        $r2.printStackTrace(r1);

        return;
    }

    public java.lang.String printTargetError(java.lang.Throwable)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.Throwable r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r7;
        java.lang.String $r6, r8, r8_1, r8_2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.target;

        r8 = $r2.toString();

        $z0 = org.gjt.sp.jedit.bsh.Capabilities.canGenerateInterfaces();

(0)     if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r4 = $r3.append(r8);

        $r5 = $r4.append("\n");

        $r6 = r0.xPrintTargetError(r1);

        $r7 = $r5.append($r6);

(1)     r8_1 = $r7.toString();

     label1:
        r8_2 = Phi(r8 #0, r8_1 #1);

        return r8_2;
    }

    public java.lang.String xPrintTargetError(java.lang.Throwable)
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r7, $r12, $r14;
        org.gjt.sp.jedit.bsh.Interpreter r3, $r5;
        org.gjt.sp.jedit.bsh.EvalError r4, $r8;
        java.lang.Object $r6;
        org.gjt.sp.jedit.bsh.InterpreterError $r9;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this;

        r1 := @parameter0;

        r2 = "import java.lang.reflect.UndeclaredThrowableException;String result=\"\";while ( target instanceof UndeclaredThrowableException ) {\ttarget=target.getUndeclaredThrowable(); \tresult+=\"Nested: \"+target.toString();}return result;";

        $r5 = new org.gjt.sp.jedit.bsh.Interpreter;

        specialinvoke $r5.<init>();

        r3 = $r5;

     label1:
        r3.set("target", r1);

        $r6 = r3.eval(r2);

        $r7 = (java.lang.String) $r6;

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = new org.gjt.sp.jedit.bsh.InterpreterError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r11 = $r10.append("xprintarget: ");

        $r12 = r4.toString();

        $r13 = $r11.append($r12);

        $r14 = $r13.toString();

        specialinvoke $r9.<init>($r14);

        throw $r9;

        catch org.gjt.sp.jedit.bsh.EvalError from label1 to label2 with label3;
    }

    public boolean inNativeCode()
    {
        org.gjt.sp.jedit.bsh.TargetError r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.inNativeCode;

        return $z0;
    }
}
