public class org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare extends java.lang.Object implements java.util.Comparator
{
    private boolean sortIgnoreCase;
    private boolean sortMixFilesAndDirs;

    public void <init>(boolean, boolean)
    {
        org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare r0;
        boolean z0, z1;

        r0 := @this;

        z0 := @parameter0;

        z1 := @parameter1;

        specialinvoke r0.<init>();

        r0.sortMixFilesAndDirs = z0;

        r0.sortIgnoreCase = z1;

        return;
    }

    public int compare(org.gjt.sp.jedit.io.VFSFile, org.gjt.sp.jedit.io.VFSFile)
    {
        org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare r0;
        org.gjt.sp.jedit.io.VFSFile r1, r2;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $z0 = r0.sortMixFilesAndDirs;

        if $z0 != 0 goto label1;

        $i1 = r1.getType();

        $i2 = r2.getType();

        if $i1 == $i2 goto label1;

        $i3 = r2.getType();

        $i4 = r1.getType();

        $i5 = $i3 - $i4;

        return $i5;

     label1:
        $r3 = r1.getName();

        $r4 = r2.getName();

        $z1 = r0.sortIgnoreCase;

        $i0 = org.gjt.sp.util.StandardUtilities.compareStrings($r3, $r4, $z1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.gjt.sp.jedit.io.VFS$DirectoryEntryCompare r0;
        java.lang.Object r1, r2;
        org.gjt.sp.jedit.io.VFSFile $r3, $r4;
        int $i0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r4 = (org.gjt.sp.jedit.io.VFSFile) r1;

        $r3 = (org.gjt.sp.jedit.io.VFSFile) r2;

        $i0 = r0.compare($r4, $r3);

        return $i0;
    }
}
