public class org.gjt.sp.jedit.bsh.org.objectweb.asm.Label extends java.lang.Object
{
    org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter owner;
    boolean resolved;
    int position;
    private int referenceCount;
    private int[] srcAndRefPositions;
    int beginStackSize;
    int maxStackSize;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.Edge successors;
    org.gjt.sp.jedit.bsh.org.objectweb.asm.Label next;
    boolean pushed;

    public void <init>()
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Label r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    void put(org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter, org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector, int, boolean)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Label r0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter r1;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.ByteVector r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        i0 := @parameter2;

        z0 := @parameter3;

        $z1 = r0.resolved;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $i6 = r0.position;

        $i7 = $i6 - i0;

        r2.put4($i7);

        goto label4;

     label1:
        $i4 = r0.position;

        $i5 = $i4 - i0;

        r2.put2($i5);

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $i3 = -1 - i0;

        $i2 = r2.length;

        specialinvoke r0.addReference($i3, $i2);

        r2.put4(-1);

        goto label4;

     label3:
        $i1 = r2.length;

        specialinvoke r0.addReference(i0, $i1);

        r2.put2(-1);

     label4:
        return;
    }

    private void addReference(int, int)
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Label r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this;

        i0 := @parameter0;

        i1 := @parameter1;

        $r2 = r0.srcAndRefPositions;

        if $r2 != null goto label1;

        $r9 = newarray (int)[6];

        r0.srcAndRefPositions = $r9;

     label1:
        $i3 = r0.referenceCount;

        $r3 = r0.srcAndRefPositions;

        $i2 = lengthof $r3;

        if $i3 < $i2 goto label2;

        $r6 = r0.srcAndRefPositions;

        $i8 = lengthof $r6;

        $i9 = $i8 + 6;

        r1 = newarray (int)[$i9];

        $r8 = r0.srcAndRefPositions;

        $r7 = r0.srcAndRefPositions;

        $i10 = lengthof $r7;

        java.lang.System.arraycopy($r8, 0, r1, 0, $i10);

        r0.srcAndRefPositions = r1;

     label2:
        $r4 = r0.srcAndRefPositions;

        $i4 = r0.referenceCount;

        $i5 = $i4 + 1;

        r0.referenceCount = $i5;

        $r4[$i4] = i0;

        $r5 = r0.srcAndRefPositions;

        $i6 = r0.referenceCount;

        $i7 = $i6 + 1;

        r0.referenceCount = $i7;

        $r5[$i6] = i1;

        return;
    }

    boolean resolve(org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter, int, byte[])
    {
        org.gjt.sp.jedit.bsh.org.objectweb.asm.Label r0;
        org.gjt.sp.jedit.bsh.org.objectweb.asm.CodeWriter r1;
        int i0, i1, $i3, $i4, $i5, $i7, $i9, $i12, $i14, $i16, $i17, $i20, $i22, i23, i24, i25, i26, i27, i28, i29, i30, i31;
        byte[] r2;
        short s2;
        int[] $r3, $r4;
        byte $b6, $b8, $b10, $b11, $b13, $b15, $b18, $b19, $b21;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        r2 := @parameter2;

        z0 = 0;

        r0.resolved = 1;

        r0.position = i0;

(0)     i23 = 0;

     label1:
        i23 = Phi(i23 #0, i23 #5);

        z0 = Phi(z0 #0, z0 #5);

        $i3 = r0.referenceCount;

        if i23 >= $i3 goto label8;

        $r3 = r0.srcAndRefPositions;

        i24 = i23 + 1;

        i1 = $r3[i23];

        $r4 = r0.srcAndRefPositions;

        i23 = i24 + 1;

        i25 = $r4[i24];

        if i1 < 0 goto label6;

        i26 = i0 - i1;

        if i26 < -32768 goto label2;

(1)     if i26 <= 32767 goto label5;

     label2:
        $i12 = i25 - 1;

        $b13 = r2[$i12];

        s2 = $b13 & 255;

        if s2 > 168 goto label3;

        $i22 = i25 - 1;

        $i20 = s2 + 49;

        $b21 = (byte) $i20;

        r2[$i22] = $b21;

        goto label4;

     label3:
        $i16 = i25 - 1;

        $i14 = s2 + 20;

        $b15 = (byte) $i14;

        r2[$i16] = $b15;

     label4:
(2)     z0 = 1;

     label5:
        z0 = Phi(z0 #1, z0 #2);

        i27 = i25 + 1;

        $i17 = i26 >>> 8;

        $b18 = (byte) $i17;

        r2[i25] = $b18;

        $b19 = (byte) i26;

        r2[i27] = $b19;

(3)     goto label7;

     label6:
        $i4 = i0 + i1;

        i28 = $i4 + 1;

        i29 = i25 + 1;

        $i5 = i28 >>> 24;

        $b6 = (byte) $i5;

        r2[i25] = $b6;

        i30 = i29 + 1;

        $i7 = i28 >>> 16;

        $b8 = (byte) $i7;

        r2[i29] = $b8;

        i31 = i30 + 1;

        $i9 = i28 >>> 8;

        $b10 = (byte) $i9;

        r2[i30] = $b10;

        $b11 = (byte) i28;

(4)     r2[i31] = $b11;

     label7:
        z0 = Phi(z0 #3, z0 #4);

(5)     goto label1;

     label8:
        return z0;
    }
}
