class org.gjt.sp.jedit.bsh.BSHArrayInitializer extends org.gjt.sp.jedit.bsh.SimpleNode
{

    void <init>(int)
    {
        org.gjt.sp.jedit.bsh.BSHArrayInitializer r0;
        int i0;

        r0 := @this;

        i0 := @parameter0;

        specialinvoke r0.<init>(i0);

        return;
    }

    public java.lang.Object eval(org.gjt.sp.jedit.bsh.CallStack, org.gjt.sp.jedit.bsh.Interpreter) throws org.gjt.sp.jedit.bsh.EvalError
    {
        org.gjt.sp.jedit.bsh.BSHArrayInitializer r0;
        org.gjt.sp.jedit.bsh.CallStack r1;
        org.gjt.sp.jedit.bsh.Interpreter r2;
        org.gjt.sp.jedit.bsh.EvalError $r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 = new org.gjt.sp.jedit.bsh.EvalError;

        specialinvoke $r3.<init>("Array initializer has no base type.", r0, r1);

        throw $r3;
    }

    public java.lang.Object eval(java.lang.Class, int, org.gjt.sp.jedit.bsh.CallStack, org.gjt.sp.jedit.bsh.Interpreter) throws org.gjt.sp.jedit.bsh.EvalError
    {
        org.gjt.sp.jedit.bsh.BSHArrayInitializer r0, $r14;
        java.lang.Class r1;
        int i0, i1, $i2, i3;
        org.gjt.sp.jedit.bsh.CallStack r2;
        org.gjt.sp.jedit.bsh.Interpreter r3;
        int[] r4;
        java.lang.Object r5, r32, r33, r34;
        org.gjt.sp.jedit.bsh.SimpleNode r6;
        org.gjt.sp.jedit.bsh.Node $r7;
        boolean $z0;
        org.gjt.sp.jedit.bsh.Primitive $r8;
        org.gjt.sp.jedit.bsh.EvalError $r9, $r15, $r26;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r18, $r21, $r22, $r23, $r28, $r29, $r30;
        java.lang.String $r13, $r19, $r24, $r31;
        java.lang.IllegalArgumentException $r20, r36;
        org.gjt.sp.jedit.bsh.UtilEvalError $r25, r35;
        java.lang.ArrayStoreException $r27, r37;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        i1 = r0.jjtGetNumChildren();

        r4 = newarray (int)[i0];

        r4[0] = i1;

        r5 = java.lang.reflect.Array.newInstance(r1, r4);

(0)     i3 = 0;

     label01:
        r33 = Phi(r33 #0, r33 #8);

        r32 = Phi(r32 #0, r32 #8);

        i3 = Phi(i3 #0, i3 #8);

        if i3 >= i1 goto label15;

        $r7 = r0.jjtGetChild(i3);

        r6 = (org.gjt.sp.jedit.bsh.SimpleNode) $r7;

        $z0 = r6 instanceof org.gjt.sp.jedit.bsh.BSHArrayInitializer;

        if $z0 == 0 goto label03;

        if i0 >= 2 goto label02;

        $r15 = new org.gjt.sp.jedit.bsh.EvalError;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        $r17 = $r16.append("Invalid Location for Intializer, position: ");

        $r18 = $r17.append(i3);

        $r19 = $r18.toString();

        specialinvoke $r15.<init>($r19, r0, r2);

        throw $r15;

     label02:
        $r14 = (org.gjt.sp.jedit.bsh.BSHArrayInitializer) r6;

        $i2 = i0 - 1;

        r32 = $r14.eval(r1, $i2, r2, r3);

(1)     goto label04;

     label03:
(2)     r32 = r6.eval(r2, r3);

     label04:
        r32 = Phi(r32 #1, r32 #2);

        $r8 = org.gjt.sp.jedit.bsh.Primitive.VOID;

        if r32 != $r8 goto label05;

        $r9 = new org.gjt.sp.jedit.bsh.EvalError;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r11 = $r10.append("Void in array initializer, position");

        $r12 = $r11.append(i3);

        $r13 = $r12.toString();

        specialinvoke $r9.<init>($r13, r0, r2);

        throw $r9;

     label05:
        r33 = r32;

(3)     if i0 != 1 goto label10;

     label06:
        r34 = org.gjt.sp.jedit.bsh.Types.castObject(r32, r1, 0);

     label07:
        goto label09;

     label08:
        $r25 := @caughtexception;

        r35 = $r25;

        $r26 = r35.toEvalError("Error in array initializer", r0, r2);

        throw $r26;

     label09:
(4)     r33 = org.gjt.sp.jedit.bsh.Primitive.unwrap(r34);

     label10:
        r33 = Phi(r33 #3, r33 #4);

        java.lang.reflect.Array.set(r5, i3, r33);

     label11:
(5)     goto label14;

     label12:
        $r20 := @caughtexception;

        r33 = Phi(r33 #3);

        r36 = $r20;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<init>();

        $r22 = $r21.append("illegal arg");

        $r23 = $r22.append(r36);

        $r24 = $r23.toString();

        org.gjt.sp.jedit.bsh.Interpreter.debug($r24);

        specialinvoke r0.throwTypeError(r1, r32, i3, r2);

(6)     goto label14;

     label13:
        $r27 := @caughtexception;

        r33 = Phi(r33 #3);

        r37 = $r27;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        $r29 = $r28.append("arraystore");

        $r30 = $r29.append(r37);

        $r31 = $r30.toString();

        org.gjt.sp.jedit.bsh.Interpreter.debug($r31);

(7)     specialinvoke r0.throwTypeError(r1, r32, i3, r2);

     label14:
        r33 = Phi(r33 #5, r33 #6, r33 #7);

        i3 = i3 + 1;

(8)     goto label01;

     label15:
        return r5;

        catch org.gjt.sp.jedit.bsh.UtilEvalError from label06 to label07 with label08;
        catch java.lang.IllegalArgumentException from label10 to label11 with label12;
        catch java.lang.ArrayStoreException from label10 to label11 with label13;
    }

    private void throwTypeError(java.lang.Class, java.lang.Object, int, org.gjt.sp.jedit.bsh.CallStack) throws org.gjt.sp.jedit.bsh.EvalError
    {
        org.gjt.sp.jedit.bsh.BSHArrayInitializer r0;
        java.lang.Class r1, $r4, $r15;
        java.lang.Object r2;
        int i0;
        org.gjt.sp.jedit.bsh.CallStack r3;
        boolean $z0;
        org.gjt.sp.jedit.bsh.EvalError $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.String $r13, r16, r16_1, r16_2;
        org.gjt.sp.jedit.bsh.Primitive $r14;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        i0 := @parameter2;

        r3 := @parameter3;

        $z0 = r2 instanceof org.gjt.sp.jedit.bsh.Primitive;

        if $z0 == 0 goto label1;

        $r14 = (org.gjt.sp.jedit.bsh.Primitive) r2;

        $r15 = $r14.getType();

        r16 = $r15.getName();

(0)     goto label2;

     label1:
        $r4 = r2.getClass();

(1)     r16_1 = org.gjt.sp.jedit.bsh.Reflect.normalizeClassName($r4);

     label2:
        r16_2 = Phi(r16 #0, r16_1 #1);

        $r5 = new org.gjt.sp.jedit.bsh.EvalError;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r7 = $r6.append("Incompatible type: ");

        $r8 = $r7.append(r16_2);

        $r9 = $r8.append(" in initializer of array type: ");

        $r10 = $r9.append(r1);

        $r11 = $r10.append(" at position: ");

        $r12 = $r11.append(i0);

        $r13 = $r12.toString();

        specialinvoke $r5.<init>($r13, r0, r3);

        throw $r5;
    }
}
