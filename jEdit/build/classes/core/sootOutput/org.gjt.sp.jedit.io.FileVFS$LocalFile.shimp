public class org.gjt.sp.jedit.io.FileVFS$LocalFile extends org.gjt.sp.jedit.io.VFSFile
{
    private java.io.File file;
    public static java.text.DateFormat DATE_FORMAT;
    private long modified;
    private transient javax.swing.filechooser.FileSystemView fsView;
    private transient javax.swing.Icon icon;

    public void <init>(java.io.File)
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        java.io.File r1;
        java.lang.String r2, $r3;
        boolean $z0, $z1;
        byte $b0, $b0_1, $b0_2;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.file = r1;

        $r3 = r1.getName();

        r0.setName($r3);

        r2 = r1.getPath();

        r0.setPath(r2);

        r0.setDeletePath(r2);

        $z0 = r1.isHidden();

        r0.setHidden($z0);

        $z1 = r1.isDirectory();

        if $z1 == 0 goto label1;

        $b0 = 1;

(0)     goto label2;

     label1:
(1)     $b0_1 = 0;

     label2:
        $b0_2 = Phi($b0 #0, $b0_1 #1);

        r0.setType($b0_2);

        return;
    }

    public java.lang.String getExtendedAttribute(java.lang.String)
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        java.lang.String r1, $r2, $r5;
        boolean $z0;
        java.util.Date $r3;
        long $l0;
        java.text.DateFormat $r4;

        r0 := @this;

        r1 := @parameter0;

        r0.fetchAttrs();

        $z0 = r1.equals("modified");

        if $z0 == 0 goto label1;

        $r4 = org.gjt.sp.jedit.io.FileVFS$LocalFile.DATE_FORMAT;

        $r3 = new java.util.Date;

        $l0 = r0.modified;

        specialinvoke $r3.<init>($l0);

        $r5 = $r4.format($r3);

        return $r5;

     label1:
        $r2 = specialinvoke r0.getExtendedAttribute(r1);

        return $r2;
    }

    protected void fetchAttrs()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        boolean $z0, $z1, $z2;
        java.io.File $r1, $r4, $r5, $r6, $r7;
        java.lang.String $r2, $r3;
        long $l0, $l1;

        r0 := @this;

        $z0 = r0.fetchedAttrs();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.fetchAttrs();

        $r1 = r0.file;

        $r2 = $r1.getPath();

        $r3 = org.gjt.sp.jedit.MiscUtilities.resolveSymlinks($r2);

        r0.setSymlinkPath($r3);

        $r4 = r0.file;

        $z1 = $r4.canRead();

        r0.setReadable($z1);

        $r5 = r0.file;

        $z2 = $r5.canWrite();

        r0.setWriteable($z2);

        $r6 = r0.file;

        $l0 = $r6.length();

        r0.setLength($l0);

        $r7 = r0.file;

        $l1 = $r7.lastModified();

        r0.setModified($l1);

        return;
    }

    public javax.swing.Icon getIcon(boolean, boolean)
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        boolean z0, z1;
        javax.swing.Icon $r1, $r2, $r6;
        javax.swing.filechooser.FileSystemView $r3, $r5, $r7;
        java.io.File $r4;

        r0 := @this;

        z0 := @parameter0;

        z1 := @parameter1;

        $r1 = r0.icon;

        if $r1 != null goto label2;

        $r3 = r0.fsView;

        if $r3 != null goto label1;

        $r7 = javax.swing.filechooser.FileSystemView.getFileSystemView();

        r0.fsView = $r7;

     label1:
        $r5 = r0.fsView;

        $r4 = r0.file;

        $r6 = $r5.getSystemIcon($r4);

        r0.icon = $r6;

     label2:
        $r2 = r0.icon;

        return $r2;
    }

    public java.lang.String getSymlinkPath()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        java.lang.String $r1;

        r0 := @this;

        r0.fetchAttrs();

        $r1 = specialinvoke r0.getSymlinkPath();

        return $r1;
    }

    public long getLength()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        long $l0;

        r0 := @this;

        r0.fetchAttrs();

        $l0 = specialinvoke r0.getLength();

        return $l0;
    }

    public boolean isReadable()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        boolean $z0;

        r0 := @this;

        r0.fetchAttrs();

        $z0 = specialinvoke r0.isReadable();

        return $z0;
    }

    public boolean isWriteable()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        boolean $z0;

        r0 := @this;

        r0.fetchAttrs();

        $z0 = specialinvoke r0.isWriteable();

        return $z0;
    }

    public long getModified()
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        long $l0;

        r0 := @this;

        r0.fetchAttrs();

        $l0 = r0.modified;

        return $l0;
    }

    public void setModified(long)
    {
        org.gjt.sp.jedit.io.FileVFS$LocalFile r0;
        long l0;

        r0 := @this;

        l0 := @parameter0;

        r0.modified = l0;

        return;
    }

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<init>("yyyy/MM/dd HH:mm");

        org.gjt.sp.jedit.io.FileVFS$LocalFile.DATE_FORMAT = $r0;

        return;
    }
}
